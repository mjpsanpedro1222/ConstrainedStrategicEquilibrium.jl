var documenterSearchIndex = {"docs":
[{"location":"references/#References","page":"References","title":"References","text":"","category":"section"},{"location":"references/","page":"References","title":"References","text":"O. Armantier, J.-P. Florens and J.-F. Richard. Approximation of Nash equilbria in Bayesian games. Journal of Applied Econometrics 23, 965–981 (2008).\n\n\n\n","category":"page"},{"location":"generated/afr-progs-asym-sym-compare/#Symmetric-asymmetric-CSE-test-case","page":"Asymmetric - symmetric CSE test","title":"Symmetric - asymmetric CSE test case","text":"","category":"section"},{"location":"generated/afr-progs-asym-sym-compare/","page":"Asymmetric - symmetric CSE test","title":"Asymmetric - symmetric CSE test","text":"This example is using the asymmetric afrprogs code with two players with the same distribution (i.e. symmetric). The purpose is to test that the asymmetric code base can reproduce the symmetric result and we can also test this further by comparing the result to the BNE.","category":"page"},{"location":"generated/afr-progs-asym-sym-compare/#Install-dependencies","page":"Asymmetric - symmetric CSE test","title":"Install dependencies","text":"","category":"section"},{"location":"generated/afr-progs-asym-sym-compare/","page":"Asymmetric - symmetric CSE test","title":"Asymmetric - symmetric CSE test","text":"Make sure the required packages are installed by running the following from the root directory of this repo:","category":"page"},{"location":"generated/afr-progs-asym-sym-compare/","page":"Asymmetric - symmetric CSE test","title":"Asymmetric - symmetric CSE test","text":"using Pkg\nPkg.instantiate()","category":"page"},{"location":"generated/afr-progs-asym-sym-compare/#Load-required-modules","page":"Asymmetric - symmetric CSE test","title":"Load required modules","text":"","category":"section"},{"location":"generated/afr-progs-asym-sym-compare/","page":"Asymmetric - symmetric CSE test","title":"Asymmetric - symmetric CSE test","text":"using ConstrainedStrategicEquilibrium\nusing Plots\nusing Distributions\nusing NonlinearSolve","category":"page"},{"location":"generated/afr-progs-asym-sym-compare/#Define-some-parameters","page":"Asymmetric - symmetric CSE test","title":"Define some parameters","text":"","category":"section"},{"location":"generated/afr-progs-asym-sym-compare/","page":"Asymmetric - symmetric CSE test","title":"Asymmetric - symmetric CSE test","text":"Here we set the initial and final values of n.","category":"page"},{"location":"generated/afr-progs-asym-sym-compare/","page":"Asymmetric - symmetric CSE test","title":"Asymmetric - symmetric CSE test","text":"inin = 2\nmaxn = 6","category":"page"},{"location":"generated/afr-progs-asym-sym-compare/","page":"Asymmetric - symmetric CSE test","title":"Asymmetric - symmetric CSE test","text":"6","category":"page"},{"location":"generated/afr-progs-asym-sym-compare/#Solve-for-2-players","page":"Asymmetric - symmetric CSE test","title":"Solve for 2 players","text":"","category":"section"},{"location":"generated/afr-progs-asym-sym-compare/","page":"Asymmetric - symmetric CSE test","title":"Asymmetric - symmetric CSE test","text":"Start from n=2 like the original sym.f code with the following initial guess:","category":"page"},{"location":"generated/afr-progs-asym-sym-compare/","page":"Asymmetric - symmetric CSE test","title":"Asymmetric - symmetric CSE test","text":"xguess = [1.58285, 1.02813, -1.66483]","category":"page"},{"location":"generated/afr-progs-asym-sym-compare/","page":"Asymmetric - symmetric CSE test","title":"Asymmetric - symmetric CSE test","text":"3-element Vector{Float64}:\n  1.58285\n  1.02813\n -1.66483","category":"page"},{"location":"generated/afr-progs-asym-sym-compare/","page":"Asymmetric - symmetric CSE test","title":"Asymmetric - symmetric CSE test","text":"Create the problem:","category":"page"},{"location":"generated/afr-progs-asym-sym-compare/","page":"Asymmetric - symmetric CSE test","title":"Asymmetric - symmetric CSE test","text":"cse_prob2 = AsymmetricAfrprogsCSEProblem(\n    inin=inin,\n    maxn=maxn,\n    np=2,\n    mc=10000,\n    solver_kwargs=(show_trace=Val(false), maxiters=2000, abstol=1e-6, reltol=1e-6),\n    solver_initial_guess=xguess,\n    distributions=[Beta(3, 3), Beta(3, 3)],\n    knot_refinement_strategy=:even_spacing,\n)","category":"page"},{"location":"generated/afr-progs-asym-sym-compare/","page":"Asymmetric - symmetric CSE test","title":"Asymmetric - symmetric CSE test","text":"AsymmetricAfrprogsCSEProblem(np=2, mc=10000, n=2..6)","category":"page"},{"location":"generated/afr-progs-asym-sym-compare/","page":"Asymmetric - symmetric CSE test","title":"Asymmetric - symmetric CSE test","text":"Compute the solution to the CSE problem for 2 players:","category":"page"},{"location":"generated/afr-progs-asym-sym-compare/","page":"Asymmetric - symmetric CSE test","title":"Asymmetric - symmetric CSE test","text":"solutions2 = compute_cse(cse_prob2)","category":"page"},{"location":"generated/afr-progs-asym-sym-compare/","page":"Asymmetric - symmetric CSE test","title":"Asymmetric - symmetric CSE test","text":"5-element Vector{ConstrainedStrategicEquilibrium.AsymmetricCSESolution}:\n AsymmetricCSESolution(n=02, C_1=(NaN, NaN), C_2=2.40e-08)\n AsymmetricCSESolution(n=03, C_1=(9.30e-04, 9.30e-04), C_2=4.67e-07)\n AsymmetricCSESolution(n=04, C_1=(4.70e-04, 4.70e-04), C_2=4.98e-07)\n AsymmetricCSESolution(n=05, C_1=(2.63e-04, 2.63e-04), C_2=4.62e-07)\n AsymmetricCSESolution(n=06, C_1=(1.91e-04, 1.91e-04), C_2=4.93e-07)","category":"page"},{"location":"generated/afr-progs-asym-sym-compare/","page":"Asymmetric - symmetric CSE test","title":"Asymmetric - symmetric CSE test","text":"We also compute the BNE for 2 players for the same problem:","category":"page"},{"location":"generated/afr-progs-asym-sym-compare/","page":"Asymmetric - symmetric CSE test","title":"Asymmetric - symmetric CSE test","text":"bne2x = Vector{Float64}(undef, 101)\nbne2y = Vector{Float64}(undef, 101)\nfor m = 1:101\n    ti = (m - 1.0) / 100.0\n    if ti == 0\n        true_bne = 0.0\n    else\n        true_bne = compute_bne(ti, cse_prob2.distributions[1], cse_prob2.np)\n    end\n    bne2x[m] = ti\n    bne2y[m] = true_bne\nend","category":"page"},{"location":"generated/afr-progs-asym-sym-compare/#Solve-for-4-players","page":"Asymmetric - symmetric CSE test","title":"Solve for 4 players","text":"","category":"section"},{"location":"generated/afr-progs-asym-sym-compare/","page":"Asymmetric - symmetric CSE test","title":"Asymmetric - symmetric CSE test","text":"Define the initial guess and create the problem:","category":"page"},{"location":"generated/afr-progs-asym-sym-compare/","page":"Asymmetric - symmetric CSE test","title":"Asymmetric - symmetric CSE test","text":"xguess = [-log(0.25), -log(0.25), log(0.25)]\ncse_prob4 = AsymmetricAfrprogsCSEProblem(\n    inin=inin,\n    maxn=maxn,\n    np=4,\n    mc=10000,\n    solver_kwargs=(show_trace=Val(false), maxiters=2000, abstol=1e-6, reltol=1e-6),\n    solver_initial_guess=xguess,\n    distributions=[Beta(3, 3), Beta(3, 3)],\n    knot_refinement_strategy=:even_spacing,\n)","category":"page"},{"location":"generated/afr-progs-asym-sym-compare/","page":"Asymmetric - symmetric CSE test","title":"Asymmetric - symmetric CSE test","text":"AsymmetricAfrprogsCSEProblem(np=4, mc=10000, n=2..6)","category":"page"},{"location":"generated/afr-progs-asym-sym-compare/","page":"Asymmetric - symmetric CSE test","title":"Asymmetric - symmetric CSE test","text":"Compute the solution to the CSE problem for 4 players:","category":"page"},{"location":"generated/afr-progs-asym-sym-compare/","page":"Asymmetric - symmetric CSE test","title":"Asymmetric - symmetric CSE test","text":"solutions4 = compute_cse(cse_prob4)","category":"page"},{"location":"generated/afr-progs-asym-sym-compare/","page":"Asymmetric - symmetric CSE test","title":"Asymmetric - symmetric CSE test","text":"5-element Vector{ConstrainedStrategicEquilibrium.AsymmetricCSESolution}:\n AsymmetricCSESolution(n=02, C_1=(NaN, NaN), C_2=4.45e-10)\n AsymmetricCSESolution(n=03, C_1=(1.07e-03, 1.07e-03), C_2=4.59e-07)\n AsymmetricCSESolution(n=04, C_1=(5.14e-04, 5.14e-04), C_2=2.30e-08)\n AsymmetricCSESolution(n=05, C_1=(2.99e-04, 2.99e-04), C_2=1.38e-07)\n AsymmetricCSESolution(n=06, C_1=(2.05e-04, 2.05e-04), C_2=2.01e-07)","category":"page"},{"location":"generated/afr-progs-asym-sym-compare/","page":"Asymmetric - symmetric CSE test","title":"Asymmetric - symmetric CSE test","text":"We also compute the BNE for 4 players for the same problem:","category":"page"},{"location":"generated/afr-progs-asym-sym-compare/","page":"Asymmetric - symmetric CSE test","title":"Asymmetric - symmetric CSE test","text":"bne4x = Vector{Float64}(undef, 101)\nbne4y = Vector{Float64}(undef, 101)\nfor m = 1:101\n    ti = (m - 1.0) / 100.0\n    if ti == 0\n        true_bne = 0.0\n    else\n        true_bne = compute_bne(ti, cse_prob4.distributions[1], cse_prob4.np)\n    end\n    bne4x[m] = ti\n    bne4y[m] = true_bne\nend","category":"page"},{"location":"generated/afr-progs-asym-sym-compare/#Results","page":"Asymmetric - symmetric CSE test","title":"Results","text":"","category":"section"},{"location":"generated/afr-progs-asym-sym-compare/","page":"Asymmetric - symmetric CSE test","title":"Asymmetric - symmetric CSE test","text":"First some sanity checking that both problems were solved successfully.","category":"page"},{"location":"generated/afr-progs-asym-sym-compare/","page":"Asymmetric - symmetric CSE test","title":"Asymmetric - symmetric CSE test","text":"if length(solutions2) != length(solutions2)\n    throw(\"solutions are not the same length\")\nend\nif (!solutions2[end].success) || (!solutions4[end].success)\n    throw(\"final solution not successful\")\nend","category":"page"},{"location":"generated/afr-progs-asym-sym-compare/","page":"Asymmetric - symmetric CSE test","title":"Asymmetric - symmetric CSE test","text":"Plot the two CSE solutions and BNE solutions on the same graph:","category":"page"},{"location":"generated/afr-progs-asym-sym-compare/","page":"Asymmetric - symmetric CSE test","title":"Asymmetric - symmetric CSE test","text":"cseplot(\n    solutions2[end],\n    cse_label=Dict(:bidder1 => \"CSE 1 (np=2)\", :bidder2 => \"CSE 2 (np=2)\"),\n    cse_colour=Dict(:bidder1 => :1, :bidder2 => :2),\n    knot_label=Dict(:bidder1 => \"\", :bidder2 => \"\"),\n    dpi=300,\n)\ncseplot!(\n    solutions4[end],\n    cse_label=Dict(:bidder1 => \"CSE 1 (np=4)\", :bidder2 => \"CSE 2 (np=4)\"),\n    cse_colour=Dict(:bidder1 => :3, :bidder2 => :4),\n    knot_label=Dict(:bidder1 => \"\", :bidder2 => \"\"),\n    title=\"Comparing CSE against BNE for num players 2 and 4\\nasym code but all bidders are Beta(3,3)\",\n    dpi=300,\n)\nplot!(bne2x, bne2y, label=\"BNE (np=2)\", dpi=300, seriescolor=:5)\nplot!(bne4x, bne4y, label=\"BNE (np=4)\", dpi=300, seriescolor=:6)","category":"page"},{"location":"generated/afr-progs-asym-sym-compare/","page":"Asymmetric - symmetric CSE test","title":"Asymmetric - symmetric CSE test","text":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"600\" height=\"400\" viewBox=\"0 0 2400 1600\">\n<defs>\n  <clipPath id=\"clip270\">\n    <rect x=\"0\" y=\"0\" width=\"2400\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip270)\" d=\"M0 1600 L2400 1600 L2400 0 L0 0  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip271\">\n    <rect x=\"480\" y=\"0\" width=\"1681\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip270)\" d=\"M219.866 1423.18 L2352.76 1423.18 L2352.76 149.392 L219.866 149.392  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip272\">\n    <rect x=\"219\" y=\"149\" width=\"2134\" height=\"1275\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip272)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"280.231,1423.18 280.231,149.392 \"/>\n<polyline clip-path=\"url(#clip272)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"783.271,1423.18 783.271,149.392 \"/>\n<polyline clip-path=\"url(#clip272)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1286.31,1423.18 1286.31,149.392 \"/>\n<polyline clip-path=\"url(#clip272)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1789.35,1423.18 1789.35,149.392 \"/>\n<polyline clip-path=\"url(#clip272)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2292.39,1423.18 2292.39,149.392 \"/>\n<polyline clip-path=\"url(#clip272)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"219.866,1387.13 2352.76,1387.13 \"/>\n<polyline clip-path=\"url(#clip272)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"219.866,1205.9 2352.76,1205.9 \"/>\n<polyline clip-path=\"url(#clip272)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"219.866,1024.66 2352.76,1024.66 \"/>\n<polyline clip-path=\"url(#clip272)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"219.866,843.43 2352.76,843.43 \"/>\n<polyline clip-path=\"url(#clip272)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"219.866,662.197 2352.76,662.197 \"/>\n<polyline clip-path=\"url(#clip272)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"219.866,480.963 2352.76,480.963 \"/>\n<polyline clip-path=\"url(#clip272)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"219.866,299.73 2352.76,299.73 \"/>\n<polyline clip-path=\"url(#clip270)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"219.866,1423.18 2352.76,1423.18 \"/>\n<polyline clip-path=\"url(#clip270)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"280.231,1423.18 280.231,1404.28 \"/>\n<polyline clip-path=\"url(#clip270)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"783.271,1423.18 783.271,1404.28 \"/>\n<polyline clip-path=\"url(#clip270)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1286.31,1423.18 1286.31,1404.28 \"/>\n<polyline clip-path=\"url(#clip270)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1789.35,1423.18 1789.35,1404.28 \"/>\n<polyline clip-path=\"url(#clip270)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2292.39,1423.18 2292.39,1404.28 \"/>\n<path clip-path=\"url(#clip270)\" d=\"M242.535 1454.1 Q238.923 1454.1 237.095 1457.66 Q235.289 1461.2 235.289 1468.33 Q235.289 1475.44 237.095 1479.01 Q238.923 1482.55 242.535 1482.55 Q246.169 1482.55 247.974 1479.01 Q249.803 1475.44 249.803 1468.33 Q249.803 1461.2 247.974 1457.66 Q246.169 1454.1 242.535 1454.1 M242.535 1450.39 Q248.345 1450.39 251.4 1455 Q254.479 1459.58 254.479 1468.33 Q254.479 1477.06 251.4 1481.67 Q248.345 1486.25 242.535 1486.25 Q236.724 1486.25 233.646 1481.67 Q230.59 1477.06 230.59 1468.33 Q230.59 1459.58 233.646 1455 Q236.724 1450.39 242.535 1450.39 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M262.696 1479.7 L267.581 1479.7 L267.581 1485.58 L262.696 1485.58 L262.696 1479.7 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M287.766 1454.1 Q284.155 1454.1 282.326 1457.66 Q280.52 1461.2 280.52 1468.33 Q280.52 1475.44 282.326 1479.01 Q284.155 1482.55 287.766 1482.55 Q291.4 1482.55 293.206 1479.01 Q295.034 1475.44 295.034 1468.33 Q295.034 1461.2 293.206 1457.66 Q291.4 1454.1 287.766 1454.1 M287.766 1450.39 Q293.576 1450.39 296.631 1455 Q299.71 1459.58 299.71 1468.33 Q299.71 1477.06 296.631 1481.67 Q293.576 1486.25 287.766 1486.25 Q281.956 1486.25 278.877 1481.67 Q275.821 1477.06 275.821 1468.33 Q275.821 1459.58 278.877 1455 Q281.956 1450.39 287.766 1450.39 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M317.928 1454.1 Q314.317 1454.1 312.488 1457.66 Q310.682 1461.2 310.682 1468.33 Q310.682 1475.44 312.488 1479.01 Q314.317 1482.55 317.928 1482.55 Q321.562 1482.55 323.367 1479.01 Q325.196 1475.44 325.196 1468.33 Q325.196 1461.2 323.367 1457.66 Q321.562 1454.1 317.928 1454.1 M317.928 1450.39 Q323.738 1450.39 326.793 1455 Q329.872 1459.58 329.872 1468.33 Q329.872 1477.06 326.793 1481.67 Q323.738 1486.25 317.928 1486.25 Q312.117 1486.25 309.039 1481.67 Q305.983 1477.06 305.983 1468.33 Q305.983 1459.58 309.039 1455 Q312.117 1450.39 317.928 1450.39 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M746.072 1454.1 Q742.461 1454.1 740.632 1457.66 Q738.827 1461.2 738.827 1468.33 Q738.827 1475.44 740.632 1479.01 Q742.461 1482.55 746.072 1482.55 Q749.706 1482.55 751.512 1479.01 Q753.341 1475.44 753.341 1468.33 Q753.341 1461.2 751.512 1457.66 Q749.706 1454.1 746.072 1454.1 M746.072 1450.39 Q751.882 1450.39 754.938 1455 Q758.017 1459.58 758.017 1468.33 Q758.017 1477.06 754.938 1481.67 Q751.882 1486.25 746.072 1486.25 Q740.262 1486.25 737.183 1481.67 Q734.128 1477.06 734.128 1468.33 Q734.128 1459.58 737.183 1455 Q740.262 1450.39 746.072 1450.39 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M766.234 1479.7 L771.118 1479.7 L771.118 1485.58 L766.234 1485.58 L766.234 1479.7 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M785.331 1481.64 L801.651 1481.64 L801.651 1485.58 L779.706 1485.58 L779.706 1481.64 Q782.368 1478.89 786.952 1474.26 Q791.558 1469.61 792.739 1468.27 Q794.984 1465.74 795.864 1464.01 Q796.766 1462.25 796.766 1460.56 Q796.766 1457.8 794.822 1456.07 Q792.901 1454.33 789.799 1454.33 Q787.6 1454.33 785.146 1455.09 Q782.716 1455.86 779.938 1457.41 L779.938 1452.69 Q782.762 1451.55 785.216 1450.97 Q787.669 1450.39 789.706 1450.39 Q795.077 1450.39 798.271 1453.08 Q801.465 1455.77 801.465 1460.26 Q801.465 1462.39 800.655 1464.31 Q799.868 1466.2 797.762 1468.8 Q797.183 1469.47 794.081 1472.69 Q790.979 1475.88 785.331 1481.64 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M811.512 1451.02 L829.868 1451.02 L829.868 1454.96 L815.794 1454.96 L815.794 1463.43 Q816.813 1463.08 817.831 1462.92 Q818.85 1462.73 819.868 1462.73 Q825.655 1462.73 829.035 1465.9 Q832.414 1469.08 832.414 1474.49 Q832.414 1480.07 828.942 1483.17 Q825.47 1486.25 819.151 1486.25 Q816.975 1486.25 814.706 1485.88 Q812.461 1485.51 810.053 1484.77 L810.053 1480.07 Q812.137 1481.2 814.359 1481.76 Q816.581 1482.32 819.058 1482.32 Q823.063 1482.32 825.4 1480.21 Q827.738 1478.1 827.738 1474.49 Q827.738 1470.88 825.4 1468.77 Q823.063 1466.67 819.058 1466.67 Q817.183 1466.67 815.308 1467.08 Q813.456 1467.5 811.512 1468.38 L811.512 1451.02 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M1248.61 1454.1 Q1245 1454.1 1243.17 1457.66 Q1241.37 1461.2 1241.37 1468.33 Q1241.37 1475.44 1243.17 1479.01 Q1245 1482.55 1248.61 1482.55 Q1252.25 1482.55 1254.05 1479.01 Q1255.88 1475.44 1255.88 1468.33 Q1255.88 1461.2 1254.05 1457.66 Q1252.25 1454.1 1248.61 1454.1 M1248.61 1450.39 Q1254.42 1450.39 1257.48 1455 Q1260.56 1459.58 1260.56 1468.33 Q1260.56 1477.06 1257.48 1481.67 Q1254.42 1486.25 1248.61 1486.25 Q1242.8 1486.25 1239.73 1481.67 Q1236.67 1477.06 1236.67 1468.33 Q1236.67 1459.58 1239.73 1455 Q1242.8 1450.39 1248.61 1450.39 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M1268.78 1479.7 L1273.66 1479.7 L1273.66 1485.58 L1268.78 1485.58 L1268.78 1479.7 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M1283.89 1451.02 L1302.25 1451.02 L1302.25 1454.96 L1288.17 1454.96 L1288.17 1463.43 Q1289.19 1463.08 1290.21 1462.92 Q1291.23 1462.73 1292.25 1462.73 Q1298.04 1462.73 1301.42 1465.9 Q1304.79 1469.08 1304.79 1474.49 Q1304.79 1480.07 1301.32 1483.17 Q1297.85 1486.25 1291.53 1486.25 Q1289.36 1486.25 1287.09 1485.88 Q1284.84 1485.51 1282.43 1484.77 L1282.43 1480.07 Q1284.52 1481.2 1286.74 1481.76 Q1288.96 1482.32 1291.44 1482.32 Q1295.44 1482.32 1297.78 1480.21 Q1300.12 1478.1 1300.12 1474.49 Q1300.12 1470.88 1297.78 1468.77 Q1295.44 1466.67 1291.44 1466.67 Q1289.56 1466.67 1287.69 1467.08 Q1285.84 1467.5 1283.89 1468.38 L1283.89 1451.02 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M1324.01 1454.1 Q1320.4 1454.1 1318.57 1457.66 Q1316.76 1461.2 1316.76 1468.33 Q1316.76 1475.44 1318.57 1479.01 Q1320.4 1482.55 1324.01 1482.55 Q1327.64 1482.55 1329.45 1479.01 Q1331.28 1475.44 1331.28 1468.33 Q1331.28 1461.2 1329.45 1457.66 Q1327.64 1454.1 1324.01 1454.1 M1324.01 1450.39 Q1329.82 1450.39 1332.87 1455 Q1335.95 1459.58 1335.95 1468.33 Q1335.95 1477.06 1332.87 1481.67 Q1329.82 1486.25 1324.01 1486.25 Q1318.2 1486.25 1315.12 1481.67 Q1312.06 1477.06 1312.06 1468.33 Q1312.06 1459.58 1315.12 1455 Q1318.2 1450.39 1324.01 1450.39 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M1752.15 1454.1 Q1748.54 1454.1 1746.71 1457.66 Q1744.91 1461.2 1744.91 1468.33 Q1744.91 1475.44 1746.71 1479.01 Q1748.54 1482.55 1752.15 1482.55 Q1755.79 1482.55 1757.59 1479.01 Q1759.42 1475.44 1759.42 1468.33 Q1759.42 1461.2 1757.59 1457.66 Q1755.79 1454.1 1752.15 1454.1 M1752.15 1450.39 Q1757.96 1450.39 1761.02 1455 Q1764.1 1459.58 1764.1 1468.33 Q1764.1 1477.06 1761.02 1481.67 Q1757.96 1486.25 1752.15 1486.25 Q1746.34 1486.25 1743.26 1481.67 Q1740.21 1477.06 1740.21 1468.33 Q1740.21 1459.58 1743.26 1455 Q1746.34 1450.39 1752.15 1450.39 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M1772.31 1479.7 L1777.2 1479.7 L1777.2 1485.58 L1772.31 1485.58 L1772.31 1479.7 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M1786.2 1451.02 L1808.43 1451.02 L1808.43 1453.01 L1795.88 1485.58 L1790.99 1485.58 L1802.8 1454.96 L1786.2 1454.96 L1786.2 1451.02 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M1817.59 1451.02 L1835.95 1451.02 L1835.95 1454.96 L1821.87 1454.96 L1821.87 1463.43 Q1822.89 1463.08 1823.91 1462.92 Q1824.93 1462.73 1825.95 1462.73 Q1831.74 1462.73 1835.11 1465.9 Q1838.49 1469.08 1838.49 1474.49 Q1838.49 1480.07 1835.02 1483.17 Q1831.55 1486.25 1825.23 1486.25 Q1823.05 1486.25 1820.79 1485.88 Q1818.54 1485.51 1816.13 1484.77 L1816.13 1480.07 Q1818.22 1481.2 1820.44 1481.76 Q1822.66 1482.32 1825.14 1482.32 Q1829.14 1482.32 1831.48 1480.21 Q1833.82 1478.1 1833.82 1474.49 Q1833.82 1470.88 1831.48 1468.77 Q1829.14 1466.67 1825.14 1466.67 Q1823.26 1466.67 1821.39 1467.08 Q1819.54 1467.5 1817.59 1468.38 L1817.59 1451.02 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M2244.46 1481.64 L2252.1 1481.64 L2252.1 1455.28 L2243.79 1456.95 L2243.79 1452.69 L2252.06 1451.02 L2256.73 1451.02 L2256.73 1481.64 L2264.37 1481.64 L2264.37 1485.58 L2244.46 1485.58 L2244.46 1481.64 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M2273.81 1479.7 L2278.7 1479.7 L2278.7 1485.58 L2273.81 1485.58 L2273.81 1479.7 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M2298.88 1454.1 Q2295.27 1454.1 2293.44 1457.66 Q2291.64 1461.2 2291.64 1468.33 Q2291.64 1475.44 2293.44 1479.01 Q2295.27 1482.55 2298.88 1482.55 Q2302.52 1482.55 2304.32 1479.01 Q2306.15 1475.44 2306.15 1468.33 Q2306.15 1461.2 2304.32 1457.66 Q2302.52 1454.1 2298.88 1454.1 M2298.88 1450.39 Q2304.69 1450.39 2307.75 1455 Q2310.83 1459.58 2310.83 1468.33 Q2310.83 1477.06 2307.75 1481.67 Q2304.69 1486.25 2298.88 1486.25 Q2293.07 1486.25 2290 1481.67 Q2286.94 1477.06 2286.94 1468.33 Q2286.94 1459.58 2290 1455 Q2293.07 1450.39 2298.88 1450.39 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M2329.05 1454.1 Q2325.43 1454.1 2323.61 1457.66 Q2321.8 1461.2 2321.8 1468.33 Q2321.8 1475.44 2323.61 1479.01 Q2325.43 1482.55 2329.05 1482.55 Q2332.68 1482.55 2334.49 1479.01 Q2336.31 1475.44 2336.31 1468.33 Q2336.31 1461.2 2334.49 1457.66 Q2332.68 1454.1 2329.05 1454.1 M2329.05 1450.39 Q2334.86 1450.39 2337.91 1455 Q2340.99 1459.58 2340.99 1468.33 Q2340.99 1477.06 2337.91 1481.67 Q2334.86 1486.25 2329.05 1486.25 Q2323.24 1486.25 2320.16 1481.67 Q2317.1 1477.06 2317.1 1468.33 Q2317.1 1459.58 2320.16 1455 Q2323.24 1450.39 2329.05 1450.39 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M1067.57 1525.81 L1067.57 1543.66 L1075.65 1543.66 Q1080.14 1543.66 1082.59 1541.34 Q1085.04 1539.02 1085.04 1534.72 Q1085.04 1530.45 1082.59 1528.13 Q1080.14 1525.81 1075.65 1525.81 L1067.57 1525.81 M1061.14 1520.52 L1075.65 1520.52 Q1083.64 1520.52 1087.72 1524.15 Q1091.82 1527.75 1091.82 1534.72 Q1091.82 1541.75 1087.72 1545.35 Q1083.64 1548.95 1075.65 1548.95 L1067.57 1548.95 L1067.57 1568.04 L1061.14 1568.04 L1061.14 1520.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M1119.7 1537.87 Q1118.72 1537.3 1117.54 1537.04 Q1116.39 1536.76 1114.99 1536.76 Q1110.03 1536.76 1107.36 1540 Q1104.71 1543.22 1104.71 1549.27 L1104.71 1568.04 L1098.83 1568.04 L1098.83 1532.4 L1104.71 1532.4 L1104.71 1537.93 Q1106.56 1534.69 1109.52 1533.13 Q1112.48 1531.54 1116.71 1531.54 Q1117.32 1531.54 1118.05 1531.63 Q1118.78 1531.7 1119.67 1531.85 L1119.7 1537.87 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M1125.85 1532.4 L1131.7 1532.4 L1131.7 1568.04 L1125.85 1568.04 L1125.85 1532.4 M1125.85 1518.52 L1131.7 1518.52 L1131.7 1525.93 L1125.85 1525.93 L1125.85 1518.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M1139.76 1532.4 L1145.96 1532.4 L1157.1 1562.31 L1168.24 1532.4 L1174.45 1532.4 L1161.08 1568.04 L1153.12 1568.04 L1139.76 1532.4 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M1198.73 1550.12 Q1191.64 1550.12 1188.9 1551.75 Q1186.16 1553.37 1186.16 1557.29 Q1186.16 1560.4 1188.2 1562.25 Q1190.27 1564.07 1193.8 1564.07 Q1198.67 1564.07 1201.6 1560.63 Q1204.56 1557.16 1204.56 1551.43 L1204.56 1550.12 L1198.73 1550.12 M1210.42 1547.71 L1210.42 1568.04 L1204.56 1568.04 L1204.56 1562.63 Q1202.55 1565.88 1199.56 1567.44 Q1196.57 1568.97 1192.24 1568.97 Q1186.77 1568.97 1183.52 1565.91 Q1180.31 1562.82 1180.31 1557.67 Q1180.31 1551.65 1184.32 1548.6 Q1188.36 1545.54 1196.35 1545.54 L1204.56 1545.54 L1204.56 1544.97 Q1204.56 1540.93 1201.89 1538.73 Q1199.24 1536.5 1194.44 1536.5 Q1191.38 1536.5 1188.49 1537.23 Q1185.59 1537.97 1182.92 1539.43 L1182.92 1534.02 Q1186.13 1532.78 1189.15 1532.17 Q1192.18 1531.54 1195.04 1531.54 Q1202.78 1531.54 1206.6 1535.55 Q1210.42 1539.56 1210.42 1547.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M1228.27 1522.27 L1228.27 1532.4 L1240.33 1532.4 L1240.33 1536.95 L1228.27 1536.95 L1228.27 1556.3 Q1228.27 1560.66 1229.45 1561.9 Q1230.66 1563.14 1234.32 1563.14 L1240.33 1563.14 L1240.33 1568.04 L1234.32 1568.04 Q1227.54 1568.04 1224.96 1565.53 Q1222.38 1562.98 1222.38 1556.3 L1222.38 1536.95 L1218.09 1536.95 L1218.09 1532.4 L1222.38 1532.4 L1222.38 1522.27 L1228.27 1522.27 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M1278.53 1548.76 L1278.53 1551.62 L1251.6 1551.62 Q1251.98 1557.67 1255.23 1560.85 Q1258.51 1564 1264.33 1564 Q1267.71 1564 1270.86 1563.17 Q1274.04 1562.35 1277.16 1560.69 L1277.16 1566.23 Q1274.01 1567.57 1270.7 1568.27 Q1267.39 1568.97 1263.98 1568.97 Q1255.45 1568.97 1250.46 1564 Q1245.49 1559.04 1245.49 1550.57 Q1245.49 1541.82 1250.2 1536.69 Q1254.94 1531.54 1262.96 1531.54 Q1270.16 1531.54 1274.33 1536.18 Q1278.53 1540.8 1278.53 1548.76 M1272.67 1547.04 Q1272.61 1542.23 1269.97 1539.37 Q1267.36 1536.5 1263.03 1536.5 Q1258.13 1536.5 1255.17 1539.27 Q1252.24 1542.04 1251.79 1547.07 L1272.67 1547.04 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M1285.18 1547.58 L1302.34 1547.58 L1302.34 1552.8 L1285.18 1552.8 L1285.18 1547.58 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M1320.35 1568.04 L1302.21 1520.52 L1308.93 1520.52 L1323.98 1560.53 L1339.07 1520.52 L1345.75 1520.52 L1327.64 1568.04 L1320.35 1568.04 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M1363.57 1550.12 Q1356.48 1550.12 1353.74 1551.75 Q1351 1553.37 1351 1557.29 Q1351 1560.4 1353.04 1562.25 Q1355.11 1564.07 1358.64 1564.07 Q1363.51 1564.07 1366.44 1560.63 Q1369.4 1557.16 1369.4 1551.43 L1369.4 1550.12 L1363.57 1550.12 M1375.26 1547.71 L1375.26 1568.04 L1369.4 1568.04 L1369.4 1562.63 Q1367.39 1565.88 1364.4 1567.44 Q1361.41 1568.97 1357.08 1568.97 Q1351.61 1568.97 1348.36 1565.91 Q1345.15 1562.82 1345.15 1557.67 Q1345.15 1551.65 1349.16 1548.6 Q1353.2 1545.54 1361.19 1545.54 L1369.4 1545.54 L1369.4 1544.97 Q1369.4 1540.93 1366.73 1538.73 Q1364.08 1536.5 1359.28 1536.5 Q1356.22 1536.5 1353.33 1537.23 Q1350.43 1537.97 1347.76 1539.43 L1347.76 1534.02 Q1350.97 1532.78 1353.99 1532.17 Q1357.02 1531.54 1359.88 1531.54 Q1367.62 1531.54 1371.44 1535.55 Q1375.26 1539.56 1375.26 1547.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M1387.32 1518.52 L1393.18 1518.52 L1393.18 1568.04 L1387.32 1568.04 L1387.32 1518.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M1404.82 1553.98 L1404.82 1532.4 L1410.68 1532.4 L1410.68 1553.75 Q1410.68 1558.81 1412.65 1561.36 Q1414.63 1563.87 1418.57 1563.87 Q1423.32 1563.87 1426.05 1560.85 Q1428.82 1557.83 1428.82 1552.61 L1428.82 1532.4 L1434.68 1532.4 L1434.68 1568.04 L1428.82 1568.04 L1428.82 1562.57 Q1426.69 1565.82 1423.86 1567.41 Q1421.06 1568.97 1417.33 1568.97 Q1411.19 1568.97 1408.01 1565.15 Q1404.82 1561.33 1404.82 1553.98 M1419.56 1531.54 L1419.56 1531.54 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M1477.23 1548.76 L1477.23 1551.62 L1450.31 1551.62 Q1450.69 1557.67 1453.94 1560.85 Q1457.21 1564 1463.04 1564 Q1466.41 1564 1469.56 1563.17 Q1472.75 1562.35 1475.87 1560.69 L1475.87 1566.23 Q1472.71 1567.57 1469.4 1568.27 Q1466.09 1568.97 1462.69 1568.97 Q1454.16 1568.97 1449.16 1564 Q1444.2 1559.04 1444.2 1550.57 Q1444.2 1541.82 1448.91 1536.69 Q1453.65 1531.54 1461.67 1531.54 Q1468.86 1531.54 1473.03 1536.18 Q1477.23 1540.8 1477.23 1548.76 M1471.38 1547.04 Q1471.31 1542.23 1468.67 1539.37 Q1466.06 1536.5 1461.73 1536.5 Q1456.83 1536.5 1453.87 1539.27 Q1450.94 1542.04 1450.5 1547.07 L1471.38 1547.04 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M1509.57 1533.45 L1509.57 1538.98 Q1507.09 1537.71 1504.42 1537.07 Q1501.74 1536.44 1498.88 1536.44 Q1494.52 1536.44 1492.32 1537.77 Q1490.16 1539.11 1490.16 1541.79 Q1490.16 1543.82 1491.72 1545 Q1493.28 1546.15 1497.99 1547.2 L1499.99 1547.64 Q1506.23 1548.98 1508.84 1551.43 Q1511.48 1553.85 1511.48 1558.21 Q1511.48 1563.17 1507.54 1566.07 Q1503.62 1568.97 1496.75 1568.97 Q1493.88 1568.97 1490.76 1568.39 Q1487.67 1567.85 1484.24 1566.74 L1484.24 1560.69 Q1487.48 1562.38 1490.63 1563.24 Q1493.79 1564.07 1496.87 1564.07 Q1501.01 1564.07 1503.24 1562.66 Q1505.47 1561.23 1505.47 1558.65 Q1505.47 1556.27 1503.84 1554.99 Q1502.25 1553.72 1496.81 1552.54 L1494.77 1552.07 Q1489.33 1550.92 1486.91 1548.56 Q1484.49 1546.18 1484.49 1542.04 Q1484.49 1537.01 1488.06 1534.27 Q1491.62 1531.54 1498.18 1531.54 Q1501.42 1531.54 1504.29 1532.01 Q1507.15 1532.49 1509.57 1533.45 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip270)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"219.866,1423.18 219.866,149.392 \"/>\n<polyline clip-path=\"url(#clip270)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"219.866,1387.13 238.764,1387.13 \"/>\n<polyline clip-path=\"url(#clip270)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"219.866,1205.9 238.764,1205.9 \"/>\n<polyline clip-path=\"url(#clip270)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"219.866,1024.66 238.764,1024.66 \"/>\n<polyline clip-path=\"url(#clip270)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"219.866,843.43 238.764,843.43 \"/>\n<polyline clip-path=\"url(#clip270)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"219.866,662.197 238.764,662.197 \"/>\n<polyline clip-path=\"url(#clip270)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"219.866,480.963 238.764,480.963 \"/>\n<polyline clip-path=\"url(#clip270)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"219.866,299.73 238.764,299.73 \"/>\n<path clip-path=\"url(#clip270)\" d=\"M126.691 1372.93 Q123.08 1372.93 121.251 1376.49 Q119.445 1380.03 119.445 1387.16 Q119.445 1394.27 121.251 1397.84 Q123.08 1401.38 126.691 1401.38 Q130.325 1401.38 132.13 1397.84 Q133.959 1394.27 133.959 1387.16 Q133.959 1380.03 132.13 1376.49 Q130.325 1372.93 126.691 1372.93 M126.691 1369.22 Q132.501 1369.22 135.556 1373.83 Q138.635 1378.41 138.635 1387.16 Q138.635 1395.89 135.556 1400.5 Q132.501 1405.08 126.691 1405.08 Q120.88 1405.08 117.802 1400.5 Q114.746 1395.89 114.746 1387.16 Q114.746 1378.41 117.802 1373.83 Q120.88 1369.22 126.691 1369.22 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M146.853 1398.53 L151.737 1398.53 L151.737 1404.41 L146.853 1404.41 L146.853 1398.53 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M171.922 1372.93 Q168.311 1372.93 166.482 1376.49 Q164.677 1380.03 164.677 1387.16 Q164.677 1394.27 166.482 1397.84 Q168.311 1401.38 171.922 1401.38 Q175.556 1401.38 177.362 1397.84 Q179.19 1394.27 179.19 1387.16 Q179.19 1380.03 177.362 1376.49 Q175.556 1372.93 171.922 1372.93 M171.922 1369.22 Q177.732 1369.22 180.788 1373.83 Q183.866 1378.41 183.866 1387.16 Q183.866 1395.89 180.788 1400.5 Q177.732 1405.08 171.922 1405.08 Q166.112 1405.08 163.033 1400.5 Q159.978 1395.89 159.978 1387.16 Q159.978 1378.41 163.033 1373.83 Q166.112 1369.22 171.922 1369.22 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M127.917 1191.69 Q124.306 1191.69 122.478 1195.26 Q120.672 1198.8 120.672 1205.93 Q120.672 1213.04 122.478 1216.6 Q124.306 1220.14 127.917 1220.14 Q131.552 1220.14 133.357 1216.6 Q135.186 1213.04 135.186 1205.93 Q135.186 1198.8 133.357 1195.26 Q131.552 1191.69 127.917 1191.69 M127.917 1187.99 Q133.728 1187.99 136.783 1192.6 Q139.862 1197.18 139.862 1205.93 Q139.862 1214.66 136.783 1219.26 Q133.728 1223.85 127.917 1223.85 Q122.107 1223.85 119.029 1219.26 Q115.973 1214.66 115.973 1205.93 Q115.973 1197.18 119.029 1192.6 Q122.107 1187.99 127.917 1187.99 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M148.079 1217.3 L152.964 1217.3 L152.964 1223.18 L148.079 1223.18 L148.079 1217.3 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M163.959 1219.24 L171.598 1219.24 L171.598 1192.88 L163.288 1194.54 L163.288 1190.28 L171.552 1188.62 L176.227 1188.62 L176.227 1219.24 L183.866 1219.24 L183.866 1223.18 L163.959 1223.18 L163.959 1219.24 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M128.288 1010.46 Q124.677 1010.46 122.848 1014.03 Q121.043 1017.57 121.043 1024.7 Q121.043 1031.8 122.848 1035.37 Q124.677 1038.91 128.288 1038.91 Q131.922 1038.91 133.728 1035.37 Q135.556 1031.8 135.556 1024.7 Q135.556 1017.57 133.728 1014.03 Q131.922 1010.46 128.288 1010.46 M128.288 1006.76 Q134.098 1006.76 137.154 1011.36 Q140.232 1015.95 140.232 1024.7 Q140.232 1033.42 137.154 1038.03 Q134.098 1042.61 128.288 1042.61 Q122.478 1042.61 119.399 1038.03 Q116.343 1033.42 116.343 1024.7 Q116.343 1015.95 119.399 1011.36 Q122.478 1006.76 128.288 1006.76 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M148.45 1036.06 L153.334 1036.06 L153.334 1041.94 L148.45 1041.94 L148.45 1036.06 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M167.547 1038.01 L183.866 1038.01 L183.866 1041.94 L161.922 1041.94 L161.922 1038.01 Q164.584 1035.25 169.167 1030.62 Q173.774 1025.97 174.954 1024.63 Q177.2 1022.11 178.079 1020.37 Q178.982 1018.61 178.982 1016.92 Q178.982 1014.17 177.038 1012.43 Q175.116 1010.69 172.014 1010.69 Q169.815 1010.69 167.362 1011.46 Q164.931 1012.22 162.153 1013.77 L162.153 1009.05 Q164.977 1007.92 167.431 1007.34 Q169.885 1006.76 171.922 1006.76 Q177.292 1006.76 180.487 1009.44 Q183.681 1012.13 183.681 1016.62 Q183.681 1018.75 182.871 1020.67 Q182.084 1022.57 179.977 1025.16 Q179.399 1025.83 176.297 1029.05 Q173.195 1032.24 167.547 1038.01 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M127.339 829.228 Q123.728 829.228 121.899 832.793 Q120.093 836.335 120.093 843.464 Q120.093 850.571 121.899 854.136 Q123.728 857.677 127.339 857.677 Q130.973 857.677 132.779 854.136 Q134.607 850.571 134.607 843.464 Q134.607 836.335 132.779 832.793 Q130.973 829.228 127.339 829.228 M127.339 825.525 Q133.149 825.525 136.204 830.131 Q139.283 834.715 139.283 843.464 Q139.283 852.191 136.204 856.798 Q133.149 861.381 127.339 861.381 Q121.529 861.381 118.45 856.798 Q115.394 852.191 115.394 843.464 Q115.394 834.715 118.45 830.131 Q121.529 825.525 127.339 825.525 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M147.501 854.83 L152.385 854.83 L152.385 860.71 L147.501 860.71 L147.501 854.83 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M176.737 842.076 Q180.093 842.793 181.968 845.062 Q183.866 847.33 183.866 850.664 Q183.866 855.779 180.348 858.58 Q176.829 861.381 170.348 861.381 Q168.172 861.381 165.857 860.941 Q163.565 860.525 161.112 859.668 L161.112 855.154 Q163.056 856.288 165.371 856.867 Q167.686 857.446 170.209 857.446 Q174.607 857.446 176.899 855.71 Q179.214 853.974 179.214 850.664 Q179.214 847.608 177.061 845.895 Q174.931 844.159 171.112 844.159 L167.084 844.159 L167.084 840.316 L171.297 840.316 Q174.746 840.316 176.575 838.951 Q178.403 837.562 178.403 834.969 Q178.403 832.307 176.505 830.895 Q174.63 829.46 171.112 829.46 Q169.19 829.46 166.991 829.877 Q164.792 830.293 162.153 831.173 L162.153 827.006 Q164.815 826.266 167.13 825.895 Q169.468 825.525 171.528 825.525 Q176.852 825.525 179.954 827.955 Q183.056 830.363 183.056 834.483 Q183.056 837.353 181.413 839.344 Q179.769 841.312 176.737 842.076 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M126.205 647.995 Q122.593 647.995 120.765 651.56 Q118.959 655.102 118.959 662.231 Q118.959 669.338 120.765 672.903 Q122.593 676.444 126.205 676.444 Q129.839 676.444 131.644 672.903 Q133.473 669.338 133.473 662.231 Q133.473 655.102 131.644 651.56 Q129.839 647.995 126.205 647.995 M126.205 644.292 Q132.015 644.292 135.07 648.898 Q138.149 653.481 138.149 662.231 Q138.149 670.958 135.07 675.565 Q132.015 680.148 126.205 680.148 Q120.394 680.148 117.316 675.565 Q114.26 670.958 114.26 662.231 Q114.26 653.481 117.316 648.898 Q120.394 644.292 126.205 644.292 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M146.366 673.597 L151.251 673.597 L151.251 679.477 L146.366 679.477 L146.366 673.597 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M174.283 648.991 L162.477 667.44 L174.283 667.44 L174.283 648.991 M173.056 644.917 L178.936 644.917 L178.936 667.44 L183.866 667.44 L183.866 671.329 L178.936 671.329 L178.936 679.477 L174.283 679.477 L174.283 671.329 L158.681 671.329 L158.681 666.815 L173.056 644.917 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M127.686 466.762 Q124.075 466.762 122.246 470.327 Q120.441 473.869 120.441 480.998 Q120.441 488.105 122.246 491.669 Q124.075 495.211 127.686 495.211 Q131.32 495.211 133.126 491.669 Q134.954 488.105 134.954 480.998 Q134.954 473.869 133.126 470.327 Q131.32 466.762 127.686 466.762 M127.686 463.058 Q133.496 463.058 136.552 467.665 Q139.63 472.248 139.63 480.998 Q139.63 489.725 136.552 494.331 Q133.496 498.915 127.686 498.915 Q121.876 498.915 118.797 494.331 Q115.742 489.725 115.742 480.998 Q115.742 472.248 118.797 467.665 Q121.876 463.058 127.686 463.058 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M147.848 492.364 L152.732 492.364 L152.732 498.243 L147.848 498.243 L147.848 492.364 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M162.964 463.683 L181.32 463.683 L181.32 467.619 L167.246 467.619 L167.246 476.091 Q168.264 475.744 169.283 475.582 Q170.302 475.396 171.32 475.396 Q177.107 475.396 180.487 478.568 Q183.866 481.739 183.866 487.156 Q183.866 492.734 180.394 495.836 Q176.922 498.915 170.602 498.915 Q168.427 498.915 166.158 498.544 Q163.913 498.174 161.505 497.433 L161.505 492.734 Q163.589 493.868 165.811 494.424 Q168.033 494.98 170.51 494.98 Q174.514 494.98 176.852 492.873 Q179.19 490.767 179.19 487.156 Q179.19 483.544 176.852 481.438 Q174.514 479.332 170.51 479.332 Q168.635 479.332 166.76 479.748 Q164.908 480.165 162.964 481.044 L162.964 463.683 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M126.529 285.529 Q122.918 285.529 121.089 289.094 Q119.283 292.635 119.283 299.765 Q119.283 306.871 121.089 310.436 Q122.918 313.978 126.529 313.978 Q130.163 313.978 131.968 310.436 Q133.797 306.871 133.797 299.765 Q133.797 292.635 131.968 289.094 Q130.163 285.529 126.529 285.529 M126.529 281.825 Q132.339 281.825 135.394 286.432 Q138.473 291.015 138.473 299.765 Q138.473 308.492 135.394 313.098 Q132.339 317.682 126.529 317.682 Q120.718 317.682 117.64 313.098 Q114.584 308.492 114.584 299.765 Q114.584 291.015 117.64 286.432 Q120.718 281.825 126.529 281.825 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M146.691 311.131 L151.575 311.131 L151.575 317.01 L146.691 317.01 L146.691 311.131 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M172.339 297.867 Q169.19 297.867 167.339 300.02 Q165.51 302.172 165.51 305.922 Q165.51 309.649 167.339 311.825 Q169.19 313.978 172.339 313.978 Q175.487 313.978 177.315 311.825 Q179.167 309.649 179.167 305.922 Q179.167 302.172 177.315 300.02 Q175.487 297.867 172.339 297.867 M181.621 283.214 L181.621 287.473 Q179.862 286.64 178.056 286.2 Q176.274 285.76 174.514 285.76 Q169.885 285.76 167.431 288.885 Q165.001 292.01 164.653 298.33 Q166.019 296.316 168.079 295.251 Q170.139 294.163 172.616 294.163 Q177.825 294.163 180.834 297.334 Q183.866 300.483 183.866 305.922 Q183.866 311.246 180.718 314.464 Q177.57 317.682 172.339 317.682 Q166.343 317.682 163.172 313.098 Q160.001 308.492 160.001 299.765 Q160.001 291.571 163.89 286.71 Q167.778 281.825 174.329 281.825 Q176.089 281.825 177.871 282.173 Q179.676 282.52 181.621 283.214 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M41.3104 844.15 L58.7206 844.15 L58.7206 833.838 Q58.7206 828.65 56.5881 826.167 Q54.4238 823.653 49.9996 823.653 Q45.5436 823.653 43.4429 826.167 Q41.3104 828.65 41.3104 833.838 L41.3104 844.15 M21.7677 844.15 L36.0905 844.15 L36.0905 834.634 Q36.0905 829.923 34.34 827.631 Q32.5576 825.308 28.9291 825.308 Q25.3325 825.308 23.5501 827.631 Q21.7677 829.923 21.7677 834.634 L21.7677 844.15 M16.4842 850.58 L16.4842 834.156 Q16.4842 826.804 19.5397 822.825 Q22.5952 818.847 28.2289 818.847 Q32.5894 818.847 35.1675 820.884 Q37.7456 822.921 38.3822 826.867 Q39.4007 822.125 42.6472 819.515 Q45.8619 816.873 50.6998 816.873 Q57.0655 816.873 60.5348 821.202 Q64.0042 825.531 64.0042 833.52 L64.0042 850.58 L16.4842 850.58 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M28.3562 806.115 L28.3562 800.259 L64.0042 800.259 L64.0042 806.115 L28.3562 806.115 M14.479 806.115 L14.479 800.259 L21.895 800.259 L21.895 806.115 L14.479 806.115 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M33.7671 764.547 L14.479 764.547 L14.479 758.691 L64.0042 758.691 L64.0042 764.547 L58.657 764.547 Q61.8398 766.393 63.3994 769.226 Q64.9272 772.027 64.9272 775.974 Q64.9272 782.435 59.771 786.509 Q54.6147 790.551 46.212 790.551 Q37.8093 790.551 32.6531 786.509 Q27.4968 782.435 27.4968 775.974 Q27.4968 772.027 29.0564 769.226 Q30.5842 766.393 33.7671 764.547 M46.212 784.504 Q52.6732 784.504 56.3653 781.862 Q60.0256 779.188 60.0256 774.541 Q60.0256 769.894 56.3653 767.221 Q52.6732 764.547 46.212 764.547 Q39.7508 764.547 36.0905 767.221 Q32.3984 769.894 32.3984 774.541 Q32.3984 779.188 36.0905 781.862 Q39.7508 784.504 46.212 784.504 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M29.4065 723.902 L34.9447 723.902 Q33.6716 726.385 33.035 729.058 Q32.3984 731.732 32.3984 734.596 Q32.3984 738.957 33.7352 741.153 Q35.072 743.317 37.7456 743.317 Q39.7826 743.317 40.9603 741.758 Q42.1061 740.198 43.1565 735.488 L43.6021 733.482 Q44.9389 727.244 47.3897 724.634 Q49.8086 721.992 54.1691 721.992 Q59.1344 721.992 62.0308 725.939 Q64.9272 729.854 64.9272 736.729 Q64.9272 739.594 64.3543 742.713 Q63.8132 745.8 62.6992 749.238 L56.6518 749.238 Q58.3387 745.991 59.198 742.84 Q60.0256 739.689 60.0256 736.602 Q60.0256 732.464 58.6251 730.236 Q57.1929 728.008 54.6147 728.008 Q52.2276 728.008 50.9545 729.631 Q49.6813 731.223 48.5037 736.665 L48.0262 738.702 Q46.8804 744.145 44.5251 746.564 Q42.138 748.983 38.0002 748.983 Q32.9713 748.983 30.2341 745.418 Q27.4968 741.853 27.4968 735.297 Q27.4968 732.05 27.9743 729.186 Q28.4517 726.321 29.4065 723.902 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M539.266 27.0875 L539.266 33.2507 Q536.315 30.5019 532.959 29.1419 Q529.631 27.782 525.87 27.782 Q518.462 27.782 514.527 32.3248 Q510.592 36.8386 510.592 45.4034 Q510.592 53.9392 514.527 58.482 Q518.462 62.9959 525.87 62.9959 Q529.631 62.9959 532.959 61.636 Q536.315 60.276 539.266 57.5272 L539.266 63.6325 Q536.199 65.7158 532.756 66.7575 Q529.342 67.7991 525.522 67.7991 Q515.713 67.7991 510.071 61.8096 Q504.429 55.7911 504.429 45.4034 Q504.429 34.9868 510.071 28.9972 Q515.713 22.9788 525.522 22.9788 Q529.4 22.9788 532.814 24.0204 Q536.257 25.0331 539.266 27.0875 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M560.621 38.2854 Q556.338 38.2854 553.85 41.6418 Q551.361 44.9694 551.361 50.7853 Q551.361 56.6013 553.821 59.9577 Q556.309 63.2853 560.621 63.2853 Q564.874 63.2853 567.362 59.9288 Q569.851 56.5723 569.851 50.7853 Q569.851 45.0272 567.362 41.6708 Q564.874 38.2854 560.621 38.2854 M560.621 33.7715 Q567.565 33.7715 571.529 38.2854 Q575.493 42.7992 575.493 50.7853 Q575.493 58.7425 571.529 63.2853 Q567.565 67.7991 560.621 67.7991 Q553.647 67.7991 549.683 63.2853 Q545.748 58.7425 545.748 50.7853 Q545.748 42.7992 549.683 38.2854 Q553.647 33.7715 560.621 33.7715 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M609.55 40.7738 Q611.546 37.1859 614.324 35.4787 Q617.102 33.7715 620.863 33.7715 Q625.927 33.7715 628.676 37.3305 Q631.425 40.8606 631.425 47.3999 L631.425 66.96 L626.072 66.96 L626.072 47.5735 Q626.072 42.915 624.422 40.6581 Q622.773 38.4011 619.388 38.4011 Q615.25 38.4011 612.848 41.15 Q610.447 43.8988 610.447 48.6441 L610.447 66.96 L605.094 66.96 L605.094 47.5735 Q605.094 42.8861 603.444 40.6581 Q601.795 38.4011 598.352 38.4011 Q594.272 38.4011 591.87 41.1789 Q589.469 43.9277 589.469 48.6441 L589.469 66.96 L584.116 66.96 L584.116 34.5528 L589.469 34.5528 L589.469 39.5875 Q591.292 36.6072 593.838 35.1893 Q596.384 33.7715 599.885 33.7715 Q603.415 33.7715 605.875 35.5655 Q608.363 37.3595 609.55 40.7738 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M647.194 62.0989 L647.194 79.2863 L641.841 79.2863 L641.841 34.5528 L647.194 34.5528 L647.194 39.4717 Q648.872 36.5782 651.419 35.1893 Q653.994 33.7715 657.553 33.7715 Q663.456 33.7715 667.13 38.459 Q670.834 43.1465 670.834 50.7853 Q670.834 58.4242 667.13 63.1116 Q663.456 67.7991 657.553 67.7991 Q653.994 67.7991 651.419 66.4102 Q648.872 64.9924 647.194 62.0989 M665.307 50.7853 Q665.307 44.9115 662.877 41.584 Q660.475 38.2275 656.251 38.2275 Q652.026 38.2275 649.596 41.584 Q647.194 44.9115 647.194 50.7853 Q647.194 56.6591 649.596 60.0156 Q652.026 63.3431 656.251 63.3431 Q660.475 63.3431 662.877 60.0156 Q665.307 56.6591 665.307 50.7853 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M694.387 50.6696 Q687.935 50.6696 685.446 52.1453 Q682.958 53.621 682.958 57.18 Q682.958 60.0156 684.81 61.6938 Q686.69 63.3431 689.902 63.3431 Q694.329 63.3431 696.991 60.2181 Q699.682 57.0642 699.682 51.8559 L699.682 50.6696 L694.387 50.6696 M705.006 48.4705 L705.006 66.96 L699.682 66.96 L699.682 62.041 Q697.859 64.9924 695.139 66.4102 Q692.42 67.7991 688.484 67.7991 Q683.508 67.7991 680.556 65.0214 Q677.634 62.2147 677.634 57.5272 Q677.634 52.0585 681.28 49.2807 Q684.954 46.5029 692.217 46.5029 L699.682 46.5029 L699.682 45.9821 Q699.682 42.3074 697.252 40.3108 Q694.85 38.2854 690.481 38.2854 Q687.703 38.2854 685.07 38.9509 Q682.437 39.6164 680.006 40.9474 L680.006 36.0285 Q682.929 34.9 685.678 34.3502 Q688.427 33.7715 691.031 33.7715 Q698.062 33.7715 701.534 37.4173 Q705.006 41.0631 705.006 48.4705 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M734.752 39.5296 Q733.855 39.0088 732.784 38.7773 Q731.742 38.5169 730.469 38.5169 Q725.955 38.5169 723.525 41.4682 Q721.123 44.3907 721.123 49.8883 L721.123 66.96 L715.77 66.96 L715.77 34.5528 L721.123 34.5528 L721.123 39.5875 Q722.801 36.6361 725.492 35.2183 Q728.183 33.7715 732.032 33.7715 Q732.581 33.7715 733.247 33.8583 Q733.912 33.9162 734.723 34.0609 L734.752 39.5296 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M740.336 34.5528 L745.66 34.5528 L745.66 66.96 L740.336 66.96 L740.336 34.5528 M740.336 21.9371 L745.66 21.9371 L745.66 28.679 L740.336 28.679 L740.336 21.9371 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M783.739 47.3999 L783.739 66.96 L778.415 66.96 L778.415 47.5735 Q778.415 42.9729 776.621 40.687 Q774.827 38.4011 771.239 38.4011 Q766.927 38.4011 764.439 41.15 Q761.95 43.8988 761.95 48.6441 L761.95 66.96 L756.597 66.96 L756.597 34.5528 L761.95 34.5528 L761.95 39.5875 Q763.86 36.665 766.435 35.2183 Q769.04 33.7715 772.425 33.7715 Q778.009 33.7715 780.874 37.2437 Q783.739 40.687 783.739 47.3999 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M815.683 50.3802 Q815.683 44.5932 813.281 41.4104 Q810.909 38.2275 806.597 38.2275 Q802.315 38.2275 799.913 41.4104 Q797.541 44.5932 797.541 50.3802 Q797.541 56.1383 799.913 59.3212 Q802.315 62.504 806.597 62.504 Q810.909 62.504 813.281 59.3212 Q815.683 56.1383 815.683 50.3802 M821.007 62.938 Q821.007 71.2134 817.332 75.2354 Q813.657 79.2863 806.076 79.2863 Q803.27 79.2863 800.781 78.8523 Q798.293 78.4472 795.949 77.5792 L795.949 72.3998 Q798.293 73.6729 800.579 74.2806 Q802.865 74.8882 805.237 74.8882 Q810.475 74.8882 813.079 72.1394 Q815.683 69.4195 815.683 63.8929 L815.683 61.2598 Q814.034 64.1244 811.458 65.5422 Q808.883 66.96 805.295 66.96 Q799.335 66.96 795.689 62.4172 Q792.043 57.8744 792.043 50.3802 Q792.043 42.8571 795.689 38.3143 Q799.335 33.7715 805.295 33.7715 Q808.883 33.7715 811.458 35.1893 Q814.034 36.6072 815.683 39.4717 L815.683 34.5528 L821.007 34.5528 L821.007 62.938 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M883.391 27.0875 L883.391 33.2507 Q880.439 30.5019 877.083 29.1419 Q873.755 27.782 869.994 27.782 Q862.587 27.782 858.651 32.3248 Q854.716 36.8386 854.716 45.4034 Q854.716 53.9392 858.651 58.482 Q862.587 62.9959 869.994 62.9959 Q873.755 62.9959 877.083 61.636 Q880.439 60.276 883.391 57.5272 L883.391 63.6325 Q880.324 65.7158 876.88 66.7575 Q873.466 67.7991 869.647 67.7991 Q859.838 67.7991 854.195 61.8096 Q848.553 55.7911 848.553 45.4034 Q848.553 34.9868 854.195 28.9972 Q859.838 22.9788 869.647 22.9788 Q873.524 22.9788 876.938 24.0204 Q880.382 25.0331 883.391 27.0875 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M918.315 25.1778 L918.315 30.878 Q914.988 29.2866 912.036 28.5053 Q909.085 27.7241 906.336 27.7241 Q901.562 27.7241 898.958 29.5759 Q896.383 31.4278 896.383 34.8421 Q896.383 37.7067 898.09 39.1824 Q899.826 40.6291 904.629 41.5261 L908.159 42.2495 Q914.698 43.4937 917.795 46.6476 Q920.92 49.7726 920.92 55.0388 Q920.92 61.3177 916.695 64.5584 Q912.499 67.7991 904.369 67.7991 Q901.302 67.7991 897.829 67.1047 Q894.386 66.4102 890.682 65.0503 L890.682 59.0318 Q894.241 61.0283 897.656 62.041 Q901.07 63.0538 904.369 63.0538 Q909.374 63.0538 912.094 61.0862 Q914.814 59.1186 914.814 55.4728 Q914.814 52.2899 912.847 50.496 Q910.908 48.702 906.452 47.805 L902.893 47.1106 Q896.354 45.8085 893.431 43.0307 Q890.509 40.253 890.509 35.3051 Q890.509 29.5759 894.531 26.2773 Q898.582 22.9788 905.671 22.9788 Q908.709 22.9788 911.863 23.5285 Q915.017 24.0783 918.315 25.1778 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M930.034 23.76 L957.349 23.76 L957.349 28.679 L935.879 28.679 L935.879 41.4682 L956.452 41.4682 L956.452 46.3872 L935.879 46.3872 L935.879 62.041 L957.87 62.041 L957.87 66.96 L930.034 66.96 L930.034 23.76 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M1000.81 50.6696 Q994.357 50.6696 991.868 52.1453 Q989.38 53.621 989.38 57.18 Q989.38 60.0156 991.232 61.6938 Q993.112 63.3431 996.324 63.3431 Q1000.75 63.3431 1003.41 60.2181 Q1006.1 57.0642 1006.1 51.8559 L1006.1 50.6696 L1000.81 50.6696 M1011.43 48.4705 L1011.43 66.96 L1006.1 66.96 L1006.1 62.041 Q1004.28 64.9924 1001.56 66.4102 Q998.842 67.7991 994.906 67.7991 Q989.93 67.7991 986.978 65.0214 Q984.056 62.2147 984.056 57.5272 Q984.056 52.0585 987.702 49.2807 Q991.376 46.5029 998.639 46.5029 L1006.1 46.5029 L1006.1 45.9821 Q1006.1 42.3074 1003.67 40.3108 Q1001.27 38.2854 996.903 38.2854 Q994.125 38.2854 991.492 38.9509 Q988.859 39.6164 986.428 40.9474 L986.428 36.0285 Q989.351 34.9 992.1 34.3502 Q994.849 33.7715 997.453 33.7715 Q1004.48 33.7715 1007.96 37.4173 Q1011.43 41.0631 1011.43 48.4705 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M1043.72 50.3802 Q1043.72 44.5932 1041.32 41.4104 Q1038.95 38.2275 1034.63 38.2275 Q1030.35 38.2275 1027.95 41.4104 Q1025.58 44.5932 1025.58 50.3802 Q1025.58 56.1383 1027.95 59.3212 Q1030.35 62.504 1034.63 62.504 Q1038.95 62.504 1041.32 59.3212 Q1043.72 56.1383 1043.72 50.3802 M1049.04 62.938 Q1049.04 71.2134 1045.37 75.2354 Q1041.69 79.2863 1034.11 79.2863 Q1031.31 79.2863 1028.82 78.8523 Q1026.33 78.4472 1023.99 77.5792 L1023.99 72.3998 Q1026.33 73.6729 1028.62 74.2806 Q1030.9 74.8882 1033.27 74.8882 Q1038.51 74.8882 1041.12 72.1394 Q1043.72 69.4195 1043.72 63.8929 L1043.72 61.2598 Q1042.07 64.1244 1039.5 65.5422 Q1036.92 66.96 1033.33 66.96 Q1027.37 66.96 1023.73 62.4172 Q1020.08 57.8744 1020.08 50.3802 Q1020.08 42.8571 1023.73 38.3143 Q1027.37 33.7715 1033.33 33.7715 Q1036.92 33.7715 1039.5 35.1893 Q1042.07 36.6072 1043.72 39.4717 L1043.72 34.5528 L1049.04 34.5528 L1049.04 62.938 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M1074.74 50.6696 Q1068.29 50.6696 1065.8 52.1453 Q1063.31 53.621 1063.31 57.18 Q1063.31 60.0156 1065.16 61.6938 Q1067.04 63.3431 1070.25 63.3431 Q1074.68 63.3431 1077.34 60.2181 Q1080.03 57.0642 1080.03 51.8559 L1080.03 50.6696 L1074.74 50.6696 M1085.36 48.4705 L1085.36 66.96 L1080.03 66.96 L1080.03 62.041 Q1078.21 64.9924 1075.49 66.4102 Q1072.77 67.7991 1068.84 67.7991 Q1063.86 67.7991 1060.91 65.0214 Q1057.98 62.2147 1057.98 57.5272 Q1057.98 52.0585 1061.63 49.2807 Q1065.31 46.5029 1072.57 46.5029 L1080.03 46.5029 L1080.03 45.9821 Q1080.03 42.3074 1077.6 40.3108 Q1075.2 38.2854 1070.83 38.2854 Q1068.05 38.2854 1065.42 38.9509 Q1062.79 39.6164 1060.36 40.9474 L1060.36 36.0285 Q1063.28 34.9 1066.03 34.3502 Q1068.78 33.7715 1071.38 33.7715 Q1078.41 33.7715 1081.89 37.4173 Q1085.36 41.0631 1085.36 48.4705 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M1096.32 34.5528 L1101.65 34.5528 L1101.65 66.96 L1096.32 66.96 L1096.32 34.5528 M1096.32 21.9371 L1101.65 21.9371 L1101.65 28.679 L1096.32 28.679 L1096.32 21.9371 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M1139.73 47.3999 L1139.73 66.96 L1134.4 66.96 L1134.4 47.5735 Q1134.4 42.9729 1132.61 40.687 Q1130.81 38.4011 1127.23 38.4011 Q1122.91 38.4011 1120.43 41.15 Q1117.94 43.8988 1117.94 48.6441 L1117.94 66.96 L1112.59 66.96 L1112.59 34.5528 L1117.94 34.5528 L1117.94 39.5875 Q1119.85 36.665 1122.42 35.2183 Q1125.03 33.7715 1128.41 33.7715 Q1134 33.7715 1136.86 37.2437 Q1139.73 40.687 1139.73 47.3999 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M1171 35.5076 L1171 40.5423 Q1168.75 39.3849 1166.32 38.8062 Q1163.89 38.2275 1161.28 38.2275 Q1157.32 38.2275 1155.32 39.4428 Q1153.35 40.6581 1153.35 43.0886 Q1153.35 44.9404 1154.77 46.011 Q1156.19 47.0527 1160.47 48.0076 L1162.3 48.4126 Q1167.97 49.6279 1170.34 51.8559 Q1172.74 54.055 1172.74 58.0191 Q1172.74 62.5329 1169.15 65.166 Q1165.59 67.7991 1159.34 67.7991 Q1156.74 67.7991 1153.9 67.2783 Q1151.1 66.7864 1147.97 65.7737 L1147.97 60.276 Q1150.92 61.8096 1153.79 62.5908 Q1156.65 63.3431 1159.46 63.3431 Q1163.22 63.3431 1165.25 62.07 Q1167.27 60.7679 1167.27 58.4242 Q1167.27 56.254 1165.8 55.0966 Q1164.35 53.9392 1159.4 52.8686 L1157.55 52.4346 Q1152.6 51.393 1150.4 49.2518 Q1148.2 47.0816 1148.2 43.3201 Q1148.2 38.7483 1151.44 36.2599 Q1154.69 33.7715 1160.65 33.7715 Q1163.6 33.7715 1166.2 34.2055 Q1168.81 34.6396 1171 35.5076 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M1186.49 25.3514 L1186.49 34.5528 L1197.45 34.5528 L1197.45 38.6905 L1186.49 38.6905 L1186.49 56.283 Q1186.49 60.2471 1187.56 61.3755 Q1188.66 62.504 1191.98 62.504 L1197.45 62.504 L1197.45 66.96 L1191.98 66.96 Q1185.82 66.96 1183.48 64.6741 Q1181.13 62.3593 1181.13 56.283 L1181.13 38.6905 L1177.23 38.6905 L1177.23 34.5528 L1181.13 34.5528 L1181.13 25.3514 L1186.49 25.3514 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M1229.37 46.3293 L1229.37 62.1568 L1238.74 62.1568 Q1243.46 62.1568 1245.72 60.2181 Q1248 58.2506 1248 54.2286 Q1248 50.1777 1245.72 48.268 Q1243.46 46.3293 1238.74 46.3293 L1229.37 46.3293 M1229.37 28.5632 L1229.37 41.584 L1238.02 41.584 Q1242.3 41.584 1244.38 39.9926 Q1246.5 38.3722 1246.5 35.0736 Q1246.5 31.8039 1244.38 30.1836 Q1242.3 28.5632 1238.02 28.5632 L1229.37 28.5632 M1223.52 23.76 L1238.45 23.76 Q1245.14 23.76 1248.75 26.5378 Q1252.37 29.3155 1252.37 34.437 Q1252.37 38.4011 1250.52 40.7449 Q1248.67 43.0886 1245.08 43.6673 Q1249.39 44.5932 1251.76 47.5446 Q1254.16 50.467 1254.16 54.8652 Q1254.16 60.6522 1250.23 63.8061 Q1246.29 66.96 1239.03 66.96 L1223.52 66.96 L1223.52 23.76 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M1264.18 23.76 L1272.05 23.76 L1291.2 59.8999 L1291.2 23.76 L1296.87 23.76 L1296.87 66.96 L1289 66.96 L1269.85 30.8201 L1269.85 66.96 L1264.18 66.96 L1264.18 23.76 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M1308.5 23.76 L1335.82 23.76 L1335.82 28.679 L1314.35 28.679 L1314.35 41.4682 L1334.92 41.4682 L1334.92 46.3872 L1314.35 46.3872 L1314.35 62.041 L1336.34 62.041 L1336.34 66.96 L1308.5 66.96 L1308.5 23.76 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M1380.96 21.9371 L1380.96 26.3642 L1375.87 26.3642 Q1373 26.3642 1371.87 27.5216 Q1370.77 28.679 1370.77 31.6882 L1370.77 34.5528 L1379.54 34.5528 L1379.54 38.6905 L1370.77 38.6905 L1370.77 66.96 L1365.42 66.96 L1365.42 38.6905 L1360.33 38.6905 L1360.33 34.5528 L1365.42 34.5528 L1365.42 32.2958 Q1365.42 26.885 1367.94 24.4255 Q1370.45 21.9371 1375.92 21.9371 L1380.96 21.9371 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M1397.97 38.2854 Q1393.69 38.2854 1391.2 41.6418 Q1388.71 44.9694 1388.71 50.7853 Q1388.71 56.6013 1391.17 59.9577 Q1393.66 63.2853 1397.97 63.2853 Q1402.22 63.2853 1404.71 59.9288 Q1407.2 56.5723 1407.2 50.7853 Q1407.2 45.0272 1404.71 41.6708 Q1402.22 38.2854 1397.97 38.2854 M1397.97 33.7715 Q1404.92 33.7715 1408.88 38.2854 Q1412.84 42.7992 1412.84 50.7853 Q1412.84 58.7425 1408.88 63.2853 Q1404.92 67.7991 1397.97 67.7991 Q1391 67.7991 1387.03 63.2853 Q1383.1 58.7425 1383.1 50.7853 Q1383.1 42.7992 1387.03 38.2854 Q1391 33.7715 1397.97 33.7715 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M1440.45 39.5296 Q1439.55 39.0088 1438.48 38.7773 Q1437.44 38.5169 1436.17 38.5169 Q1431.65 38.5169 1429.22 41.4682 Q1426.82 44.3907 1426.82 49.8883 L1426.82 66.96 L1421.47 66.96 L1421.47 34.5528 L1426.82 34.5528 L1426.82 39.5875 Q1428.5 36.6361 1431.19 35.2183 Q1433.88 33.7715 1437.73 33.7715 Q1438.28 33.7715 1438.94 33.8583 Q1439.61 33.9162 1440.42 34.0609 L1440.45 39.5296 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M1491.81 47.3999 L1491.81 66.96 L1486.48 66.96 L1486.48 47.5735 Q1486.48 42.9729 1484.69 40.687 Q1482.9 38.4011 1479.31 38.4011 Q1475 38.4011 1472.51 41.15 Q1470.02 43.8988 1470.02 48.6441 L1470.02 66.96 L1464.67 66.96 L1464.67 34.5528 L1470.02 34.5528 L1470.02 39.5875 Q1471.93 36.665 1474.5 35.2183 Q1477.11 33.7715 1480.49 33.7715 Q1486.08 33.7715 1488.94 37.2437 Q1491.81 40.687 1491.81 47.3999 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M1501.88 54.1707 L1501.88 34.5528 L1507.2 34.5528 L1507.2 53.9682 Q1507.2 58.5688 1509 60.8836 Q1510.79 63.1695 1514.38 63.1695 Q1518.69 63.1695 1521.18 60.4207 Q1523.69 57.6719 1523.69 52.9265 L1523.69 34.5528 L1529.02 34.5528 L1529.02 66.96 L1523.69 66.96 L1523.69 61.9832 Q1521.76 64.9345 1519.18 66.3813 Q1516.63 67.7991 1513.25 67.7991 Q1507.66 67.7991 1504.77 64.3269 Q1501.88 60.8547 1501.88 54.1707 M1515.27 33.7715 L1515.27 33.7715 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M1565.22 40.7738 Q1567.21 37.1859 1569.99 35.4787 Q1572.77 33.7715 1576.53 33.7715 Q1581.59 33.7715 1584.34 37.3305 Q1587.09 40.8606 1587.09 47.3999 L1587.09 66.96 L1581.74 66.96 L1581.74 47.5735 Q1581.74 42.915 1580.09 40.6581 Q1578.44 38.4011 1575.05 38.4011 Q1570.92 38.4011 1568.51 41.15 Q1566.11 43.8988 1566.11 48.6441 L1566.11 66.96 L1560.76 66.96 L1560.76 47.5735 Q1560.76 42.8861 1559.11 40.6581 Q1557.46 38.4011 1554.02 38.4011 Q1549.94 38.4011 1547.54 41.1789 Q1545.13 43.9277 1545.13 48.6441 L1545.13 66.96 L1539.78 66.96 L1539.78 34.5528 L1545.13 34.5528 L1545.13 39.5875 Q1546.96 36.6072 1549.5 35.1893 Q1552.05 33.7715 1555.55 33.7715 Q1559.08 33.7715 1561.54 35.5655 Q1564.03 37.3595 1565.22 40.7738 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M1621.7 62.0989 L1621.7 79.2863 L1616.34 79.2863 L1616.34 34.5528 L1621.7 34.5528 L1621.7 39.4717 Q1623.38 36.5782 1625.92 35.1893 Q1628.5 33.7715 1632.06 33.7715 Q1637.96 33.7715 1641.63 38.459 Q1645.34 43.1465 1645.34 50.7853 Q1645.34 58.4242 1641.63 63.1116 Q1637.96 67.7991 1632.06 67.7991 Q1628.5 67.7991 1625.92 66.4102 Q1623.38 64.9924 1621.7 62.0989 M1639.81 50.7853 Q1639.81 44.9115 1637.38 41.584 Q1634.98 38.2275 1630.75 38.2275 Q1626.53 38.2275 1624.1 41.584 Q1621.7 44.9115 1621.7 50.7853 Q1621.7 56.6591 1624.1 60.0156 Q1626.53 63.3431 1630.75 63.3431 Q1634.98 63.3431 1637.38 60.0156 Q1639.81 56.6591 1639.81 50.7853 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M1654.16 21.9371 L1659.49 21.9371 L1659.49 66.96 L1654.16 66.96 L1654.16 21.9371 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M1685.35 50.6696 Q1678.9 50.6696 1676.41 52.1453 Q1673.92 53.621 1673.92 57.18 Q1673.92 60.0156 1675.78 61.6938 Q1677.66 63.3431 1680.87 63.3431 Q1685.3 63.3431 1687.96 60.2181 Q1690.65 57.0642 1690.65 51.8559 L1690.65 50.6696 L1685.35 50.6696 M1695.97 48.4705 L1695.97 66.96 L1690.65 66.96 L1690.65 62.041 Q1688.83 64.9924 1686.11 66.4102 Q1683.39 67.7991 1679.45 67.7991 Q1674.47 67.7991 1671.52 65.0214 Q1668.6 62.2147 1668.6 57.5272 Q1668.6 52.0585 1672.25 49.2807 Q1675.92 46.5029 1683.18 46.5029 L1690.65 46.5029 L1690.65 45.9821 Q1690.65 42.3074 1688.22 40.3108 Q1685.82 38.2854 1681.45 38.2854 Q1678.67 38.2854 1676.04 38.9509 Q1673.4 39.6164 1670.97 40.9474 L1670.97 36.0285 Q1673.9 34.9 1676.64 34.3502 Q1679.39 33.7715 1682 33.7715 Q1689.03 33.7715 1692.5 37.4173 Q1695.97 41.0631 1695.97 48.4705 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M1720.42 69.9692 Q1718.17 75.7562 1716.03 77.5213 Q1713.88 79.2863 1710.3 79.2863 L1706.04 79.2863 L1706.04 74.8303 L1709.17 74.8303 Q1711.37 74.8303 1712.58 73.7887 Q1713.8 72.747 1715.27 68.8697 L1716.23 66.4392 L1703.12 34.5528 L1708.76 34.5528 L1718.89 59.8999 L1729.02 34.5528 L1734.66 34.5528 L1720.42 69.9692 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M1769.73 49.4254 L1769.73 52.0295 L1745.25 52.0295 Q1745.6 57.5272 1748.55 60.4207 Q1751.53 63.2853 1756.82 63.2853 Q1759.89 63.2853 1762.76 62.5329 Q1765.65 61.7806 1768.48 60.276 L1768.48 65.3107 Q1765.62 66.526 1762.61 67.1625 Q1759.6 67.7991 1756.51 67.7991 Q1748.75 67.7991 1744.21 63.2853 Q1739.69 58.7714 1739.69 51.0747 Q1739.69 43.1175 1743.98 38.459 Q1748.29 33.7715 1755.58 33.7715 Q1762.12 33.7715 1765.91 37.996 Q1769.73 42.1916 1769.73 49.4254 M1764.4 47.8629 Q1764.35 43.4937 1761.95 40.8895 Q1759.57 38.2854 1755.64 38.2854 Q1751.18 38.2854 1748.49 40.8027 Q1745.83 43.3201 1745.42 47.8918 L1764.4 47.8629 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M1797.25 39.5296 Q1796.35 39.0088 1795.28 38.7773 Q1794.24 38.5169 1792.96 38.5169 Q1788.45 38.5169 1786.02 41.4682 Q1783.62 44.3907 1783.62 49.8883 L1783.62 66.96 L1778.26 66.96 L1778.26 34.5528 L1783.62 34.5528 L1783.62 39.5875 Q1785.3 36.6361 1787.99 35.2183 Q1790.68 33.7715 1794.53 33.7715 Q1795.08 33.7715 1795.74 33.8583 Q1796.41 33.9162 1797.22 34.0609 L1797.25 39.5296 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M1823.49 35.5076 L1823.49 40.5423 Q1821.23 39.3849 1818.8 38.8062 Q1816.37 38.2275 1813.77 38.2275 Q1809.8 38.2275 1807.81 39.4428 Q1805.84 40.6581 1805.84 43.0886 Q1805.84 44.9404 1807.26 46.011 Q1808.68 47.0527 1812.96 48.0076 L1814.78 48.4126 Q1820.45 49.6279 1822.82 51.8559 Q1825.23 54.055 1825.23 58.0191 Q1825.23 62.5329 1821.64 65.166 Q1818.08 67.7991 1811.83 67.7991 Q1809.22 67.7991 1806.39 67.2783 Q1803.58 66.7864 1800.46 65.7737 L1800.46 60.276 Q1803.41 61.8096 1806.27 62.5908 Q1809.14 63.3431 1811.94 63.3431 Q1815.71 63.3431 1817.73 62.07 Q1819.76 60.7679 1819.76 58.4242 Q1819.76 56.254 1818.28 55.0966 Q1816.83 53.9392 1811.89 52.8686 L1810.04 52.4346 Q1805.09 51.393 1802.89 49.2518 Q1800.69 47.0816 1800.69 43.3201 Q1800.69 38.7483 1803.93 36.2599 Q1807.17 33.7715 1813.13 33.7715 Q1816.08 33.7715 1818.69 34.2055 Q1821.29 34.6396 1823.49 35.5076 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M1858.33 62.041 L1878.73 62.041 L1878.73 66.96 L1851.3 66.96 L1851.3 62.041 Q1854.62 58.5978 1860.35 52.8108 Q1866.11 46.9948 1867.59 45.3166 Q1870.39 42.1627 1871.49 39.9926 Q1872.62 37.7935 1872.62 35.6812 Q1872.62 32.238 1870.19 30.0678 Q1867.79 27.8977 1863.91 27.8977 Q1861.16 27.8977 1858.1 28.8526 Q1855.06 29.8074 1851.59 31.7461 L1851.59 25.8433 Q1855.12 24.4255 1858.18 23.7021 Q1861.25 22.9788 1863.8 22.9788 Q1870.51 22.9788 1874.5 26.3352 Q1878.5 29.6917 1878.5 35.3051 Q1878.5 37.9671 1877.48 40.3687 Q1876.5 42.7414 1873.87 45.9821 Q1873.14 46.8212 1869.27 50.8432 Q1865.39 54.8362 1858.33 62.041 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M1923.81 50.6696 Q1917.36 50.6696 1914.87 52.1453 Q1912.38 53.621 1912.38 57.18 Q1912.38 60.0156 1914.23 61.6938 Q1916.11 63.3431 1919.32 63.3431 Q1923.75 63.3431 1926.41 60.2181 Q1929.1 57.0642 1929.1 51.8559 L1929.1 50.6696 L1923.81 50.6696 M1934.43 48.4705 L1934.43 66.96 L1929.1 66.96 L1929.1 62.041 Q1927.28 64.9924 1924.56 66.4102 Q1921.84 67.7991 1917.9 67.7991 Q1912.93 67.7991 1909.98 65.0214 Q1907.05 62.2147 1907.05 57.5272 Q1907.05 52.0585 1910.7 49.2807 Q1914.37 46.5029 1921.64 46.5029 L1929.1 46.5029 L1929.1 45.9821 Q1929.1 42.3074 1926.67 40.3108 Q1924.27 38.2854 1919.9 38.2854 Q1917.12 38.2854 1914.49 38.9509 Q1911.86 39.6164 1909.43 40.9474 L1909.43 36.0285 Q1912.35 34.9 1915.1 34.3502 Q1917.85 33.7715 1920.45 33.7715 Q1927.48 33.7715 1930.95 37.4173 Q1934.43 41.0631 1934.43 48.4705 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M1972.33 47.3999 L1972.33 66.96 L1967.01 66.96 L1967.01 47.5735 Q1967.01 42.9729 1965.21 40.687 Q1963.42 38.4011 1959.83 38.4011 Q1955.52 38.4011 1953.03 41.15 Q1950.54 43.8988 1950.54 48.6441 L1950.54 66.96 L1945.19 66.96 L1945.19 34.5528 L1950.54 34.5528 L1950.54 39.5875 Q1952.45 36.665 1955.03 35.2183 Q1957.63 33.7715 1961.02 33.7715 Q1966.6 33.7715 1969.47 37.2437 Q1972.33 40.687 1972.33 47.3999 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M2004.28 39.4717 L2004.28 21.9371 L2009.6 21.9371 L2009.6 66.96 L2004.28 66.96 L2004.28 62.0989 Q2002.6 64.9924 2000.02 66.4102 Q1997.48 67.7991 1993.89 67.7991 Q1988.01 67.7991 1984.31 63.1116 Q1980.64 58.4242 1980.64 50.7853 Q1980.64 43.1465 1984.31 38.459 Q1988.01 33.7715 1993.89 33.7715 Q1997.48 33.7715 2000.02 35.1893 Q2002.6 36.5782 2004.28 39.4717 M1986.13 50.7853 Q1986.13 56.6591 1988.54 60.0156 Q1990.97 63.3431 1995.19 63.3431 Q1999.41 63.3431 2001.85 60.0156 Q2004.28 56.6591 2004.28 50.7853 Q2004.28 44.9115 2001.85 41.584 Q1999.41 38.2275 1995.19 38.2275 Q1990.97 38.2275 1988.54 41.584 Q1986.13 44.9115 1986.13 50.7853 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M2056.21 28.8526 L2041.46 51.9138 L2056.21 51.9138 L2056.21 28.8526 M2054.68 23.76 L2062.03 23.76 L2062.03 51.9138 L2068.19 51.9138 L2068.19 56.7749 L2062.03 56.7749 L2062.03 66.96 L2056.21 66.96 L2056.21 56.7749 L2036.71 56.7749 L2036.71 51.1325 L2054.68 23.76 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M718.62 115.47 Q712.168 115.47 709.679 116.945 Q707.191 118.421 707.191 121.98 Q707.191 124.816 709.043 126.494 Q710.924 128.143 714.135 128.143 Q718.562 128.143 721.224 125.018 Q723.915 121.864 723.915 116.656 L723.915 115.47 L718.62 115.47 M729.239 113.271 L729.239 131.76 L723.915 131.76 L723.915 126.841 Q722.092 129.792 719.373 131.21 Q716.653 132.599 712.718 132.599 Q707.741 132.599 704.789 129.821 Q701.867 127.015 701.867 122.327 Q701.867 116.858 705.513 114.081 Q709.187 111.303 716.45 111.303 L723.915 111.303 L723.915 110.782 Q723.915 107.107 721.485 105.111 Q719.083 103.085 714.714 103.085 Q711.936 103.085 709.303 103.751 Q706.67 104.416 704.24 105.747 L704.24 100.828 Q707.162 99.7 709.911 99.1502 Q712.66 98.5715 715.264 98.5715 Q722.295 98.5715 725.767 102.217 Q729.239 105.863 729.239 113.271 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M760.865 100.308 L760.865 105.342 Q758.608 104.185 756.178 103.606 Q753.747 103.028 751.143 103.028 Q747.179 103.028 745.183 104.243 Q743.215 105.458 743.215 107.889 Q743.215 109.74 744.633 110.811 Q746.051 111.853 750.333 112.808 L752.156 113.213 Q757.827 114.428 760.2 116.656 Q762.602 118.855 762.602 122.819 Q762.602 127.333 759.014 129.966 Q755.455 132.599 749.205 132.599 Q746.6 132.599 743.765 132.078 Q740.958 131.586 737.833 130.574 L737.833 125.076 Q740.784 126.61 743.649 127.391 Q746.514 128.143 749.32 128.143 Q753.082 128.143 755.107 126.87 Q757.133 125.568 757.133 123.224 Q757.133 121.054 755.657 119.897 Q754.21 118.739 749.262 117.669 L747.411 117.235 Q742.463 116.193 740.264 114.052 Q738.065 111.882 738.065 108.12 Q738.065 103.548 741.305 101.06 Q744.546 98.5715 750.507 98.5715 Q753.458 98.5715 756.062 99.0055 Q758.666 99.4396 760.865 100.308 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M784.563 134.769 Q782.306 140.556 780.165 142.321 Q778.024 144.086 774.436 144.086 L770.182 144.086 L770.182 139.63 L773.307 139.63 Q775.507 139.63 776.722 138.589 Q777.937 137.547 779.413 133.67 L780.368 131.239 L767.26 99.3528 L772.902 99.3528 L783.03 124.7 L793.157 99.3528 L798.799 99.3528 L784.563 134.769 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M831.38 105.574 Q833.377 101.986 836.154 100.279 Q838.932 98.5715 842.694 98.5715 Q847.757 98.5715 850.506 102.131 Q853.255 105.661 853.255 112.2 L853.255 131.76 L847.902 131.76 L847.902 112.374 Q847.902 107.715 846.253 105.458 Q844.603 103.201 841.218 103.201 Q837.08 103.201 834.679 105.95 Q832.277 108.699 832.277 113.444 L832.277 131.76 L826.924 131.76 L826.924 112.374 Q826.924 107.686 825.275 105.458 Q823.625 103.201 820.182 103.201 Q816.102 103.201 813.701 105.979 Q811.299 108.728 811.299 113.444 L811.299 131.76 L805.946 131.76 L805.946 99.3528 L811.299 99.3528 L811.299 104.387 Q813.122 101.407 815.668 99.9893 Q818.215 98.5715 821.716 98.5715 Q825.246 98.5715 827.705 100.365 Q830.194 102.159 831.38 105.574 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M906.032 100.597 L906.032 105.574 Q903.776 104.33 901.49 103.722 Q899.233 103.085 896.918 103.085 Q891.739 103.085 888.874 106.384 Q886.009 109.654 886.009 115.585 Q886.009 121.517 888.874 124.816 Q891.739 128.085 896.918 128.085 Q899.233 128.085 901.49 127.478 Q903.776 126.841 906.032 125.597 L906.032 130.516 Q903.804 131.557 901.403 132.078 Q899.03 132.599 896.339 132.599 Q889.019 132.599 884.707 127.998 Q880.396 123.398 880.396 115.585 Q880.396 107.657 884.736 103.114 Q889.105 98.5715 896.686 98.5715 Q899.146 98.5715 901.49 99.0924 Q903.833 99.5842 906.032 100.597 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M927.849 103.085 Q923.567 103.085 921.079 106.442 Q918.59 109.769 918.59 115.585 Q918.59 121.401 921.05 124.758 Q923.538 128.085 927.849 128.085 Q932.103 128.085 934.591 124.729 Q937.08 121.372 937.08 115.585 Q937.08 109.827 934.591 106.471 Q932.103 103.085 927.849 103.085 M927.849 98.5715 Q934.794 98.5715 938.758 103.085 Q942.722 107.599 942.722 115.585 Q942.722 123.542 938.758 128.085 Q934.794 132.599 927.849 132.599 Q920.876 132.599 916.912 128.085 Q912.977 123.542 912.977 115.585 Q912.977 107.599 916.912 103.085 Q920.876 98.5715 927.849 98.5715 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M972.872 104.272 L972.872 86.7371 L978.196 86.7371 L978.196 131.76 L972.872 131.76 L972.872 126.899 Q971.194 129.792 968.619 131.21 Q966.073 132.599 962.485 132.599 Q956.611 132.599 952.907 127.912 Q949.232 123.224 949.232 115.585 Q949.232 107.946 952.907 103.259 Q956.611 98.5715 962.485 98.5715 Q966.073 98.5715 968.619 99.9893 Q971.194 101.378 972.872 104.272 M954.73 115.585 Q954.73 121.459 957.132 124.816 Q959.562 128.143 963.787 128.143 Q968.011 128.143 970.442 124.816 Q972.872 121.459 972.872 115.585 Q972.872 109.712 970.442 106.384 Q968.011 103.028 963.787 103.028 Q959.562 103.028 957.132 106.384 Q954.73 109.712 954.73 115.585 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M1016.88 114.225 L1016.88 116.83 L992.404 116.83 Q992.751 122.327 995.702 125.221 Q998.682 128.085 1003.98 128.085 Q1007.04 128.085 1009.91 127.333 Q1012.8 126.581 1015.64 125.076 L1015.64 130.111 Q1012.77 131.326 1009.76 131.963 Q1006.76 132.599 1003.66 132.599 Q995.905 132.599 991.362 128.085 Q986.848 123.571 986.848 115.875 Q986.848 107.918 991.13 103.259 Q995.442 98.5715 1002.73 98.5715 Q1009.27 98.5715 1013.06 102.796 Q1016.88 106.992 1016.88 114.225 M1011.56 112.663 Q1011.5 108.294 1009.1 105.69 Q1006.73 103.085 1002.79 103.085 Q998.335 103.085 995.644 105.603 Q992.982 108.12 992.577 112.692 L1011.56 112.663 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M1067.72 115.585 Q1067.72 109.712 1065.29 106.384 Q1062.89 103.028 1058.66 103.028 Q1054.44 103.028 1052.01 106.384 Q1049.61 109.712 1049.61 115.585 Q1049.61 121.459 1052.01 124.816 Q1054.44 128.143 1058.66 128.143 Q1062.89 128.143 1065.29 124.816 Q1067.72 121.459 1067.72 115.585 M1049.61 104.272 Q1051.29 101.378 1053.83 99.9893 Q1056.41 98.5715 1059.97 98.5715 Q1065.87 98.5715 1069.54 103.259 Q1073.25 107.946 1073.25 115.585 Q1073.25 123.224 1069.54 127.912 Q1065.87 132.599 1059.97 132.599 Q1056.41 132.599 1053.83 131.21 Q1051.29 129.792 1049.61 126.899 L1049.61 131.76 L1044.26 131.76 L1044.26 86.7371 L1049.61 86.7371 L1049.61 104.272 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M1081.52 118.971 L1081.52 99.3528 L1086.85 99.3528 L1086.85 118.768 Q1086.85 123.369 1088.64 125.684 Q1090.44 127.97 1094.02 127.97 Q1098.33 127.97 1100.82 125.221 Q1103.34 122.472 1103.34 117.727 L1103.34 99.3528 L1108.66 99.3528 L1108.66 131.76 L1103.34 131.76 L1103.34 126.783 Q1101.4 129.735 1098.83 131.181 Q1096.28 132.599 1092.89 132.599 Q1087.31 132.599 1084.42 129.127 Q1081.52 125.655 1081.52 118.971 M1094.92 98.5715 L1094.92 98.5715 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M1124.9 90.1514 L1124.9 99.3528 L1135.86 99.3528 L1135.86 103.49 L1124.9 103.49 L1124.9 121.083 Q1124.9 125.047 1125.97 126.176 Q1127.07 127.304 1130.39 127.304 L1135.86 127.304 L1135.86 131.76 L1130.39 131.76 Q1124.23 131.76 1121.89 129.474 Q1119.54 127.159 1119.54 121.083 L1119.54 103.49 L1115.64 103.49 L1115.64 99.3528 L1119.54 99.3528 L1119.54 90.1514 L1124.9 90.1514 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M1176.43 115.47 Q1169.98 115.47 1167.49 116.945 Q1165 118.421 1165 121.98 Q1165 124.816 1166.85 126.494 Q1168.73 128.143 1171.95 128.143 Q1176.37 128.143 1179.03 125.018 Q1181.73 121.864 1181.73 116.656 L1181.73 115.47 L1176.43 115.47 M1187.05 113.271 L1187.05 131.76 L1181.73 131.76 L1181.73 126.841 Q1179.9 129.792 1177.18 131.21 Q1174.46 132.599 1170.53 132.599 Q1165.55 132.599 1162.6 129.821 Q1159.68 127.015 1159.68 122.327 Q1159.68 116.858 1163.32 114.081 Q1167 111.303 1174.26 111.303 L1181.73 111.303 L1181.73 110.782 Q1181.73 107.107 1179.29 105.111 Q1176.89 103.085 1172.52 103.085 Q1169.75 103.085 1167.11 103.751 Q1164.48 104.416 1162.05 105.747 L1162.05 100.828 Q1164.97 99.7 1167.72 99.1502 Q1170.47 98.5715 1173.07 98.5715 Q1180.11 98.5715 1183.58 102.217 Q1187.05 105.863 1187.05 113.271 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M1198.02 86.7371 L1203.34 86.7371 L1203.34 131.76 L1198.02 131.76 L1198.02 86.7371 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M1214.48 86.7371 L1219.8 86.7371 L1219.8 131.76 L1214.48 131.76 L1214.48 86.7371 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M1273.04 115.585 Q1273.04 109.712 1270.61 106.384 Q1268.21 103.028 1263.99 103.028 Q1259.76 103.028 1257.33 106.384 Q1254.93 109.712 1254.93 115.585 Q1254.93 121.459 1257.33 124.816 Q1259.76 128.143 1263.99 128.143 Q1268.21 128.143 1270.61 124.816 Q1273.04 121.459 1273.04 115.585 M1254.93 104.272 Q1256.61 101.378 1259.16 99.9893 Q1261.73 98.5715 1265.29 98.5715 Q1271.19 98.5715 1274.87 103.259 Q1278.57 107.946 1278.57 115.585 Q1278.57 123.224 1274.87 127.912 Q1271.19 132.599 1265.29 132.599 Q1261.73 132.599 1259.16 131.21 Q1256.61 129.792 1254.93 126.899 L1254.93 131.76 L1249.58 131.76 L1249.58 86.7371 L1254.93 86.7371 L1254.93 104.272 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M1287.4 99.3528 L1292.72 99.3528 L1292.72 131.76 L1287.4 131.76 L1287.4 99.3528 M1287.4 86.7371 L1292.72 86.7371 L1292.72 93.479 L1287.4 93.479 L1287.4 86.7371 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M1325.19 104.272 L1325.19 86.7371 L1330.51 86.7371 L1330.51 131.76 L1325.19 131.76 L1325.19 126.899 Q1323.51 129.792 1320.93 131.21 Q1318.39 132.599 1314.8 132.599 Q1308.92 132.599 1305.22 127.912 Q1301.55 123.224 1301.55 115.585 Q1301.55 107.946 1305.22 103.259 Q1308.92 98.5715 1314.8 98.5715 Q1318.39 98.5715 1320.93 99.9893 Q1323.51 101.378 1325.19 104.272 M1307.04 115.585 Q1307.04 121.459 1309.44 124.816 Q1311.88 128.143 1316.1 128.143 Q1320.32 128.143 1322.75 124.816 Q1325.19 121.459 1325.19 115.585 Q1325.19 109.712 1322.75 106.384 Q1320.32 103.028 1316.1 103.028 Q1311.88 103.028 1309.44 106.384 Q1307.04 109.712 1307.04 115.585 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M1362.8 104.272 L1362.8 86.7371 L1368.12 86.7371 L1368.12 131.76 L1362.8 131.76 L1362.8 126.899 Q1361.12 129.792 1358.55 131.21 Q1356 132.599 1352.41 132.599 Q1346.54 132.599 1342.84 127.912 Q1339.16 123.224 1339.16 115.585 Q1339.16 107.946 1342.84 103.259 Q1346.54 98.5715 1352.41 98.5715 Q1356 98.5715 1358.55 99.9893 Q1361.12 101.378 1362.8 104.272 M1344.66 115.585 Q1344.66 121.459 1347.06 124.816 Q1349.49 128.143 1353.72 128.143 Q1357.94 128.143 1360.37 124.816 Q1362.8 121.459 1362.8 115.585 Q1362.8 109.712 1360.37 106.384 Q1357.94 103.028 1353.72 103.028 Q1349.49 103.028 1347.06 106.384 Q1344.66 109.712 1344.66 115.585 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M1406.81 114.225 L1406.81 116.83 L1382.33 116.83 Q1382.68 122.327 1385.63 125.221 Q1388.61 128.085 1393.91 128.085 Q1396.97 128.085 1399.84 127.333 Q1402.73 126.581 1405.57 125.076 L1405.57 130.111 Q1402.7 131.326 1399.69 131.963 Q1396.68 132.599 1393.59 132.599 Q1385.83 132.599 1381.29 128.085 Q1376.78 123.571 1376.78 115.875 Q1376.78 107.918 1381.06 103.259 Q1385.37 98.5715 1392.66 98.5715 Q1399.2 98.5715 1402.99 102.796 Q1406.81 106.992 1406.81 114.225 M1401.49 112.663 Q1401.43 108.294 1399.03 105.69 Q1396.65 103.085 1392.72 103.085 Q1388.26 103.085 1385.57 105.603 Q1382.91 108.12 1382.51 112.692 L1401.49 112.663 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M1434.33 104.33 Q1433.43 103.809 1432.36 103.577 Q1431.32 103.317 1430.05 103.317 Q1425.53 103.317 1423.1 106.268 Q1420.7 109.191 1420.7 114.688 L1420.7 131.76 L1415.35 131.76 L1415.35 99.3528 L1420.7 99.3528 L1420.7 104.387 Q1422.38 101.436 1425.07 100.018 Q1427.76 98.5715 1431.61 98.5715 Q1432.16 98.5715 1432.82 98.6583 Q1433.49 98.7162 1434.3 98.8609 L1434.33 104.33 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M1460.57 100.308 L1460.57 105.342 Q1458.32 104.185 1455.88 103.606 Q1453.45 103.028 1450.85 103.028 Q1446.89 103.028 1444.89 104.243 Q1442.92 105.458 1442.92 107.889 Q1442.92 109.74 1444.34 110.811 Q1445.76 111.853 1450.04 112.808 L1451.86 113.213 Q1457.53 114.428 1459.91 116.656 Q1462.31 118.855 1462.31 122.819 Q1462.31 127.333 1458.72 129.966 Q1455.16 132.599 1448.91 132.599 Q1446.31 132.599 1443.47 132.078 Q1440.67 131.586 1437.54 130.574 L1437.54 125.076 Q1440.49 126.61 1443.36 127.391 Q1446.22 128.143 1449.03 128.143 Q1452.79 128.143 1454.81 126.87 Q1456.84 125.568 1456.84 123.224 Q1456.84 121.054 1455.36 119.897 Q1453.92 118.739 1448.97 117.669 L1447.12 117.235 Q1442.17 116.193 1439.97 114.052 Q1437.77 111.882 1437.77 108.12 Q1437.77 103.548 1441.01 101.06 Q1444.25 98.5715 1450.21 98.5715 Q1453.16 98.5715 1455.77 99.0055 Q1458.37 99.4396 1460.57 100.308 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M1504.35 115.47 Q1497.9 115.47 1495.41 116.945 Q1492.92 118.421 1492.92 121.98 Q1492.92 124.816 1494.77 126.494 Q1496.65 128.143 1499.87 128.143 Q1504.29 128.143 1506.96 125.018 Q1509.65 121.864 1509.65 116.656 L1509.65 115.47 L1504.35 115.47 M1514.97 113.271 L1514.97 131.76 L1509.65 131.76 L1509.65 126.841 Q1507.82 129.792 1505.1 131.21 Q1502.38 132.599 1498.45 132.599 Q1493.47 132.599 1490.52 129.821 Q1487.6 127.015 1487.6 122.327 Q1487.6 116.858 1491.24 114.081 Q1494.92 111.303 1502.18 111.303 L1509.65 111.303 L1509.65 110.782 Q1509.65 107.107 1507.22 105.111 Q1504.81 103.085 1500.44 103.085 Q1497.67 103.085 1495.03 103.751 Q1492.4 104.416 1489.97 105.747 L1489.97 100.828 Q1492.89 99.7 1495.64 99.1502 Q1498.39 98.5715 1500.99 98.5715 Q1508.03 98.5715 1511.5 102.217 Q1514.97 105.863 1514.97 113.271 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M1544.72 104.33 Q1543.82 103.809 1542.75 103.577 Q1541.71 103.317 1540.43 103.317 Q1535.92 103.317 1533.49 106.268 Q1531.09 109.191 1531.09 114.688 L1531.09 131.76 L1525.73 131.76 L1525.73 99.3528 L1531.09 99.3528 L1531.09 104.387 Q1532.77 101.436 1535.46 100.018 Q1538.15 98.5715 1542 98.5715 Q1542.55 98.5715 1543.21 98.6583 Q1543.88 98.7162 1544.69 98.8609 L1544.72 104.33 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M1576.72 114.225 L1576.72 116.83 L1552.24 116.83 Q1552.59 122.327 1555.54 125.221 Q1558.52 128.085 1563.81 128.085 Q1566.88 128.085 1569.74 127.333 Q1572.64 126.581 1575.47 125.076 L1575.47 130.111 Q1572.61 131.326 1569.6 131.963 Q1566.59 132.599 1563.49 132.599 Q1555.74 132.599 1551.2 128.085 Q1546.68 123.571 1546.68 115.875 Q1546.68 107.918 1550.97 103.259 Q1555.28 98.5715 1562.57 98.5715 Q1569.11 98.5715 1572.9 102.796 Q1576.72 106.992 1576.72 114.225 M1571.39 112.663 Q1571.34 108.294 1568.93 105.69 Q1566.56 103.085 1562.63 103.085 Q1558.17 103.085 1555.48 105.603 Q1552.82 108.12 1552.41 112.692 L1571.39 112.663 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M1610.37 111.129 L1610.37 126.957 L1619.74 126.957 Q1624.46 126.957 1626.72 125.018 Q1629 123.051 1629 119.029 Q1629 114.978 1626.72 113.068 Q1624.46 111.129 1619.74 111.129 L1610.37 111.129 M1610.37 93.3632 L1610.37 106.384 L1619.02 106.384 Q1623.3 106.384 1625.39 104.793 Q1627.5 103.172 1627.5 99.8736 Q1627.5 96.6039 1625.39 94.9836 Q1623.3 93.3632 1619.02 93.3632 L1610.37 93.3632 M1604.52 88.56 L1619.45 88.56 Q1626.14 88.56 1629.76 91.3378 Q1633.37 94.1155 1633.37 99.237 Q1633.37 103.201 1631.52 105.545 Q1629.67 107.889 1626.08 108.467 Q1630.39 109.393 1632.76 112.345 Q1635.17 115.267 1635.17 119.665 Q1635.17 125.452 1631.23 128.606 Q1627.3 131.76 1620.03 131.76 L1604.52 131.76 L1604.52 88.56 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M1672.67 114.225 L1672.67 116.83 L1648.19 116.83 Q1648.53 122.327 1651.49 125.221 Q1654.47 128.085 1659.76 128.085 Q1662.83 128.085 1665.69 127.333 Q1668.59 126.581 1671.42 125.076 L1671.42 130.111 Q1668.56 131.326 1665.55 131.963 Q1662.54 132.599 1659.44 132.599 Q1651.69 132.599 1647.15 128.085 Q1642.63 123.571 1642.63 115.875 Q1642.63 107.918 1646.91 103.259 Q1651.23 98.5715 1658.52 98.5715 Q1665.06 98.5715 1668.85 102.796 Q1672.67 106.992 1672.67 114.225 M1667.34 112.663 Q1667.28 108.294 1664.88 105.69 Q1662.51 103.085 1658.57 103.085 Q1654.12 103.085 1651.43 105.603 Q1648.77 108.12 1648.36 112.692 L1667.34 112.663 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M1686.67 90.1514 L1686.67 99.3528 L1697.64 99.3528 L1697.64 103.49 L1686.67 103.49 L1686.67 121.083 Q1686.67 125.047 1687.74 126.176 Q1688.84 127.304 1692.17 127.304 L1697.64 127.304 L1697.64 131.76 L1692.17 131.76 Q1686.01 131.76 1683.66 129.474 Q1681.32 127.159 1681.32 121.083 L1681.32 103.49 L1677.41 103.49 L1677.41 99.3528 L1681.32 99.3528 L1681.32 90.1514 L1686.67 90.1514 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M1719.37 115.47 Q1712.91 115.47 1710.43 116.945 Q1707.94 118.421 1707.94 121.98 Q1707.94 124.816 1709.79 126.494 Q1711.67 128.143 1714.88 128.143 Q1719.31 128.143 1721.97 125.018 Q1724.66 121.864 1724.66 116.656 L1724.66 115.47 L1719.37 115.47 M1729.99 113.271 L1729.99 131.76 L1724.66 131.76 L1724.66 126.841 Q1722.84 129.792 1720.12 131.21 Q1717.4 132.599 1713.46 132.599 Q1708.49 132.599 1705.54 129.821 Q1702.61 127.015 1702.61 122.327 Q1702.61 116.858 1706.26 114.081 Q1709.93 111.303 1717.2 111.303 L1724.66 111.303 L1724.66 110.782 Q1724.66 107.107 1722.23 105.111 Q1719.83 103.085 1715.46 103.085 Q1712.68 103.085 1710.05 103.751 Q1707.42 104.416 1704.99 105.747 L1704.99 100.828 Q1707.91 99.7 1710.66 99.1502 Q1713.41 98.5715 1716.01 98.5715 Q1723.04 98.5715 1726.51 102.217 Q1729.99 105.863 1729.99 113.271 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M1753.74 86.795 Q1749.86 93.45 1747.98 99.9604 Q1746.1 106.471 1746.1 113.155 Q1746.1 119.839 1747.98 126.407 Q1749.89 132.946 1753.74 139.572 L1749.11 139.572 Q1744.77 132.773 1742.6 126.204 Q1740.46 119.636 1740.46 113.155 Q1740.46 106.702 1742.6 100.163 Q1744.74 93.6236 1749.11 86.795 L1753.74 86.795 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M1782.53 108.467 Q1786.73 109.364 1789.07 112.2 Q1791.44 115.036 1791.44 119.202 Q1791.44 125.597 1787.05 129.098 Q1782.65 132.599 1774.55 132.599 Q1771.83 132.599 1768.93 132.049 Q1766.07 131.529 1763 130.458 L1763 124.816 Q1765.43 126.233 1768.33 126.957 Q1771.22 127.68 1774.37 127.68 Q1779.87 127.68 1782.73 125.51 Q1785.63 123.34 1785.63 119.202 Q1785.63 115.383 1782.94 113.242 Q1780.28 111.071 1775.5 111.071 L1770.47 111.071 L1770.47 106.268 L1775.73 106.268 Q1780.04 106.268 1782.33 104.561 Q1784.62 102.825 1784.62 99.5842 Q1784.62 96.2567 1782.24 94.4917 Q1779.9 92.6977 1775.5 92.6977 Q1773.1 92.6977 1770.35 93.2185 Q1767.6 93.7394 1764.3 94.8389 L1764.3 89.6306 Q1767.63 88.7047 1770.52 88.2417 Q1773.45 87.7788 1776.02 87.7788 Q1782.68 87.7788 1786.55 90.8169 Q1790.43 93.8262 1790.43 98.9766 Q1790.43 102.565 1788.38 105.053 Q1786.32 107.512 1782.53 108.467 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M1803.13 124.411 L1809.24 124.411 L1809.24 129.387 L1804.49 138.647 L1800.76 138.647 L1803.13 129.387 L1803.13 124.411 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M1839.07 108.467 Q1843.27 109.364 1845.61 112.2 Q1847.98 115.036 1847.98 119.202 Q1847.98 125.597 1843.59 129.098 Q1839.19 132.599 1831.09 132.599 Q1828.37 132.599 1825.47 132.049 Q1822.61 131.529 1819.54 130.458 L1819.54 124.816 Q1821.97 126.233 1824.86 126.957 Q1827.76 127.68 1830.91 127.68 Q1836.41 127.68 1839.27 125.51 Q1842.17 123.34 1842.17 119.202 Q1842.17 115.383 1839.48 113.242 Q1836.81 111.071 1832.04 111.071 L1827.01 111.071 L1827.01 106.268 L1832.27 106.268 Q1836.58 106.268 1838.87 104.561 Q1841.15 102.825 1841.15 99.5842 Q1841.15 96.2567 1838.78 94.4917 Q1836.44 92.6977 1832.04 92.6977 Q1829.64 92.6977 1826.89 93.2185 Q1824.14 93.7394 1820.84 94.8389 L1820.84 89.6306 Q1824.17 88.7047 1827.06 88.2417 Q1829.99 87.7788 1832.56 87.7788 Q1839.22 87.7788 1843.09 90.8169 Q1846.97 93.8262 1846.97 98.9766 Q1846.97 102.565 1844.92 105.053 Q1842.86 107.512 1839.07 108.467 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M1857.47 86.795 L1862.1 86.795 Q1866.44 93.6236 1868.59 100.163 Q1870.76 106.702 1870.76 113.155 Q1870.76 119.636 1868.59 126.204 Q1866.44 132.773 1862.1 139.572 L1857.47 139.572 Q1861.32 132.946 1863.2 126.407 Q1865.11 119.839 1865.11 113.155 Q1865.11 106.471 1863.2 99.9604 Q1861.32 93.45 1857.47 86.795 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip272)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"280.231,1387.13 300.353,1373.82 320.474,1360.52 340.596,1347.21 360.717,1333.91 380.839,1320.6 400.961,1307.3 421.082,1293.99 441.204,1280.69 461.325,1267.38 481.447,1254.08 501.569,1240.77 521.69,1227.47 541.812,1214.16 561.933,1200.86 582.055,1187.55 602.177,1174.25 622.298,1161.2 642.42,1148.64 662.541,1136.09 682.663,1123.54 702.785,1110.99 722.906,1098.44 743.028,1085.89 763.149,1073.34 783.271,1060.79 803.393,1048.24 823.514,1035.68 843.636,1023.13 863.757,1010.58 883.879,998.03 904.001,985.479 924.122,972.928 944.244,960.377 964.365,948.637 984.487,937.303 1004.61,925.968 1024.73,914.634 1044.85,903.3 1064.97,891.966 1085.1,880.631 1105.22,869.297 1125.34,857.963 1145.46,846.629 1165.58,835.295 1185.7,823.96 1205.82,812.626 1225.95,801.292 1246.07,789.958 1266.19,778.623 1286.31,767.289 1306.43,758.07 1326.55,748.851 1346.68,739.633 1366.8,730.414 1386.92,721.195 1407.04,711.976 1427.16,702.757 1447.28,693.538 1467.41,684.319 1487.53,675.101 1507.65,665.882 1527.77,656.663 1547.89,647.444 1568.01,638.225 1588.14,629.006 1608.26,619.787 1628.38,611.735 1648.5,606.016 1668.62,600.296 1688.74,594.577 1708.86,588.858 1728.99,583.138 1749.11,577.419 1769.23,571.699 1789.35,565.98 1809.47,560.26 1829.59,554.541 1849.72,548.822 1869.84,543.102 1889.96,537.383 1910.08,531.663 1930.2,525.944 1950.32,520.225 1970.45,517.099 1990.57,515.271 2010.69,513.442 2030.81,511.614 2050.93,509.785 2071.05,507.957 2091.18,506.128 2111.3,504.3 2131.42,502.471 2151.54,500.642 2171.66,498.814 2191.78,496.985 2211.9,495.157 2232.03,493.328 2252.15,491.5 2272.27,489.671 2292.39,487.843 \"/>\n<circle clip-path=\"url(#clip272)\" cx=\"280.231\" cy=\"1387.13\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip272)\" cx=\"615.591\" cy=\"1165.38\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip272)\" cx=\"950.951\" cy=\"956.193\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip272)\" cx=\"1286.31\" cy=\"767.289\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip272)\" cx=\"1621.67\" cy=\"613.642\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip272)\" cx=\"1957.03\" cy=\"518.318\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip272)\" cx=\"2292.39\" cy=\"487.843\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<polyline clip-path=\"url(#clip272)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"280.231,1387.13 300.353,1373.82 320.474,1360.52 340.596,1347.21 360.717,1333.91 380.839,1320.6 400.961,1307.3 421.082,1293.99 441.204,1280.69 461.325,1267.38 481.447,1254.08 501.569,1240.77 521.69,1227.47 541.812,1214.16 561.933,1200.86 582.055,1187.55 602.177,1174.25 622.298,1161.2 642.42,1148.64 662.541,1136.09 682.663,1123.54 702.785,1110.99 722.906,1098.44 743.028,1085.89 763.149,1073.34 783.271,1060.79 803.393,1048.24 823.514,1035.68 843.636,1023.13 863.757,1010.58 883.879,998.03 904.001,985.479 924.122,972.928 944.244,960.377 964.365,948.637 984.487,937.303 1004.61,925.968 1024.73,914.634 1044.85,903.3 1064.97,891.966 1085.1,880.631 1105.22,869.297 1125.34,857.963 1145.46,846.629 1165.58,835.295 1185.7,823.96 1205.82,812.626 1225.95,801.292 1246.07,789.958 1266.19,778.623 1286.31,767.289 1306.43,758.07 1326.55,748.852 1346.68,739.633 1366.8,730.414 1386.92,721.195 1407.04,711.976 1427.16,702.757 1447.28,693.538 1467.41,684.32 1487.53,675.101 1507.65,665.882 1527.77,656.663 1547.89,647.444 1568.01,638.225 1588.14,629.006 1608.26,619.788 1628.38,611.735 1648.5,606.016 1668.62,600.296 1688.74,594.577 1708.86,588.858 1728.99,583.138 1749.11,577.419 1769.23,571.699 1789.35,565.98 1809.47,560.26 1829.59,554.541 1849.72,548.822 1869.84,543.102 1889.96,537.383 1910.08,531.663 1930.2,525.944 1950.32,520.225 1970.45,517.099 1990.57,515.271 2010.69,513.442 2030.81,511.614 2050.93,509.785 2071.05,507.957 2091.18,506.128 2111.3,504.3 2131.42,502.471 2151.54,500.642 2171.66,498.814 2191.78,496.985 2211.9,495.157 2232.03,493.328 2252.15,491.5 2272.27,489.671 2292.39,487.843 \"/>\n<circle clip-path=\"url(#clip272)\" cx=\"280.231\" cy=\"1387.13\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip272)\" cx=\"615.591\" cy=\"1165.38\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip272)\" cx=\"950.951\" cy=\"956.193\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip272)\" cx=\"1286.31\" cy=\"767.289\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip272)\" cx=\"1621.67\" cy=\"613.642\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip272)\" cx=\"1957.03\" cy=\"518.318\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip272)\" cx=\"2292.39\" cy=\"487.843\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<polyline clip-path=\"url(#clip272)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"280.231,1387.13 300.353,1370.97 320.474,1354.81 340.596,1338.65 360.717,1322.49 380.839,1306.34 400.961,1290.18 421.082,1274.02 441.204,1257.86 461.325,1241.7 481.447,1225.54 501.569,1209.38 521.69,1193.22 541.812,1177.07 561.933,1160.91 582.055,1144.75 602.177,1128.59 622.298,1112.58 642.42,1096.87 662.541,1081.16 682.663,1065.45 702.785,1049.74 722.906,1034.03 743.028,1018.32 763.149,1002.61 783.271,986.905 803.393,971.195 823.514,955.486 843.636,939.776 863.757,924.067 883.879,908.358 904.001,892.648 924.122,876.939 944.244,861.229 964.365,846.093 984.487,831.244 1004.61,816.395 1024.73,801.546 1044.85,786.697 1064.97,771.847 1085.1,756.998 1105.22,742.149 1125.34,727.3 1145.46,712.451 1165.58,697.601 1185.7,682.752 1205.82,667.903 1225.95,653.054 1246.07,638.204 1266.19,623.355 1286.31,608.506 1306.43,595.456 1326.55,582.406 1346.68,569.356 1366.8,556.306 1386.92,543.256 1407.04,530.206 1427.16,517.156 1447.28,504.106 1467.41,491.056 1487.53,478.006 1507.65,464.956 1527.77,451.907 1547.89,438.857 1568.01,425.807 1588.14,412.757 1608.26,399.707 1628.38,387.973 1648.5,378.873 1668.62,369.773 1688.74,360.673 1708.86,351.572 1728.99,342.472 1749.11,333.372 1769.23,324.272 1789.35,315.171 1809.47,306.071 1829.59,296.971 1849.72,287.871 1869.84,278.771 1889.96,269.67 1910.08,260.57 1930.2,251.47 1950.32,242.37 1970.45,237.18 1990.57,233.947 2010.69,230.713 2030.81,227.48 2050.93,224.246 2071.05,221.012 2091.18,217.779 2111.3,214.545 2131.42,211.312 2151.54,208.078 2171.66,204.844 2191.78,201.611 2211.9,198.377 2232.03,195.144 2252.15,191.91 2272.27,188.676 2292.39,185.443 \"/>\n<circle clip-path=\"url(#clip272)\" cx=\"280.231\" cy=\"1387.13\" r=\"14.4\" fill=\"#3da44d\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip272)\" cx=\"615.591\" cy=\"1117.82\" r=\"14.4\" fill=\"#3da44d\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip272)\" cx=\"950.951\" cy=\"855.993\" r=\"14.4\" fill=\"#3da44d\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip272)\" cx=\"1286.31\" cy=\"608.506\" r=\"14.4\" fill=\"#3da44d\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip272)\" cx=\"1621.67\" cy=\"391.007\" r=\"14.4\" fill=\"#3da44d\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip272)\" cx=\"1957.03\" cy=\"239.336\" r=\"14.4\" fill=\"#3da44d\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip272)\" cx=\"2292.39\" cy=\"185.443\" r=\"14.4\" fill=\"#3da44d\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<polyline clip-path=\"url(#clip272)\" style=\"stroke:#c271d2; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"280.231,1387.13 300.353,1370.97 320.474,1354.81 340.596,1338.65 360.717,1322.49 380.839,1306.34 400.961,1290.18 421.082,1274.02 441.204,1257.86 461.325,1241.7 481.447,1225.54 501.569,1209.38 521.69,1193.22 541.812,1177.07 561.933,1160.91 582.055,1144.75 602.177,1128.59 622.298,1112.58 642.42,1096.87 662.541,1081.16 682.663,1065.45 702.785,1049.74 722.906,1034.03 743.028,1018.32 763.149,1002.61 783.271,986.905 803.393,971.195 823.514,955.486 843.636,939.776 863.757,924.067 883.879,908.358 904.001,892.648 924.122,876.939 944.244,861.229 964.365,846.093 984.487,831.244 1004.61,816.395 1024.73,801.546 1044.85,786.697 1064.97,771.847 1085.1,756.998 1105.22,742.149 1125.34,727.3 1145.46,712.451 1165.58,697.601 1185.7,682.752 1205.82,667.903 1225.95,653.054 1246.07,638.204 1266.19,623.355 1286.31,608.506 1306.43,595.456 1326.55,582.406 1346.68,569.356 1366.8,556.306 1386.92,543.256 1407.04,530.206 1427.16,517.156 1447.28,504.106 1467.41,491.056 1487.53,478.006 1507.65,464.956 1527.77,451.907 1547.89,438.857 1568.01,425.807 1588.14,412.757 1608.26,399.707 1628.38,387.973 1648.5,378.873 1668.62,369.773 1688.74,360.673 1708.86,351.572 1728.99,342.472 1749.11,333.372 1769.23,324.272 1789.35,315.171 1809.47,306.071 1829.59,296.971 1849.72,287.871 1869.84,278.771 1889.96,269.67 1910.08,260.57 1930.2,251.47 1950.32,242.37 1970.45,237.18 1990.57,233.947 2010.69,230.713 2030.81,227.48 2050.93,224.246 2071.05,221.012 2091.18,217.779 2111.3,214.545 2131.42,211.312 2151.54,208.078 2171.66,204.844 2191.78,201.611 2211.9,198.377 2232.03,195.144 2252.15,191.91 2272.27,188.676 2292.39,185.443 \"/>\n<circle clip-path=\"url(#clip272)\" cx=\"280.231\" cy=\"1387.13\" r=\"14.4\" fill=\"#c271d2\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip272)\" cx=\"615.591\" cy=\"1117.82\" r=\"14.4\" fill=\"#c271d2\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip272)\" cx=\"950.951\" cy=\"855.993\" r=\"14.4\" fill=\"#c271d2\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip272)\" cx=\"1286.31\" cy=\"608.506\" r=\"14.4\" fill=\"#c271d2\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip272)\" cx=\"1621.67\" cy=\"391.007\" r=\"14.4\" fill=\"#c271d2\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip272)\" cx=\"1957.03\" cy=\"239.336\" r=\"14.4\" fill=\"#c271d2\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip272)\" cx=\"2292.39\" cy=\"185.443\" r=\"14.4\" fill=\"#c271d2\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<polyline clip-path=\"url(#clip272)\" style=\"stroke:#ac8d18; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"280.231,1387.13 300.353,1373.55 320.474,1360 340.596,1346.48 360.717,1332.98 380.839,1319.52 400.961,1306.09 421.082,1292.69 441.204,1279.32 461.325,1265.99 481.447,1252.69 501.569,1239.42 521.69,1226.19 541.812,1213 561.933,1199.85 582.055,1186.73 602.177,1173.66 622.298,1160.63 642.42,1147.64 662.541,1134.69 682.663,1121.79 702.785,1108.93 722.906,1096.13 743.028,1083.37 763.149,1070.66 783.271,1058 803.393,1045.4 823.514,1032.85 843.636,1020.36 863.757,1007.93 883.879,995.558 904.001,983.247 924.122,971.001 944.244,958.821 964.365,946.708 984.487,934.666 1004.61,922.696 1024.73,910.8 1044.85,898.981 1064.97,887.242 1085.1,875.584 1105.22,864.011 1125.34,852.525 1145.46,841.129 1165.58,829.826 1185.7,818.619 1205.82,807.512 1225.95,796.506 1246.07,785.607 1266.19,774.817 1286.31,764.14 1306.43,753.58 1326.55,743.141 1346.68,732.826 1366.8,722.641 1386.92,712.589 1407.04,702.674 1427.16,692.902 1447.28,683.278 1467.41,673.806 1487.53,664.491 1507.65,655.338 1527.77,646.354 1547.89,637.544 1568.01,628.913 1588.14,620.467 1608.26,612.213 1628.38,604.157 1648.5,596.304 1668.62,588.661 1688.74,581.236 1708.86,574.034 1728.99,567.062 1749.11,560.327 1769.23,553.835 1789.35,547.593 1809.47,541.608 1829.59,535.887 1849.72,530.435 1869.84,525.258 1889.96,520.362 1910.08,515.752 1930.2,511.434 1950.32,507.41 1970.45,503.684 1990.57,500.259 2010.69,497.135 2030.81,494.312 2050.93,491.789 2071.05,489.563 2091.18,487.626 2111.3,485.973 2131.42,484.593 2151.54,483.471 2171.66,482.592 2191.78,481.936 2211.9,481.477 2232.03,481.187 2252.15,481.032 2272.27,480.972 2292.39,480.963 \"/>\n<polyline clip-path=\"url(#clip272)\" style=\"stroke:#00a9ad; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"280.231,1387.13 300.353,1370.83 320.474,1354.54 340.596,1338.27 360.717,1322.01 380.839,1305.77 400.961,1289.55 421.082,1273.34 441.204,1257.16 461.325,1240.99 481.447,1224.84 501.569,1208.72 521.69,1192.61 541.812,1176.53 561.933,1160.47 582.055,1144.43 602.177,1128.42 622.298,1112.43 642.42,1096.46 662.541,1080.53 682.663,1064.62 702.785,1048.74 722.906,1032.89 743.028,1017.07 763.149,1001.28 783.271,985.53 803.393,969.811 823.514,954.128 843.636,938.482 863.757,922.875 883.879,907.308 904.001,891.782 924.122,876.301 944.244,860.864 964.365,845.475 984.487,830.134 1004.61,814.845 1024.73,799.609 1044.85,784.428 1064.97,769.305 1085.1,754.243 1105.22,739.243 1125.34,724.308 1145.46,709.443 1165.58,694.648 1185.7,679.929 1205.82,665.287 1225.95,650.728 1246.07,636.253 1266.19,621.868 1286.31,607.576 1306.43,593.381 1326.55,579.289 1346.68,565.305 1366.8,551.432 1386.92,537.677 1407.04,524.046 1427.16,510.543 1447.28,497.176 1467.41,483.952 1487.53,470.876 1507.65,457.957 1527.77,445.203 1547.89,432.621 1568.01,420.219 1588.14,408.008 1608.26,395.996 1628.38,384.193 1648.5,372.61 1668.62,361.258 1688.74,350.147 1708.86,339.29 1728.99,328.699 1749.11,318.387 1769.23,308.367 1789.35,298.653 1809.47,289.259 1829.59,280.199 1849.72,271.487 1869.84,263.14 1889.96,255.17 1910.08,247.595 1930.2,240.427 1950.32,233.681 1970.45,227.371 1990.57,221.509 2010.69,216.106 2030.81,211.171 2050.93,206.712 2071.05,202.732 2091.18,199.234 2111.3,196.213 2131.42,193.661 2151.54,191.566 2171.66,189.904 2191.78,188.649 2211.9,187.763 2232.03,187.196 2252.15,186.89 2272.27,186.771 2292.39,186.754 \"/>\n<path clip-path=\"url(#clip270)\" d=\"M290.963 554.732 L817.977 554.732 L817.977 191.852 L290.963 191.852  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip270)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"290.963,554.732 817.977,554.732 817.977,191.852 290.963,191.852 290.963,554.732 \"/>\n<polyline clip-path=\"url(#clip270)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"314.661,243.692 456.854,243.692 \"/>\n<path clip-path=\"url(#clip270)\" d=\"M508.423 229.074 L508.423 234.004 Q506.062 231.805 503.377 230.717 Q500.715 229.629 497.705 229.629 Q491.78 229.629 488.631 233.264 Q485.483 236.875 485.483 243.726 Q485.483 250.555 488.631 254.189 Q491.78 257.8 497.705 257.8 Q500.715 257.8 503.377 256.712 Q506.062 255.625 508.423 253.425 L508.423 258.31 Q505.969 259.976 503.215 260.81 Q500.483 261.643 497.428 261.643 Q489.581 261.643 485.067 256.851 Q480.553 252.037 480.553 243.726 Q480.553 235.393 485.067 230.602 Q489.581 225.787 497.428 225.787 Q500.53 225.787 503.261 226.62 Q506.016 227.43 508.423 229.074 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M536.363 227.546 L536.363 232.106 Q533.701 230.833 531.34 230.208 Q528.978 229.583 526.779 229.583 Q522.96 229.583 520.877 231.064 Q518.816 232.546 518.816 235.277 Q518.816 237.569 520.182 238.75 Q521.571 239.907 525.414 240.625 L528.238 241.203 Q533.469 242.199 535.946 244.722 Q538.446 247.222 538.446 251.435 Q538.446 256.458 535.066 259.05 Q531.71 261.643 525.205 261.643 Q522.752 261.643 519.974 261.087 Q517.219 260.532 514.256 259.444 L514.256 254.629 Q517.104 256.226 519.835 257.037 Q522.566 257.847 525.205 257.847 Q529.21 257.847 531.386 256.273 Q533.562 254.699 533.562 251.782 Q533.562 249.236 531.988 247.8 Q530.437 246.365 526.872 245.648 L524.025 245.092 Q518.793 244.051 516.455 241.828 Q514.117 239.606 514.117 235.648 Q514.117 231.064 517.335 228.426 Q520.576 225.787 526.247 225.787 Q528.678 225.787 531.201 226.227 Q533.724 226.666 536.363 227.546 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M545.738 226.412 L567.589 226.412 L567.589 230.347 L550.414 230.347 L550.414 240.578 L566.872 240.578 L566.872 244.513 L550.414 244.513 L550.414 257.037 L568.006 257.037 L568.006 260.972 L545.738 260.972 L545.738 226.412 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M591.987 257.037 L599.626 257.037 L599.626 230.671 L591.316 232.338 L591.316 228.078 L599.58 226.412 L604.256 226.412 L604.256 257.037 L611.895 257.037 L611.895 260.972 L591.987 260.972 L591.987 257.037 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M646.038 225 Q642.936 230.324 641.432 235.532 Q639.927 240.74 639.927 246.088 Q639.927 251.435 641.432 256.689 Q642.959 261.921 646.038 267.222 L642.334 267.222 Q638.862 261.782 637.126 256.527 Q635.413 251.273 635.413 246.088 Q635.413 240.926 637.126 235.694 Q638.839 230.463 642.334 225 L646.038 225 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M675.853 245.324 L675.853 260.972 L671.593 260.972 L671.593 245.463 Q671.593 241.782 670.158 239.953 Q668.723 238.125 665.853 238.125 Q662.404 238.125 660.413 240.324 Q658.422 242.523 658.422 246.319 L658.422 260.972 L654.14 260.972 L654.14 235.046 L658.422 235.046 L658.422 239.074 Q659.95 236.736 662.01 235.578 Q664.093 234.421 666.802 234.421 Q671.269 234.421 673.561 237.199 Q675.853 239.953 675.853 245.324 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M688.468 257.083 L688.468 270.833 L684.186 270.833 L684.186 235.046 L688.468 235.046 L688.468 238.981 Q689.811 236.666 691.848 235.555 Q693.908 234.421 696.755 234.421 Q701.478 234.421 704.417 238.171 Q707.38 241.921 707.38 248.032 Q707.38 254.143 704.417 257.893 Q701.478 261.643 696.755 261.643 Q693.908 261.643 691.848 260.532 Q689.811 259.398 688.468 257.083 M702.959 248.032 Q702.959 243.333 701.015 240.671 Q699.093 237.986 695.714 237.986 Q692.334 237.986 690.39 240.671 Q688.468 243.333 688.468 248.032 Q688.468 252.731 690.39 255.416 Q692.334 258.078 695.714 258.078 Q699.093 258.078 701.015 255.416 Q702.959 252.731 702.959 248.032 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M714.996 239.444 L744.672 239.444 L744.672 243.333 L714.996 243.333 L714.996 239.444 M714.996 248.888 L744.672 248.888 L744.672 252.824 L714.996 252.824 L714.996 248.888 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M758.792 257.037 L775.111 257.037 L775.111 260.972 L753.167 260.972 L753.167 257.037 Q755.829 254.282 760.412 249.652 Q765.019 245 766.199 243.657 Q768.445 241.134 769.324 239.398 Q770.227 237.639 770.227 235.949 Q770.227 233.194 768.283 231.458 Q766.361 229.722 763.26 229.722 Q761.061 229.722 758.607 230.486 Q756.176 231.25 753.399 232.801 L753.399 228.078 Q756.223 226.944 758.676 226.365 Q761.13 225.787 763.167 225.787 Q768.537 225.787 771.732 228.472 Q774.926 231.157 774.926 235.648 Q774.926 237.777 774.116 239.699 Q773.329 241.597 771.223 244.189 Q770.644 244.861 767.542 248.078 Q764.44 251.273 758.792 257.037 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M783.653 225 L787.357 225 Q790.829 230.463 792.542 235.694 Q794.278 240.926 794.278 246.088 Q794.278 251.273 792.542 256.527 Q790.829 261.782 787.357 267.222 L783.653 267.222 Q786.732 261.921 788.236 256.689 Q789.764 251.435 789.764 246.088 Q789.764 240.74 788.236 235.532 Q786.732 230.324 783.653 225 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip270)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"314.661,295.532 456.854,295.532 \"/>\n<path clip-path=\"url(#clip270)\" d=\"M508.423 280.914 L508.423 285.844 Q506.062 283.645 503.377 282.557 Q500.715 281.469 497.705 281.469 Q491.78 281.469 488.631 285.104 Q485.483 288.715 485.483 295.566 Q485.483 302.395 488.631 306.029 Q491.78 309.64 497.705 309.64 Q500.715 309.64 503.377 308.552 Q506.062 307.465 508.423 305.265 L508.423 310.15 Q505.969 311.816 503.215 312.65 Q500.483 313.483 497.428 313.483 Q489.581 313.483 485.067 308.691 Q480.553 303.877 480.553 295.566 Q480.553 287.233 485.067 282.442 Q489.581 277.627 497.428 277.627 Q500.53 277.627 503.261 278.46 Q506.016 279.27 508.423 280.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M536.363 279.386 L536.363 283.946 Q533.701 282.673 531.34 282.048 Q528.978 281.423 526.779 281.423 Q522.96 281.423 520.877 282.904 Q518.816 284.386 518.816 287.117 Q518.816 289.409 520.182 290.59 Q521.571 291.747 525.414 292.465 L528.238 293.043 Q533.469 294.039 535.946 296.562 Q538.446 299.062 538.446 303.275 Q538.446 308.298 535.066 310.89 Q531.71 313.483 525.205 313.483 Q522.752 313.483 519.974 312.927 Q517.219 312.372 514.256 311.284 L514.256 306.469 Q517.104 308.066 519.835 308.877 Q522.566 309.687 525.205 309.687 Q529.21 309.687 531.386 308.113 Q533.562 306.539 533.562 303.622 Q533.562 301.076 531.988 299.64 Q530.437 298.205 526.872 297.488 L524.025 296.932 Q518.793 295.891 516.455 293.668 Q514.117 291.446 514.117 287.488 Q514.117 282.904 517.335 280.266 Q520.576 277.627 526.247 277.627 Q528.678 277.627 531.201 278.067 Q533.724 278.506 536.363 279.386 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M545.738 278.252 L567.589 278.252 L567.589 282.187 L550.414 282.187 L550.414 292.418 L566.872 292.418 L566.872 296.353 L550.414 296.353 L550.414 308.877 L568.006 308.877 L568.006 312.812 L545.738 312.812 L545.738 278.252 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M595.205 308.877 L611.524 308.877 L611.524 312.812 L589.58 312.812 L589.58 308.877 Q592.242 306.122 596.825 301.492 Q601.432 296.84 602.612 295.497 Q604.858 292.974 605.737 291.238 Q606.64 289.479 606.64 287.789 Q606.64 285.034 604.696 283.298 Q602.774 281.562 599.673 281.562 Q597.473 281.562 595.02 282.326 Q592.589 283.09 589.811 284.641 L589.811 279.918 Q592.636 278.784 595.089 278.205 Q597.543 277.627 599.58 277.627 Q604.95 277.627 608.145 280.312 Q611.339 282.997 611.339 287.488 Q611.339 289.617 610.529 291.539 Q609.742 293.437 607.635 296.029 Q607.057 296.701 603.955 299.918 Q600.853 303.113 595.205 308.877 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M646.038 276.84 Q642.936 282.164 641.432 287.372 Q639.927 292.58 639.927 297.928 Q639.927 303.275 641.432 308.529 Q642.959 313.761 646.038 319.062 L642.334 319.062 Q638.862 313.622 637.126 308.367 Q635.413 303.113 635.413 297.928 Q635.413 292.766 637.126 287.534 Q638.839 282.303 642.334 276.84 L646.038 276.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M675.853 297.164 L675.853 312.812 L671.593 312.812 L671.593 297.303 Q671.593 293.622 670.158 291.793 Q668.723 289.965 665.853 289.965 Q662.404 289.965 660.413 292.164 Q658.422 294.363 658.422 298.159 L658.422 312.812 L654.14 312.812 L654.14 286.886 L658.422 286.886 L658.422 290.914 Q659.95 288.576 662.01 287.418 Q664.093 286.261 666.802 286.261 Q671.269 286.261 673.561 289.039 Q675.853 291.793 675.853 297.164 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M688.468 308.923 L688.468 322.673 L684.186 322.673 L684.186 286.886 L688.468 286.886 L688.468 290.821 Q689.811 288.506 691.848 287.395 Q693.908 286.261 696.755 286.261 Q701.478 286.261 704.417 290.011 Q707.38 293.761 707.38 299.872 Q707.38 305.983 704.417 309.733 Q701.478 313.483 696.755 313.483 Q693.908 313.483 691.848 312.372 Q689.811 311.238 688.468 308.923 M702.959 299.872 Q702.959 295.173 701.015 292.511 Q699.093 289.826 695.714 289.826 Q692.334 289.826 690.39 292.511 Q688.468 295.173 688.468 299.872 Q688.468 304.571 690.39 307.256 Q692.334 309.918 695.714 309.918 Q699.093 309.918 701.015 307.256 Q702.959 304.571 702.959 299.872 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M714.996 291.284 L744.672 291.284 L744.672 295.173 L714.996 295.173 L714.996 291.284 M714.996 300.728 L744.672 300.728 L744.672 304.664 L714.996 304.664 L714.996 300.728 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M758.792 308.877 L775.111 308.877 L775.111 312.812 L753.167 312.812 L753.167 308.877 Q755.829 306.122 760.412 301.492 Q765.019 296.84 766.199 295.497 Q768.445 292.974 769.324 291.238 Q770.227 289.479 770.227 287.789 Q770.227 285.034 768.283 283.298 Q766.361 281.562 763.26 281.562 Q761.061 281.562 758.607 282.326 Q756.176 283.09 753.399 284.641 L753.399 279.918 Q756.223 278.784 758.676 278.205 Q761.13 277.627 763.167 277.627 Q768.537 277.627 771.732 280.312 Q774.926 282.997 774.926 287.488 Q774.926 289.617 774.116 291.539 Q773.329 293.437 771.223 296.029 Q770.644 296.701 767.542 299.918 Q764.44 303.113 758.792 308.877 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M783.653 276.84 L787.357 276.84 Q790.829 282.303 792.542 287.534 Q794.278 292.766 794.278 297.928 Q794.278 303.113 792.542 308.367 Q790.829 313.622 787.357 319.062 L783.653 319.062 Q786.732 313.761 788.236 308.529 Q789.764 303.275 789.764 297.928 Q789.764 292.58 788.236 287.372 Q786.732 282.164 783.653 276.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip270)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"314.661,347.372 456.854,347.372 \"/>\n<path clip-path=\"url(#clip270)\" d=\"M508.423 332.754 L508.423 337.684 Q506.062 335.485 503.377 334.397 Q500.715 333.309 497.705 333.309 Q491.78 333.309 488.631 336.944 Q485.483 340.555 485.483 347.406 Q485.483 354.235 488.631 357.869 Q491.78 361.48 497.705 361.48 Q500.715 361.48 503.377 360.392 Q506.062 359.305 508.423 357.105 L508.423 361.99 Q505.969 363.656 503.215 364.49 Q500.483 365.323 497.428 365.323 Q489.581 365.323 485.067 360.531 Q480.553 355.717 480.553 347.406 Q480.553 339.073 485.067 334.282 Q489.581 329.467 497.428 329.467 Q500.53 329.467 503.261 330.3 Q506.016 331.11 508.423 332.754 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M536.363 331.226 L536.363 335.786 Q533.701 334.513 531.34 333.888 Q528.978 333.263 526.779 333.263 Q522.96 333.263 520.877 334.744 Q518.816 336.226 518.816 338.957 Q518.816 341.249 520.182 342.43 Q521.571 343.587 525.414 344.305 L528.238 344.883 Q533.469 345.879 535.946 348.402 Q538.446 350.902 538.446 355.115 Q538.446 360.138 535.066 362.73 Q531.71 365.323 525.205 365.323 Q522.752 365.323 519.974 364.767 Q517.219 364.212 514.256 363.124 L514.256 358.309 Q517.104 359.906 519.835 360.717 Q522.566 361.527 525.205 361.527 Q529.21 361.527 531.386 359.953 Q533.562 358.379 533.562 355.462 Q533.562 352.916 531.988 351.48 Q530.437 350.045 526.872 349.328 L524.025 348.772 Q518.793 347.731 516.455 345.508 Q514.117 343.286 514.117 339.328 Q514.117 334.744 517.335 332.106 Q520.576 329.467 526.247 329.467 Q528.678 329.467 531.201 329.907 Q533.724 330.346 536.363 331.226 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M545.738 330.092 L567.589 330.092 L567.589 334.027 L550.414 334.027 L550.414 344.258 L566.872 344.258 L566.872 348.193 L550.414 348.193 L550.414 360.717 L568.006 360.717 L568.006 364.652 L545.738 364.652 L545.738 330.092 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M591.987 360.717 L599.626 360.717 L599.626 334.351 L591.316 336.018 L591.316 331.758 L599.58 330.092 L604.256 330.092 L604.256 360.717 L611.895 360.717 L611.895 364.652 L591.987 364.652 L591.987 360.717 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M646.038 328.68 Q642.936 334.004 641.432 339.212 Q639.927 344.42 639.927 349.768 Q639.927 355.115 641.432 360.369 Q642.959 365.601 646.038 370.902 L642.334 370.902 Q638.862 365.462 637.126 360.207 Q635.413 354.953 635.413 349.768 Q635.413 344.606 637.126 339.374 Q638.839 334.143 642.334 328.68 L646.038 328.68 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M675.853 349.004 L675.853 364.652 L671.593 364.652 L671.593 349.143 Q671.593 345.462 670.158 343.633 Q668.723 341.805 665.853 341.805 Q662.404 341.805 660.413 344.004 Q658.422 346.203 658.422 349.999 L658.422 364.652 L654.14 364.652 L654.14 338.726 L658.422 338.726 L658.422 342.754 Q659.95 340.416 662.01 339.258 Q664.093 338.101 666.802 338.101 Q671.269 338.101 673.561 340.879 Q675.853 343.633 675.853 349.004 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M688.468 360.763 L688.468 374.513 L684.186 374.513 L684.186 338.726 L688.468 338.726 L688.468 342.661 Q689.811 340.346 691.848 339.235 Q693.908 338.101 696.755 338.101 Q701.478 338.101 704.417 341.851 Q707.38 345.601 707.38 351.712 Q707.38 357.823 704.417 361.573 Q701.478 365.323 696.755 365.323 Q693.908 365.323 691.848 364.212 Q689.811 363.078 688.468 360.763 M702.959 351.712 Q702.959 347.013 701.015 344.351 Q699.093 341.666 695.714 341.666 Q692.334 341.666 690.39 344.351 Q688.468 347.013 688.468 351.712 Q688.468 356.411 690.39 359.096 Q692.334 361.758 695.714 361.758 Q699.093 361.758 701.015 359.096 Q702.959 356.411 702.959 351.712 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M714.996 343.124 L744.672 343.124 L744.672 347.013 L714.996 347.013 L714.996 343.124 M714.996 352.568 L744.672 352.568 L744.672 356.504 L714.996 356.504 L714.996 352.568 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M767.611 334.166 L755.806 352.615 L767.611 352.615 L767.611 334.166 M766.385 330.092 L772.264 330.092 L772.264 352.615 L777.195 352.615 L777.195 356.504 L772.264 356.504 L772.264 364.652 L767.611 364.652 L767.611 356.504 L752.01 356.504 L752.01 351.99 L766.385 330.092 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M783.653 328.68 L787.357 328.68 Q790.829 334.143 792.542 339.374 Q794.278 344.606 794.278 349.768 Q794.278 354.953 792.542 360.207 Q790.829 365.462 787.357 370.902 L783.653 370.902 Q786.732 365.601 788.236 360.369 Q789.764 355.115 789.764 349.768 Q789.764 344.42 788.236 339.212 Q786.732 334.004 783.653 328.68 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip270)\" style=\"stroke:#c271d2; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"314.661,399.212 456.854,399.212 \"/>\n<path clip-path=\"url(#clip270)\" d=\"M508.423 384.594 L508.423 389.524 Q506.062 387.325 503.377 386.237 Q500.715 385.149 497.705 385.149 Q491.78 385.149 488.631 388.784 Q485.483 392.395 485.483 399.246 Q485.483 406.075 488.631 409.709 Q491.78 413.32 497.705 413.32 Q500.715 413.32 503.377 412.232 Q506.062 411.145 508.423 408.945 L508.423 413.83 Q505.969 415.496 503.215 416.33 Q500.483 417.163 497.428 417.163 Q489.581 417.163 485.067 412.371 Q480.553 407.557 480.553 399.246 Q480.553 390.913 485.067 386.122 Q489.581 381.307 497.428 381.307 Q500.53 381.307 503.261 382.14 Q506.016 382.95 508.423 384.594 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M536.363 383.066 L536.363 387.626 Q533.701 386.353 531.34 385.728 Q528.978 385.103 526.779 385.103 Q522.96 385.103 520.877 386.584 Q518.816 388.066 518.816 390.797 Q518.816 393.089 520.182 394.27 Q521.571 395.427 525.414 396.145 L528.238 396.723 Q533.469 397.719 535.946 400.242 Q538.446 402.742 538.446 406.955 Q538.446 411.978 535.066 414.57 Q531.71 417.163 525.205 417.163 Q522.752 417.163 519.974 416.607 Q517.219 416.052 514.256 414.964 L514.256 410.149 Q517.104 411.746 519.835 412.557 Q522.566 413.367 525.205 413.367 Q529.21 413.367 531.386 411.793 Q533.562 410.219 533.562 407.302 Q533.562 404.756 531.988 403.32 Q530.437 401.885 526.872 401.168 L524.025 400.612 Q518.793 399.571 516.455 397.348 Q514.117 395.126 514.117 391.168 Q514.117 386.584 517.335 383.946 Q520.576 381.307 526.247 381.307 Q528.678 381.307 531.201 381.747 Q533.724 382.186 536.363 383.066 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M545.738 381.932 L567.589 381.932 L567.589 385.867 L550.414 385.867 L550.414 396.098 L566.872 396.098 L566.872 400.033 L550.414 400.033 L550.414 412.557 L568.006 412.557 L568.006 416.492 L545.738 416.492 L545.738 381.932 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M595.205 412.557 L611.524 412.557 L611.524 416.492 L589.58 416.492 L589.58 412.557 Q592.242 409.802 596.825 405.172 Q601.432 400.52 602.612 399.177 Q604.858 396.654 605.737 394.918 Q606.64 393.159 606.64 391.469 Q606.64 388.714 604.696 386.978 Q602.774 385.242 599.673 385.242 Q597.473 385.242 595.02 386.006 Q592.589 386.77 589.811 388.321 L589.811 383.598 Q592.636 382.464 595.089 381.885 Q597.543 381.307 599.58 381.307 Q604.95 381.307 608.145 383.992 Q611.339 386.677 611.339 391.168 Q611.339 393.297 610.529 395.219 Q609.742 397.117 607.635 399.709 Q607.057 400.381 603.955 403.598 Q600.853 406.793 595.205 412.557 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M646.038 380.52 Q642.936 385.844 641.432 391.052 Q639.927 396.26 639.927 401.608 Q639.927 406.955 641.432 412.209 Q642.959 417.441 646.038 422.742 L642.334 422.742 Q638.862 417.302 637.126 412.047 Q635.413 406.793 635.413 401.608 Q635.413 396.446 637.126 391.214 Q638.839 385.983 642.334 380.52 L646.038 380.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M675.853 400.844 L675.853 416.492 L671.593 416.492 L671.593 400.983 Q671.593 397.302 670.158 395.473 Q668.723 393.645 665.853 393.645 Q662.404 393.645 660.413 395.844 Q658.422 398.043 658.422 401.839 L658.422 416.492 L654.14 416.492 L654.14 390.566 L658.422 390.566 L658.422 394.594 Q659.95 392.256 662.01 391.098 Q664.093 389.941 666.802 389.941 Q671.269 389.941 673.561 392.719 Q675.853 395.473 675.853 400.844 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M688.468 412.603 L688.468 426.353 L684.186 426.353 L684.186 390.566 L688.468 390.566 L688.468 394.501 Q689.811 392.186 691.848 391.075 Q693.908 389.941 696.755 389.941 Q701.478 389.941 704.417 393.691 Q707.38 397.441 707.38 403.552 Q707.38 409.663 704.417 413.413 Q701.478 417.163 696.755 417.163 Q693.908 417.163 691.848 416.052 Q689.811 414.918 688.468 412.603 M702.959 403.552 Q702.959 398.853 701.015 396.191 Q699.093 393.506 695.714 393.506 Q692.334 393.506 690.39 396.191 Q688.468 398.853 688.468 403.552 Q688.468 408.251 690.39 410.936 Q692.334 413.598 695.714 413.598 Q699.093 413.598 701.015 410.936 Q702.959 408.251 702.959 403.552 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M714.996 394.964 L744.672 394.964 L744.672 398.853 L714.996 398.853 L714.996 394.964 M714.996 404.408 L744.672 404.408 L744.672 408.344 L714.996 408.344 L714.996 404.408 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M767.611 386.006 L755.806 404.455 L767.611 404.455 L767.611 386.006 M766.385 381.932 L772.264 381.932 L772.264 404.455 L777.195 404.455 L777.195 408.344 L772.264 408.344 L772.264 416.492 L767.611 416.492 L767.611 408.344 L752.01 408.344 L752.01 403.83 L766.385 381.932 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M783.653 380.52 L787.357 380.52 Q790.829 385.983 792.542 391.214 Q794.278 396.446 794.278 401.608 Q794.278 406.793 792.542 412.047 Q790.829 417.302 787.357 422.742 L783.653 422.742 Q786.732 417.441 788.236 412.209 Q789.764 406.955 789.764 401.608 Q789.764 396.26 788.236 391.052 Q786.732 385.844 783.653 380.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip270)\" style=\"stroke:#ac8d18; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"314.661,451.052 456.854,451.052 \"/>\n<path clip-path=\"url(#clip270)\" d=\"M485.229 451.827 L485.229 464.489 L492.729 464.489 Q496.502 464.489 498.307 462.938 Q500.136 461.364 500.136 458.147 Q500.136 454.906 498.307 453.378 Q496.502 451.827 492.729 451.827 L485.229 451.827 M485.229 437.614 L485.229 448.031 L492.15 448.031 Q495.576 448.031 497.243 446.758 Q498.932 445.461 498.932 442.823 Q498.932 440.207 497.243 438.911 Q495.576 437.614 492.15 437.614 L485.229 437.614 M480.553 433.772 L492.497 433.772 Q497.844 433.772 500.738 435.994 Q503.631 438.216 503.631 442.313 Q503.631 445.485 502.15 447.36 Q500.668 449.235 497.798 449.698 Q501.247 450.438 503.145 452.799 Q505.067 455.137 505.067 458.656 Q505.067 463.285 501.918 465.809 Q498.77 468.332 492.96 468.332 L480.553 468.332 L480.553 433.772 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M513.076 433.772 L519.372 433.772 L534.696 462.684 L534.696 433.772 L539.233 433.772 L539.233 468.332 L532.937 468.332 L517.613 439.42 L517.613 468.332 L513.076 468.332 L513.076 433.772 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M548.539 433.772 L570.39 433.772 L570.39 437.707 L553.214 437.707 L553.214 447.938 L569.673 447.938 L569.673 451.873 L553.214 451.873 L553.214 464.397 L570.807 464.397 L570.807 468.332 L548.539 468.332 L548.539 433.772 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M603.608 432.36 Q600.506 437.684 599.001 442.892 Q597.497 448.1 597.497 453.448 Q597.497 458.795 599.001 464.049 Q600.529 469.281 603.608 474.582 L599.904 474.582 Q596.432 469.142 594.696 463.887 Q592.983 458.633 592.983 453.448 Q592.983 448.286 594.696 443.054 Q596.409 437.823 599.904 432.36 L603.608 432.36 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M633.422 452.684 L633.422 468.332 L629.163 468.332 L629.163 452.823 Q629.163 449.142 627.728 447.313 Q626.293 445.485 623.422 445.485 Q619.973 445.485 617.983 447.684 Q615.992 449.883 615.992 453.679 L615.992 468.332 L611.709 468.332 L611.709 442.406 L615.992 442.406 L615.992 446.434 Q617.52 444.096 619.58 442.938 Q621.663 441.781 624.371 441.781 Q628.839 441.781 631.131 444.559 Q633.422 447.313 633.422 452.684 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M646.038 464.443 L646.038 478.193 L641.756 478.193 L641.756 442.406 L646.038 442.406 L646.038 446.341 Q647.381 444.026 649.418 442.915 Q651.478 441.781 654.325 441.781 Q659.047 441.781 661.987 445.531 Q664.95 449.281 664.95 455.392 Q664.95 461.503 661.987 465.253 Q659.047 469.003 654.325 469.003 Q651.478 469.003 649.418 467.892 Q647.381 466.758 646.038 464.443 M660.529 455.392 Q660.529 450.693 658.584 448.031 Q656.663 445.346 653.283 445.346 Q649.904 445.346 647.959 448.031 Q646.038 450.693 646.038 455.392 Q646.038 460.091 647.959 462.776 Q649.904 465.438 653.283 465.438 Q656.663 465.438 658.584 462.776 Q660.529 460.091 660.529 455.392 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M672.566 446.804 L702.241 446.804 L702.241 450.693 L672.566 450.693 L672.566 446.804 M672.566 456.248 L702.241 456.248 L702.241 460.184 L672.566 460.184 L672.566 456.248 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M716.362 464.397 L732.681 464.397 L732.681 468.332 L710.737 468.332 L710.737 464.397 Q713.399 461.642 717.982 457.012 Q722.589 452.36 723.769 451.017 Q726.014 448.494 726.894 446.758 Q727.797 444.999 727.797 443.309 Q727.797 440.554 725.852 438.818 Q723.931 437.082 720.829 437.082 Q718.63 437.082 716.177 437.846 Q713.746 438.61 710.968 440.161 L710.968 435.438 Q713.792 434.304 716.246 433.725 Q718.7 433.147 720.737 433.147 Q726.107 433.147 729.301 435.832 Q732.496 438.517 732.496 443.008 Q732.496 445.137 731.686 447.059 Q730.899 448.957 728.792 451.549 Q728.213 452.221 725.112 455.438 Q722.01 458.633 716.362 464.397 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M741.223 432.36 L744.926 432.36 Q748.399 437.823 750.112 443.054 Q751.848 448.286 751.848 453.448 Q751.848 458.633 750.112 463.887 Q748.399 469.142 744.926 474.582 L741.223 474.582 Q744.301 469.281 745.806 464.049 Q747.334 458.795 747.334 453.448 Q747.334 448.1 745.806 442.892 Q744.301 437.684 741.223 432.36 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip270)\" style=\"stroke:#00a9ad; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"314.661,502.892 456.854,502.892 \"/>\n<path clip-path=\"url(#clip270)\" d=\"M485.229 503.667 L485.229 516.329 L492.729 516.329 Q496.502 516.329 498.307 514.778 Q500.136 513.204 500.136 509.987 Q500.136 506.746 498.307 505.218 Q496.502 503.667 492.729 503.667 L485.229 503.667 M485.229 489.454 L485.229 499.871 L492.15 499.871 Q495.576 499.871 497.243 498.598 Q498.932 497.301 498.932 494.663 Q498.932 492.047 497.243 490.751 Q495.576 489.454 492.15 489.454 L485.229 489.454 M480.553 485.612 L492.497 485.612 Q497.844 485.612 500.738 487.834 Q503.631 490.056 503.631 494.153 Q503.631 497.325 502.15 499.2 Q500.668 501.075 497.798 501.538 Q501.247 502.278 503.145 504.639 Q505.067 506.977 505.067 510.496 Q505.067 515.125 501.918 517.649 Q498.77 520.172 492.96 520.172 L480.553 520.172 L480.553 485.612 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M513.076 485.612 L519.372 485.612 L534.696 514.524 L534.696 485.612 L539.233 485.612 L539.233 520.172 L532.937 520.172 L517.613 491.26 L517.613 520.172 L513.076 520.172 L513.076 485.612 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M548.539 485.612 L570.39 485.612 L570.39 489.547 L553.214 489.547 L553.214 499.778 L569.673 499.778 L569.673 503.713 L553.214 503.713 L553.214 516.237 L570.807 516.237 L570.807 520.172 L548.539 520.172 L548.539 485.612 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M603.608 484.2 Q600.506 489.524 599.001 494.732 Q597.497 499.94 597.497 505.288 Q597.497 510.635 599.001 515.889 Q600.529 521.121 603.608 526.422 L599.904 526.422 Q596.432 520.982 594.696 515.727 Q592.983 510.473 592.983 505.288 Q592.983 500.126 594.696 494.894 Q596.409 489.663 599.904 484.2 L603.608 484.2 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M633.422 504.524 L633.422 520.172 L629.163 520.172 L629.163 504.663 Q629.163 500.982 627.728 499.153 Q626.293 497.325 623.422 497.325 Q619.973 497.325 617.983 499.524 Q615.992 501.723 615.992 505.519 L615.992 520.172 L611.709 520.172 L611.709 494.246 L615.992 494.246 L615.992 498.274 Q617.52 495.936 619.58 494.778 Q621.663 493.621 624.371 493.621 Q628.839 493.621 631.131 496.399 Q633.422 499.153 633.422 504.524 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M646.038 516.283 L646.038 530.033 L641.756 530.033 L641.756 494.246 L646.038 494.246 L646.038 498.181 Q647.381 495.866 649.418 494.755 Q651.478 493.621 654.325 493.621 Q659.047 493.621 661.987 497.371 Q664.95 501.121 664.95 507.232 Q664.95 513.343 661.987 517.093 Q659.047 520.843 654.325 520.843 Q651.478 520.843 649.418 519.732 Q647.381 518.598 646.038 516.283 M660.529 507.232 Q660.529 502.533 658.584 499.871 Q656.663 497.186 653.283 497.186 Q649.904 497.186 647.959 499.871 Q646.038 502.533 646.038 507.232 Q646.038 511.931 647.959 514.616 Q649.904 517.278 653.283 517.278 Q656.663 517.278 658.584 514.616 Q660.529 511.931 660.529 507.232 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M672.566 498.644 L702.241 498.644 L702.241 502.533 L672.566 502.533 L672.566 498.644 M672.566 508.088 L702.241 508.088 L702.241 512.024 L672.566 512.024 L672.566 508.088 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M725.181 489.686 L713.376 508.135 L725.181 508.135 L725.181 489.686 M723.954 485.612 L729.834 485.612 L729.834 508.135 L734.764 508.135 L734.764 512.024 L729.834 512.024 L729.834 520.172 L725.181 520.172 L725.181 512.024 L709.579 512.024 L709.579 507.51 L723.954 485.612 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M741.223 484.2 L744.926 484.2 Q748.399 489.663 750.112 494.894 Q751.848 500.126 751.848 505.288 Q751.848 510.473 750.112 515.727 Q748.399 520.982 744.926 526.422 L741.223 526.422 Q744.301 521.121 745.806 515.889 Q747.334 510.635 747.334 505.288 Q747.334 499.94 745.806 494.732 Q744.301 489.524 741.223 484.2 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /></svg>\n","category":"page"},{"location":"generated/afr-progs-asym-sym-compare/","page":"Asymmetric - symmetric CSE test","title":"Asymmetric - symmetric CSE test","text":"","category":"page"},{"location":"generated/afr-progs-asym-sym-compare/","page":"Asymmetric - symmetric CSE test","title":"Asymmetric - symmetric CSE test","text":"This page was generated using Literate.jl.","category":"page"},{"location":"generated/afr-progs-asym-sym-np2-hyper/#Hyperparameter-optimisation-for-initial-conditions","page":"Hyperparameter optimisation for initial conditions","title":"Hyperparameter optimisation for initial conditions","text":"","category":"section"},{"location":"generated/afr-progs-asym-sym-np2-hyper/","page":"Hyperparameter optimisation for initial conditions","title":"Hyperparameter optimisation for initial conditions","text":"This example demonstrates the use of HyperTuning to find good initial conditions for an asymmetric auction problem with 2 players. Note this example uses the asymmetric code base but both players have the same distribution so is effectively symmetric.","category":"page"},{"location":"generated/afr-progs-asym-sym-np2-hyper/#Load-required-modules","page":"Hyperparameter optimisation for initial conditions","title":"Load required modules","text":"","category":"section"},{"location":"generated/afr-progs-asym-sym-np2-hyper/","page":"Hyperparameter optimisation for initial conditions","title":"Hyperparameter optimisation for initial conditions","text":"using ConstrainedStrategicEquilibrium\nusing Plots\nusing Distributions\nusing NonlinearSolve\nusing HyperTuning\nusing Logging","category":"page"},{"location":"generated/afr-progs-asym-sym-np2-hyper/#Define-the-objective-function","page":"Hyperparameter optimisation for initial conditions","title":"Define the objective function","text":"","category":"section"},{"location":"generated/afr-progs-asym-sym-np2-hyper/","page":"Hyperparameter optimisation for initial conditions","title":"Hyperparameter optimisation for initial conditions","text":"The objective function solves the CSE and computes the Mean Squared Error (MSE) against the Bayesian Nash Equilibrium (BNE). It takes trial values for a, b, c and uses them as initial guesses.","category":"page"},{"location":"generated/afr-progs-asym-sym-np2-hyper/","page":"Hyperparameter optimisation for initial conditions","title":"Hyperparameter optimisation for initial conditions","text":"We are able to compute the BNE (and therefore MSE) because both players have the same distribution. If you were to run this for a true asymmetric case then you would need to choose another metric to return from the objective function, such as sol.c_2 or the norm of the residual vector from the solver.","category":"page"},{"location":"generated/afr-progs-asym-sym-np2-hyper/","page":"Hyperparameter optimisation for initial conditions","title":"Hyperparameter optimisation for initial conditions","text":"We create the CSE problem only for the initial value of n (2 in this case) and set the tolerances loosely as we only need to roughly converge on a good initial guess.","category":"page"},{"location":"generated/afr-progs-asym-sym-np2-hyper/","page":"Hyperparameter optimisation for initial conditions","title":"Hyperparameter optimisation for initial conditions","text":"function objective(trial)\n    # unpack the initial guess and store it in a vector suitable for passing to the problem\n    @unpack a, b, c = trial\n    xguess = [a, b, c]\n\n    # create the problem setting inin==maxn\n    cse_prob = AsymmetricAfrprogsCSEProblem(\n        inin=2,\n        maxn=2,\n        np=2,\n        mc=10000,\n        solver_kwargs=(show_trace=Val(false), maxiters=2000, abstol=1e-6, reltol=1e-6),\n        solver_initial_guess=xguess,\n        distributions=[Beta(3, 3), Beta(3, 3)],\n        knot_refinement_strategy=:even_spacing,\n    )\n\n    # solve the CSE\n    solutions = compute_cse(cse_prob)\n\n    # now we compute the BNE for the same problem\n    bnex = Vector{Float64}(undef, 101)\n    bney = Vector{Float64}(undef, 101)\n    for m = 1:101\n        ti = (m - 1.0) / 100.0\n        if ti == 0\n            true_bne = 0.0\n        else\n            true_bne = compute_bne(ti, cse_prob.distributions[1], cse_prob.np)\n        end\n        bnex[m] = ti\n        bney[m] = true_bne\n    end\n\n    # compute the MSE for the CSE against the BNE and return that\n    mse = Inf\n    sol = solutions[1]\n    if sol.success\n        mse1_sum = 0.0\n        mse2_sum = 0.0\n        for m = 1:101\n            if m == 1\n                cse1 = cse2 = 0\n            else\n                cse1 = sol.cse[!, \"CSE(x) 1\"][m]\n                cse2 = sol.cse[!, \"CSE(x) 2\"][m]\n            end\n            mse1_sum += (sol.cse[!, \"CSE(x) 1\"][m] - bney[m])^2\n            mse2_sum += (sol.cse[!, \"CSE(x) 2\"][m] - bney[m])^2\n        end\n        mse1 = mse1_sum / 101\n        mse2 = mse2_sum / 101\n        mse = mse1 + mse2\n    end\n\n    return mse\nend","category":"page"},{"location":"generated/afr-progs-asym-sym-np2-hyper/","page":"Hyperparameter optimisation for initial conditions","title":"Hyperparameter optimisation for initial conditions","text":"objective (generic function with 1 method)","category":"page"},{"location":"generated/afr-progs-asym-sym-np2-hyper/#Run-the-optimisation","page":"Hyperparameter optimisation for initial conditions","title":"Run the optimisation","text":"","category":"section"},{"location":"generated/afr-progs-asym-sym-np2-hyper/","page":"Hyperparameter optimisation for initial conditions","title":"Hyperparameter optimisation for initial conditions","text":"Create the HyperTuning Scenario and define some ranges for the initial guess parameters (these could be made wider if needed).","category":"page"},{"location":"generated/afr-progs-asym-sym-np2-hyper/","page":"Hyperparameter optimisation for initial conditions","title":"Hyperparameter optimisation for initial conditions","text":"scenario = Scenario(\n    a=(0.1 .. 3.0),\n    b=(0.1 .. 3.0),\n    c=(-3.0 .. -0.1),\n    max_trials=400,\n)","category":"page"},{"location":"generated/afr-progs-asym-sym-np2-hyper/","page":"Hyperparameter optimisation for initial conditions","title":"Hyperparameter optimisation for initial conditions","text":"Scenario:\n          parameters: a, b, c\n   space cardinality: Huge!\n           instances: 1\n          batch_size: 4\n             sampler: HyperTuning.BCAPSampler{Random.Xoshiro}\n              pruner: HyperTuning.NeverPrune\n          max_trials: 400\n           max_evals: 400\n","category":"page"},{"location":"generated/afr-progs-asym-sym-np2-hyper/","page":"Hyperparameter optimisation for initial conditions","title":"Hyperparameter optimisation for initial conditions","text":"Run the optimisation, noting that we set the log level to be really high so that we don't get inundated with messages from the hundreds of trials being run, and print the best initial guess that was found.","category":"page"},{"location":"generated/afr-progs-asym-sym-np2-hyper/","page":"Hyperparameter optimisation for initial conditions","title":"Hyperparameter optimisation for initial conditions","text":"logger = ConsoleLogger(stderr, Logging.AboveMaxLevel)\nbest_guess = with_logger(logger) do\n    sc = HyperTuning.optimize(objective, scenario)\n    best_guess = [sc.best_trial.values[:a], sc.best_trial.values[:b], sc.best_trial.values[:c]]\n\n    return best_guess\nend\nprintln(\"Best guess initial condition: $best_guess\")","category":"page"},{"location":"generated/afr-progs-asym-sym-np2-hyper/","page":"Hyperparameter optimisation for initial conditions","title":"Hyperparameter optimisation for initial conditions","text":"Best guess initial condition: [1.5828494642895379, 1.0281314725215498, -1.6648340402004687]\n","category":"page"},{"location":"generated/afr-progs-asym-sym-np2-hyper/#Use-the-best-guess","page":"Hyperparameter optimisation for initial conditions","title":"Use the best guess","text":"","category":"section"},{"location":"generated/afr-progs-asym-sym-np2-hyper/","page":"Hyperparameter optimisation for initial conditions","title":"Hyperparameter optimisation for initial conditions","text":"Create a full problem, in this case solving for n=2..16, starting from the best initial guess that we found above.","category":"page"},{"location":"generated/afr-progs-asym-sym-np2-hyper/","page":"Hyperparameter optimisation for initial conditions","title":"Hyperparameter optimisation for initial conditions","text":"cse_prob = AsymmetricAfrprogsCSEProblem(\n    inin=2,\n    maxn=16,\n    np=2,\n    mc=10000,\n    solver_kwargs=(show_trace=Val(false), maxiters=2000, abstol=1e-6),\n    solver_initial_guess=best_guess,\n    distributions=[Beta(3, 3), Beta(3, 3)],\n    knot_refinement_strategy=:even_spacing,\n)","category":"page"},{"location":"generated/afr-progs-asym-sym-np2-hyper/","page":"Hyperparameter optimisation for initial conditions","title":"Hyperparameter optimisation for initial conditions","text":"AsymmetricAfrprogsCSEProblem(np=2, mc=10000, n=2..16)","category":"page"},{"location":"generated/afr-progs-asym-sym-np2-hyper/","page":"Hyperparameter optimisation for initial conditions","title":"Hyperparameter optimisation for initial conditions","text":"Solve the problem.","category":"page"},{"location":"generated/afr-progs-asym-sym-np2-hyper/","page":"Hyperparameter optimisation for initial conditions","title":"Hyperparameter optimisation for initial conditions","text":"solutions = compute_cse(cse_prob)","category":"page"},{"location":"generated/afr-progs-asym-sym-np2-hyper/","page":"Hyperparameter optimisation for initial conditions","title":"Hyperparameter optimisation for initial conditions","text":"15-element Vector{ConstrainedStrategicEquilibrium.AsymmetricCSESolution}:\n AsymmetricCSESolution(n=02, C_1=(NaN, NaN), C_2=3.67e-07)\n AsymmetricCSESolution(n=03, C_1=(9.30e-04, 9.30e-04), C_2=1.68e-07)\n AsymmetricCSESolution(n=04, C_1=(4.70e-04, 4.70e-04), C_2=5.80e-07)\n AsymmetricCSESolution(n=05, C_1=(2.63e-04, 2.63e-04), C_2=1.20e-07)\n AsymmetricCSESolution(n=06, C_1=(1.91e-04, 1.91e-04), C_2=2.76e-07)\n AsymmetricCSESolution(n=07, C_1=(1.32e-04, 1.31e-04), C_2=6.50e-07)\n AsymmetricCSESolution(n=08, C_1=(1.02e-04, 1.02e-04), C_2=3.27e-07)\n AsymmetricCSESolution(n=09, C_1=(6.88e-05, 6.89e-05), C_2=1.15e-06)\n AsymmetricCSESolution(n=10, C_1=(6.42e-05, 6.43e-05), C_2=3.37e-07)\n AsymmetricCSESolution(n=11, C_1=(6.06e-05, 6.06e-05), C_2=3.71e-08)\n AsymmetricCSESolution(n=12, C_1=(4.46e-05, 4.46e-05), C_2=1.55e-06)\n AsymmetricCSESolution(n=13, C_1=(3.31e-05, 3.31e-05), C_2=9.67e-07)\n AsymmetricCSESolution(n=14, C_1=(3.34e-05, 3.34e-05), C_2=7.51e-07)\n AsymmetricCSESolution(n=15, C_1=(2.68e-05, 2.68e-05), C_2=8.03e-07)\n AsymmetricCSESolution(n=16, C_1=(2.31e-05, 2.31e-05), C_2=9.56e-07)","category":"page"},{"location":"generated/afr-progs-asym-sym-np2-hyper/","page":"Hyperparameter optimisation for initial conditions","title":"Hyperparameter optimisation for initial conditions","text":"Compute the BNE too","category":"page"},{"location":"generated/afr-progs-asym-sym-np2-hyper/","page":"Hyperparameter optimisation for initial conditions","title":"Hyperparameter optimisation for initial conditions","text":"bnex = Vector{Float64}(undef, 101)\nbney = Vector{Float64}(undef, 101)\nfor m = 1:101\n    ti = (m - 1.0) / 100.0\n    if ti == 0\n        true_bne = 0.0\n    else\n        true_bne = compute_bne(ti, cse_prob.distributions[1], cse_prob.np)\n    end\n    bnex[m] = ti\n    bney[m] = true_bne\nend","category":"page"},{"location":"generated/afr-progs-asym-sym-np2-hyper/","page":"Hyperparameter optimisation for initial conditions","title":"Hyperparameter optimisation for initial conditions","text":"Plot the last CSE solution and the BNE","category":"page"},{"location":"generated/afr-progs-asym-sym-np2-hyper/","page":"Hyperparameter optimisation for initial conditions","title":"Hyperparameter optimisation for initial conditions","text":"cseplot(solutions[end])\nplot!(bnex, bney, label=\"BNE\")","category":"page"},{"location":"generated/afr-progs-asym-sym-np2-hyper/","page":"Hyperparameter optimisation for initial conditions","title":"Hyperparameter optimisation for initial conditions","text":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"600\" height=\"400\" viewBox=\"0 0 2400 1600\">\n<defs>\n  <clipPath id=\"clip300\">\n    <rect x=\"0\" y=\"0\" width=\"2400\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip300)\" d=\"M0 1600 L2400 1600 L2400 0 L0 0  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip301\">\n    <rect x=\"480\" y=\"0\" width=\"1681\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip300)\" d=\"M219.866 1423.18 L2352.76 1423.18 L2352.76 192.592 L219.866 192.592  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip302\">\n    <rect x=\"219\" y=\"192\" width=\"2134\" height=\"1232\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip302)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"280.231,1423.18 280.231,192.592 \"/>\n<polyline clip-path=\"url(#clip302)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"783.271,1423.18 783.271,192.592 \"/>\n<polyline clip-path=\"url(#clip302)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1286.31,1423.18 1286.31,192.592 \"/>\n<polyline clip-path=\"url(#clip302)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1789.35,1423.18 1789.35,192.592 \"/>\n<polyline clip-path=\"url(#clip302)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2292.39,1423.18 2292.39,192.592 \"/>\n<polyline clip-path=\"url(#clip302)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"219.866,1388.35 2352.76,1388.35 \"/>\n<polyline clip-path=\"url(#clip302)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"219.866,1156.17 2352.76,1156.17 \"/>\n<polyline clip-path=\"url(#clip302)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"219.866,923.979 2352.76,923.979 \"/>\n<polyline clip-path=\"url(#clip302)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"219.866,691.793 2352.76,691.793 \"/>\n<polyline clip-path=\"url(#clip302)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"219.866,459.606 2352.76,459.606 \"/>\n<polyline clip-path=\"url(#clip302)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"219.866,227.42 2352.76,227.42 \"/>\n<polyline clip-path=\"url(#clip300)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"219.866,1423.18 2352.76,1423.18 \"/>\n<polyline clip-path=\"url(#clip300)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"280.231,1423.18 280.231,1404.28 \"/>\n<polyline clip-path=\"url(#clip300)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"783.271,1423.18 783.271,1404.28 \"/>\n<polyline clip-path=\"url(#clip300)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1286.31,1423.18 1286.31,1404.28 \"/>\n<polyline clip-path=\"url(#clip300)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1789.35,1423.18 1789.35,1404.28 \"/>\n<polyline clip-path=\"url(#clip300)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2292.39,1423.18 2292.39,1404.28 \"/>\n<path clip-path=\"url(#clip300)\" d=\"M242.535 1454.1 Q238.923 1454.1 237.095 1457.66 Q235.289 1461.2 235.289 1468.33 Q235.289 1475.44 237.095 1479.01 Q238.923 1482.55 242.535 1482.55 Q246.169 1482.55 247.974 1479.01 Q249.803 1475.44 249.803 1468.33 Q249.803 1461.2 247.974 1457.66 Q246.169 1454.1 242.535 1454.1 M242.535 1450.39 Q248.345 1450.39 251.4 1455 Q254.479 1459.58 254.479 1468.33 Q254.479 1477.06 251.4 1481.67 Q248.345 1486.25 242.535 1486.25 Q236.724 1486.25 233.646 1481.67 Q230.59 1477.06 230.59 1468.33 Q230.59 1459.58 233.646 1455 Q236.724 1450.39 242.535 1450.39 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M262.696 1479.7 L267.581 1479.7 L267.581 1485.58 L262.696 1485.58 L262.696 1479.7 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M287.766 1454.1 Q284.155 1454.1 282.326 1457.66 Q280.52 1461.2 280.52 1468.33 Q280.52 1475.44 282.326 1479.01 Q284.155 1482.55 287.766 1482.55 Q291.4 1482.55 293.206 1479.01 Q295.034 1475.44 295.034 1468.33 Q295.034 1461.2 293.206 1457.66 Q291.4 1454.1 287.766 1454.1 M287.766 1450.39 Q293.576 1450.39 296.631 1455 Q299.71 1459.58 299.71 1468.33 Q299.71 1477.06 296.631 1481.67 Q293.576 1486.25 287.766 1486.25 Q281.956 1486.25 278.877 1481.67 Q275.821 1477.06 275.821 1468.33 Q275.821 1459.58 278.877 1455 Q281.956 1450.39 287.766 1450.39 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M317.928 1454.1 Q314.317 1454.1 312.488 1457.66 Q310.682 1461.2 310.682 1468.33 Q310.682 1475.44 312.488 1479.01 Q314.317 1482.55 317.928 1482.55 Q321.562 1482.55 323.367 1479.01 Q325.196 1475.44 325.196 1468.33 Q325.196 1461.2 323.367 1457.66 Q321.562 1454.1 317.928 1454.1 M317.928 1450.39 Q323.738 1450.39 326.793 1455 Q329.872 1459.58 329.872 1468.33 Q329.872 1477.06 326.793 1481.67 Q323.738 1486.25 317.928 1486.25 Q312.117 1486.25 309.039 1481.67 Q305.983 1477.06 305.983 1468.33 Q305.983 1459.58 309.039 1455 Q312.117 1450.39 317.928 1450.39 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M746.072 1454.1 Q742.461 1454.1 740.632 1457.66 Q738.827 1461.2 738.827 1468.33 Q738.827 1475.44 740.632 1479.01 Q742.461 1482.55 746.072 1482.55 Q749.706 1482.55 751.512 1479.01 Q753.341 1475.44 753.341 1468.33 Q753.341 1461.2 751.512 1457.66 Q749.706 1454.1 746.072 1454.1 M746.072 1450.39 Q751.882 1450.39 754.938 1455 Q758.017 1459.58 758.017 1468.33 Q758.017 1477.06 754.938 1481.67 Q751.882 1486.25 746.072 1486.25 Q740.262 1486.25 737.183 1481.67 Q734.128 1477.06 734.128 1468.33 Q734.128 1459.58 737.183 1455 Q740.262 1450.39 746.072 1450.39 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M766.234 1479.7 L771.118 1479.7 L771.118 1485.58 L766.234 1485.58 L766.234 1479.7 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M785.331 1481.64 L801.651 1481.64 L801.651 1485.58 L779.706 1485.58 L779.706 1481.64 Q782.368 1478.89 786.952 1474.26 Q791.558 1469.61 792.739 1468.27 Q794.984 1465.74 795.864 1464.01 Q796.766 1462.25 796.766 1460.56 Q796.766 1457.8 794.822 1456.07 Q792.901 1454.33 789.799 1454.33 Q787.6 1454.33 785.146 1455.09 Q782.716 1455.86 779.938 1457.41 L779.938 1452.69 Q782.762 1451.55 785.216 1450.97 Q787.669 1450.39 789.706 1450.39 Q795.077 1450.39 798.271 1453.08 Q801.465 1455.77 801.465 1460.26 Q801.465 1462.39 800.655 1464.31 Q799.868 1466.2 797.762 1468.8 Q797.183 1469.47 794.081 1472.69 Q790.979 1475.88 785.331 1481.64 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M811.512 1451.02 L829.868 1451.02 L829.868 1454.96 L815.794 1454.96 L815.794 1463.43 Q816.813 1463.08 817.831 1462.92 Q818.85 1462.73 819.868 1462.73 Q825.655 1462.73 829.035 1465.9 Q832.414 1469.08 832.414 1474.49 Q832.414 1480.07 828.942 1483.17 Q825.47 1486.25 819.151 1486.25 Q816.975 1486.25 814.706 1485.88 Q812.461 1485.51 810.053 1484.77 L810.053 1480.07 Q812.137 1481.2 814.359 1481.76 Q816.581 1482.32 819.058 1482.32 Q823.063 1482.32 825.4 1480.21 Q827.738 1478.1 827.738 1474.49 Q827.738 1470.88 825.4 1468.77 Q823.063 1466.67 819.058 1466.67 Q817.183 1466.67 815.308 1467.08 Q813.456 1467.5 811.512 1468.38 L811.512 1451.02 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1248.61 1454.1 Q1245 1454.1 1243.17 1457.66 Q1241.37 1461.2 1241.37 1468.33 Q1241.37 1475.44 1243.17 1479.01 Q1245 1482.55 1248.61 1482.55 Q1252.25 1482.55 1254.05 1479.01 Q1255.88 1475.44 1255.88 1468.33 Q1255.88 1461.2 1254.05 1457.66 Q1252.25 1454.1 1248.61 1454.1 M1248.61 1450.39 Q1254.42 1450.39 1257.48 1455 Q1260.56 1459.58 1260.56 1468.33 Q1260.56 1477.06 1257.48 1481.67 Q1254.42 1486.25 1248.61 1486.25 Q1242.8 1486.25 1239.73 1481.67 Q1236.67 1477.06 1236.67 1468.33 Q1236.67 1459.58 1239.73 1455 Q1242.8 1450.39 1248.61 1450.39 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1268.78 1479.7 L1273.66 1479.7 L1273.66 1485.58 L1268.78 1485.58 L1268.78 1479.7 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1283.89 1451.02 L1302.25 1451.02 L1302.25 1454.96 L1288.17 1454.96 L1288.17 1463.43 Q1289.19 1463.08 1290.21 1462.92 Q1291.23 1462.73 1292.25 1462.73 Q1298.04 1462.73 1301.42 1465.9 Q1304.79 1469.08 1304.79 1474.49 Q1304.79 1480.07 1301.32 1483.17 Q1297.85 1486.25 1291.53 1486.25 Q1289.36 1486.25 1287.09 1485.88 Q1284.84 1485.51 1282.43 1484.77 L1282.43 1480.07 Q1284.52 1481.2 1286.74 1481.76 Q1288.96 1482.32 1291.44 1482.32 Q1295.44 1482.32 1297.78 1480.21 Q1300.12 1478.1 1300.12 1474.49 Q1300.12 1470.88 1297.78 1468.77 Q1295.44 1466.67 1291.44 1466.67 Q1289.56 1466.67 1287.69 1467.08 Q1285.84 1467.5 1283.89 1468.38 L1283.89 1451.02 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1324.01 1454.1 Q1320.4 1454.1 1318.57 1457.66 Q1316.76 1461.2 1316.76 1468.33 Q1316.76 1475.44 1318.57 1479.01 Q1320.4 1482.55 1324.01 1482.55 Q1327.64 1482.55 1329.45 1479.01 Q1331.28 1475.44 1331.28 1468.33 Q1331.28 1461.2 1329.45 1457.66 Q1327.64 1454.1 1324.01 1454.1 M1324.01 1450.39 Q1329.82 1450.39 1332.87 1455 Q1335.95 1459.58 1335.95 1468.33 Q1335.95 1477.06 1332.87 1481.67 Q1329.82 1486.25 1324.01 1486.25 Q1318.2 1486.25 1315.12 1481.67 Q1312.06 1477.06 1312.06 1468.33 Q1312.06 1459.58 1315.12 1455 Q1318.2 1450.39 1324.01 1450.39 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1752.15 1454.1 Q1748.54 1454.1 1746.71 1457.66 Q1744.91 1461.2 1744.91 1468.33 Q1744.91 1475.44 1746.71 1479.01 Q1748.54 1482.55 1752.15 1482.55 Q1755.79 1482.55 1757.59 1479.01 Q1759.42 1475.44 1759.42 1468.33 Q1759.42 1461.2 1757.59 1457.66 Q1755.79 1454.1 1752.15 1454.1 M1752.15 1450.39 Q1757.96 1450.39 1761.02 1455 Q1764.1 1459.58 1764.1 1468.33 Q1764.1 1477.06 1761.02 1481.67 Q1757.96 1486.25 1752.15 1486.25 Q1746.34 1486.25 1743.26 1481.67 Q1740.21 1477.06 1740.21 1468.33 Q1740.21 1459.58 1743.26 1455 Q1746.34 1450.39 1752.15 1450.39 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1772.31 1479.7 L1777.2 1479.7 L1777.2 1485.58 L1772.31 1485.58 L1772.31 1479.7 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1786.2 1451.02 L1808.43 1451.02 L1808.43 1453.01 L1795.88 1485.58 L1790.99 1485.58 L1802.8 1454.96 L1786.2 1454.96 L1786.2 1451.02 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1817.59 1451.02 L1835.95 1451.02 L1835.95 1454.96 L1821.87 1454.96 L1821.87 1463.43 Q1822.89 1463.08 1823.91 1462.92 Q1824.93 1462.73 1825.95 1462.73 Q1831.74 1462.73 1835.11 1465.9 Q1838.49 1469.08 1838.49 1474.49 Q1838.49 1480.07 1835.02 1483.17 Q1831.55 1486.25 1825.23 1486.25 Q1823.05 1486.25 1820.79 1485.88 Q1818.54 1485.51 1816.13 1484.77 L1816.13 1480.07 Q1818.22 1481.2 1820.44 1481.76 Q1822.66 1482.32 1825.14 1482.32 Q1829.14 1482.32 1831.48 1480.21 Q1833.82 1478.1 1833.82 1474.49 Q1833.82 1470.88 1831.48 1468.77 Q1829.14 1466.67 1825.14 1466.67 Q1823.26 1466.67 1821.39 1467.08 Q1819.54 1467.5 1817.59 1468.38 L1817.59 1451.02 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M2244.46 1481.64 L2252.1 1481.64 L2252.1 1455.28 L2243.79 1456.95 L2243.79 1452.69 L2252.06 1451.02 L2256.73 1451.02 L2256.73 1481.64 L2264.37 1481.64 L2264.37 1485.58 L2244.46 1485.58 L2244.46 1481.64 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M2273.81 1479.7 L2278.7 1479.7 L2278.7 1485.58 L2273.81 1485.58 L2273.81 1479.7 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M2298.88 1454.1 Q2295.27 1454.1 2293.44 1457.66 Q2291.64 1461.2 2291.64 1468.33 Q2291.64 1475.44 2293.44 1479.01 Q2295.27 1482.55 2298.88 1482.55 Q2302.52 1482.55 2304.32 1479.01 Q2306.15 1475.44 2306.15 1468.33 Q2306.15 1461.2 2304.32 1457.66 Q2302.52 1454.1 2298.88 1454.1 M2298.88 1450.39 Q2304.69 1450.39 2307.75 1455 Q2310.83 1459.58 2310.83 1468.33 Q2310.83 1477.06 2307.75 1481.67 Q2304.69 1486.25 2298.88 1486.25 Q2293.07 1486.25 2290 1481.67 Q2286.94 1477.06 2286.94 1468.33 Q2286.94 1459.58 2290 1455 Q2293.07 1450.39 2298.88 1450.39 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M2329.05 1454.1 Q2325.43 1454.1 2323.61 1457.66 Q2321.8 1461.2 2321.8 1468.33 Q2321.8 1475.44 2323.61 1479.01 Q2325.43 1482.55 2329.05 1482.55 Q2332.68 1482.55 2334.49 1479.01 Q2336.31 1475.44 2336.31 1468.33 Q2336.31 1461.2 2334.49 1457.66 Q2332.68 1454.1 2329.05 1454.1 M2329.05 1450.39 Q2334.86 1450.39 2337.91 1455 Q2340.99 1459.58 2340.99 1468.33 Q2340.99 1477.06 2337.91 1481.67 Q2334.86 1486.25 2329.05 1486.25 Q2323.24 1486.25 2320.16 1481.67 Q2317.1 1477.06 2317.1 1468.33 Q2317.1 1459.58 2320.16 1455 Q2323.24 1450.39 2329.05 1450.39 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1067.57 1525.81 L1067.57 1543.66 L1075.65 1543.66 Q1080.14 1543.66 1082.59 1541.34 Q1085.04 1539.02 1085.04 1534.72 Q1085.04 1530.45 1082.59 1528.13 Q1080.14 1525.81 1075.65 1525.81 L1067.57 1525.81 M1061.14 1520.52 L1075.65 1520.52 Q1083.64 1520.52 1087.72 1524.15 Q1091.82 1527.75 1091.82 1534.72 Q1091.82 1541.75 1087.72 1545.35 Q1083.64 1548.95 1075.65 1548.95 L1067.57 1548.95 L1067.57 1568.04 L1061.14 1568.04 L1061.14 1520.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1119.7 1537.87 Q1118.72 1537.3 1117.54 1537.04 Q1116.39 1536.76 1114.99 1536.76 Q1110.03 1536.76 1107.36 1540 Q1104.71 1543.22 1104.71 1549.27 L1104.71 1568.04 L1098.83 1568.04 L1098.83 1532.4 L1104.71 1532.4 L1104.71 1537.93 Q1106.56 1534.69 1109.52 1533.13 Q1112.48 1531.54 1116.71 1531.54 Q1117.32 1531.54 1118.05 1531.63 Q1118.78 1531.7 1119.67 1531.85 L1119.7 1537.87 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1125.85 1532.4 L1131.7 1532.4 L1131.7 1568.04 L1125.85 1568.04 L1125.85 1532.4 M1125.85 1518.52 L1131.7 1518.52 L1131.7 1525.93 L1125.85 1525.93 L1125.85 1518.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1139.76 1532.4 L1145.96 1532.4 L1157.1 1562.31 L1168.24 1532.4 L1174.45 1532.4 L1161.08 1568.04 L1153.12 1568.04 L1139.76 1532.4 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1198.73 1550.12 Q1191.64 1550.12 1188.9 1551.75 Q1186.16 1553.37 1186.16 1557.29 Q1186.16 1560.4 1188.2 1562.25 Q1190.27 1564.07 1193.8 1564.07 Q1198.67 1564.07 1201.6 1560.63 Q1204.56 1557.16 1204.56 1551.43 L1204.56 1550.12 L1198.73 1550.12 M1210.42 1547.71 L1210.42 1568.04 L1204.56 1568.04 L1204.56 1562.63 Q1202.55 1565.88 1199.56 1567.44 Q1196.57 1568.97 1192.24 1568.97 Q1186.77 1568.97 1183.52 1565.91 Q1180.31 1562.82 1180.31 1557.67 Q1180.31 1551.65 1184.32 1548.6 Q1188.36 1545.54 1196.35 1545.54 L1204.56 1545.54 L1204.56 1544.97 Q1204.56 1540.93 1201.89 1538.73 Q1199.24 1536.5 1194.44 1536.5 Q1191.38 1536.5 1188.49 1537.23 Q1185.59 1537.97 1182.92 1539.43 L1182.92 1534.02 Q1186.13 1532.78 1189.15 1532.17 Q1192.18 1531.54 1195.04 1531.54 Q1202.78 1531.54 1206.6 1535.55 Q1210.42 1539.56 1210.42 1547.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1228.27 1522.27 L1228.27 1532.4 L1240.33 1532.4 L1240.33 1536.95 L1228.27 1536.95 L1228.27 1556.3 Q1228.27 1560.66 1229.45 1561.9 Q1230.66 1563.14 1234.32 1563.14 L1240.33 1563.14 L1240.33 1568.04 L1234.32 1568.04 Q1227.54 1568.04 1224.96 1565.53 Q1222.38 1562.98 1222.38 1556.3 L1222.38 1536.95 L1218.09 1536.95 L1218.09 1532.4 L1222.38 1532.4 L1222.38 1522.27 L1228.27 1522.27 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1278.53 1548.76 L1278.53 1551.62 L1251.6 1551.62 Q1251.98 1557.67 1255.23 1560.85 Q1258.51 1564 1264.33 1564 Q1267.71 1564 1270.86 1563.17 Q1274.04 1562.35 1277.16 1560.69 L1277.16 1566.23 Q1274.01 1567.57 1270.7 1568.27 Q1267.39 1568.97 1263.98 1568.97 Q1255.45 1568.97 1250.46 1564 Q1245.49 1559.04 1245.49 1550.57 Q1245.49 1541.82 1250.2 1536.69 Q1254.94 1531.54 1262.96 1531.54 Q1270.16 1531.54 1274.33 1536.18 Q1278.53 1540.8 1278.53 1548.76 M1272.67 1547.04 Q1272.61 1542.23 1269.97 1539.37 Q1267.36 1536.5 1263.03 1536.5 Q1258.13 1536.5 1255.17 1539.27 Q1252.24 1542.04 1251.79 1547.07 L1272.67 1547.04 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1285.18 1547.58 L1302.34 1547.58 L1302.34 1552.8 L1285.18 1552.8 L1285.18 1547.58 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1320.35 1568.04 L1302.21 1520.52 L1308.93 1520.52 L1323.98 1560.53 L1339.07 1520.52 L1345.75 1520.52 L1327.64 1568.04 L1320.35 1568.04 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1363.57 1550.12 Q1356.48 1550.12 1353.74 1551.75 Q1351 1553.37 1351 1557.29 Q1351 1560.4 1353.04 1562.25 Q1355.11 1564.07 1358.64 1564.07 Q1363.51 1564.07 1366.44 1560.63 Q1369.4 1557.16 1369.4 1551.43 L1369.4 1550.12 L1363.57 1550.12 M1375.26 1547.71 L1375.26 1568.04 L1369.4 1568.04 L1369.4 1562.63 Q1367.39 1565.88 1364.4 1567.44 Q1361.41 1568.97 1357.08 1568.97 Q1351.61 1568.97 1348.36 1565.91 Q1345.15 1562.82 1345.15 1557.67 Q1345.15 1551.65 1349.16 1548.6 Q1353.2 1545.54 1361.19 1545.54 L1369.4 1545.54 L1369.4 1544.97 Q1369.4 1540.93 1366.73 1538.73 Q1364.08 1536.5 1359.28 1536.5 Q1356.22 1536.5 1353.33 1537.23 Q1350.43 1537.97 1347.76 1539.43 L1347.76 1534.02 Q1350.97 1532.78 1353.99 1532.17 Q1357.02 1531.54 1359.88 1531.54 Q1367.62 1531.54 1371.44 1535.55 Q1375.26 1539.56 1375.26 1547.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1387.32 1518.52 L1393.18 1518.52 L1393.18 1568.04 L1387.32 1568.04 L1387.32 1518.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1404.82 1553.98 L1404.82 1532.4 L1410.68 1532.4 L1410.68 1553.75 Q1410.68 1558.81 1412.65 1561.36 Q1414.63 1563.87 1418.57 1563.87 Q1423.32 1563.87 1426.05 1560.85 Q1428.82 1557.83 1428.82 1552.61 L1428.82 1532.4 L1434.68 1532.4 L1434.68 1568.04 L1428.82 1568.04 L1428.82 1562.57 Q1426.69 1565.82 1423.86 1567.41 Q1421.06 1568.97 1417.33 1568.97 Q1411.19 1568.97 1408.01 1565.15 Q1404.82 1561.33 1404.82 1553.98 M1419.56 1531.54 L1419.56 1531.54 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1477.23 1548.76 L1477.23 1551.62 L1450.31 1551.62 Q1450.69 1557.67 1453.94 1560.85 Q1457.21 1564 1463.04 1564 Q1466.41 1564 1469.56 1563.17 Q1472.75 1562.35 1475.87 1560.69 L1475.87 1566.23 Q1472.71 1567.57 1469.4 1568.27 Q1466.09 1568.97 1462.69 1568.97 Q1454.16 1568.97 1449.16 1564 Q1444.2 1559.04 1444.2 1550.57 Q1444.2 1541.82 1448.91 1536.69 Q1453.65 1531.54 1461.67 1531.54 Q1468.86 1531.54 1473.03 1536.18 Q1477.23 1540.8 1477.23 1548.76 M1471.38 1547.04 Q1471.31 1542.23 1468.67 1539.37 Q1466.06 1536.5 1461.73 1536.5 Q1456.83 1536.5 1453.87 1539.27 Q1450.94 1542.04 1450.5 1547.07 L1471.38 1547.04 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1509.57 1533.45 L1509.57 1538.98 Q1507.09 1537.71 1504.42 1537.07 Q1501.74 1536.44 1498.88 1536.44 Q1494.52 1536.44 1492.32 1537.77 Q1490.16 1539.11 1490.16 1541.79 Q1490.16 1543.82 1491.72 1545 Q1493.28 1546.15 1497.99 1547.2 L1499.99 1547.64 Q1506.23 1548.98 1508.84 1551.43 Q1511.48 1553.85 1511.48 1558.21 Q1511.48 1563.17 1507.54 1566.07 Q1503.62 1568.97 1496.75 1568.97 Q1493.88 1568.97 1490.76 1568.39 Q1487.67 1567.85 1484.24 1566.74 L1484.24 1560.69 Q1487.48 1562.38 1490.63 1563.24 Q1493.79 1564.07 1496.87 1564.07 Q1501.01 1564.07 1503.24 1562.66 Q1505.47 1561.23 1505.47 1558.65 Q1505.47 1556.27 1503.84 1554.99 Q1502.25 1553.72 1496.81 1552.54 L1494.77 1552.07 Q1489.33 1550.92 1486.91 1548.56 Q1484.49 1546.18 1484.49 1542.04 Q1484.49 1537.01 1488.06 1534.27 Q1491.62 1531.54 1498.18 1531.54 Q1501.42 1531.54 1504.29 1532.01 Q1507.15 1532.49 1509.57 1533.45 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip300)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"219.866,1423.18 219.866,192.592 \"/>\n<polyline clip-path=\"url(#clip300)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"219.866,1388.35 238.764,1388.35 \"/>\n<polyline clip-path=\"url(#clip300)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"219.866,1156.17 238.764,1156.17 \"/>\n<polyline clip-path=\"url(#clip300)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"219.866,923.979 238.764,923.979 \"/>\n<polyline clip-path=\"url(#clip300)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"219.866,691.793 238.764,691.793 \"/>\n<polyline clip-path=\"url(#clip300)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"219.866,459.606 238.764,459.606 \"/>\n<polyline clip-path=\"url(#clip300)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"219.866,227.42 238.764,227.42 \"/>\n<path clip-path=\"url(#clip300)\" d=\"M126.691 1374.15 Q123.08 1374.15 121.251 1377.72 Q119.445 1381.26 119.445 1388.39 Q119.445 1395.49 121.251 1399.06 Q123.08 1402.6 126.691 1402.6 Q130.325 1402.6 132.13 1399.06 Q133.959 1395.49 133.959 1388.39 Q133.959 1381.26 132.13 1377.72 Q130.325 1374.15 126.691 1374.15 M126.691 1370.45 Q132.501 1370.45 135.556 1375.05 Q138.635 1379.64 138.635 1388.39 Q138.635 1397.11 135.556 1401.72 Q132.501 1406.3 126.691 1406.3 Q120.88 1406.3 117.802 1401.72 Q114.746 1397.11 114.746 1388.39 Q114.746 1379.64 117.802 1375.05 Q120.88 1370.45 126.691 1370.45 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M146.853 1399.75 L151.737 1399.75 L151.737 1405.63 L146.853 1405.63 L146.853 1399.75 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M171.922 1374.15 Q168.311 1374.15 166.482 1377.72 Q164.677 1381.26 164.677 1388.39 Q164.677 1395.49 166.482 1399.06 Q168.311 1402.6 171.922 1402.6 Q175.556 1402.6 177.362 1399.06 Q179.19 1395.49 179.19 1388.39 Q179.19 1381.26 177.362 1377.72 Q175.556 1374.15 171.922 1374.15 M171.922 1370.45 Q177.732 1370.45 180.788 1375.05 Q183.866 1379.64 183.866 1388.39 Q183.866 1397.11 180.788 1401.72 Q177.732 1406.3 171.922 1406.3 Q166.112 1406.3 163.033 1401.72 Q159.978 1397.11 159.978 1388.39 Q159.978 1379.64 163.033 1375.05 Q166.112 1370.45 171.922 1370.45 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M127.917 1141.96 Q124.306 1141.96 122.478 1145.53 Q120.672 1149.07 120.672 1156.2 Q120.672 1163.31 122.478 1166.87 Q124.306 1170.41 127.917 1170.41 Q131.552 1170.41 133.357 1166.87 Q135.186 1163.31 135.186 1156.2 Q135.186 1149.07 133.357 1145.53 Q131.552 1141.96 127.917 1141.96 M127.917 1138.26 Q133.728 1138.26 136.783 1142.87 Q139.862 1147.45 139.862 1156.2 Q139.862 1164.93 136.783 1169.53 Q133.728 1174.12 127.917 1174.12 Q122.107 1174.12 119.029 1169.53 Q115.973 1164.93 115.973 1156.2 Q115.973 1147.45 119.029 1142.87 Q122.107 1138.26 127.917 1138.26 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M148.079 1167.57 L152.964 1167.57 L152.964 1173.45 L148.079 1173.45 L148.079 1167.57 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M163.959 1169.51 L171.598 1169.51 L171.598 1143.14 L163.288 1144.81 L163.288 1140.55 L171.552 1138.89 L176.227 1138.89 L176.227 1169.51 L183.866 1169.51 L183.866 1173.45 L163.959 1173.45 L163.959 1169.51 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M128.288 909.778 Q124.677 909.778 122.848 913.343 Q121.043 916.884 121.043 924.014 Q121.043 931.12 122.848 934.685 Q124.677 938.227 128.288 938.227 Q131.922 938.227 133.728 934.685 Q135.556 931.12 135.556 924.014 Q135.556 916.884 133.728 913.343 Q131.922 909.778 128.288 909.778 M128.288 906.074 Q134.098 906.074 137.154 910.681 Q140.232 915.264 140.232 924.014 Q140.232 932.741 137.154 937.347 Q134.098 941.93 128.288 941.93 Q122.478 941.93 119.399 937.347 Q116.343 932.741 116.343 924.014 Q116.343 915.264 119.399 910.681 Q122.478 906.074 128.288 906.074 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M148.45 935.38 L153.334 935.38 L153.334 941.259 L148.45 941.259 L148.45 935.38 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M167.547 937.324 L183.866 937.324 L183.866 941.259 L161.922 941.259 L161.922 937.324 Q164.584 934.569 169.167 929.94 Q173.774 925.287 174.954 923.944 Q177.2 921.421 178.079 919.685 Q178.982 917.926 178.982 916.236 Q178.982 913.482 177.038 911.745 Q175.116 910.009 172.014 910.009 Q169.815 910.009 167.362 910.773 Q164.931 911.537 162.153 913.088 L162.153 908.366 Q164.977 907.232 167.431 906.653 Q169.885 906.074 171.922 906.074 Q177.292 906.074 180.487 908.759 Q183.681 911.445 183.681 915.935 Q183.681 918.065 182.871 919.986 Q182.084 921.884 179.977 924.477 Q179.399 925.148 176.297 928.366 Q173.195 931.56 167.547 937.324 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M127.339 677.591 Q123.728 677.591 121.899 681.156 Q120.093 684.698 120.093 691.828 Q120.093 698.934 121.899 702.499 Q123.728 706.04 127.339 706.04 Q130.973 706.04 132.779 702.499 Q134.607 698.934 134.607 691.828 Q134.607 684.698 132.779 681.156 Q130.973 677.591 127.339 677.591 M127.339 673.888 Q133.149 673.888 136.204 678.494 Q139.283 683.078 139.283 691.828 Q139.283 700.554 136.204 705.161 Q133.149 709.744 127.339 709.744 Q121.529 709.744 118.45 705.161 Q115.394 700.554 115.394 691.828 Q115.394 683.078 118.45 678.494 Q121.529 673.888 127.339 673.888 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M147.501 703.193 L152.385 703.193 L152.385 709.073 L147.501 709.073 L147.501 703.193 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M176.737 690.439 Q180.093 691.156 181.968 693.425 Q183.866 695.693 183.866 699.027 Q183.866 704.142 180.348 706.943 Q176.829 709.744 170.348 709.744 Q168.172 709.744 165.857 709.304 Q163.565 708.888 161.112 708.031 L161.112 703.517 Q163.056 704.652 165.371 705.23 Q167.686 705.809 170.209 705.809 Q174.607 705.809 176.899 704.073 Q179.214 702.337 179.214 699.027 Q179.214 695.971 177.061 694.258 Q174.931 692.522 171.112 692.522 L167.084 692.522 L167.084 688.679 L171.297 688.679 Q174.746 688.679 176.575 687.314 Q178.403 685.925 178.403 683.332 Q178.403 680.67 176.505 679.258 Q174.63 677.823 171.112 677.823 Q169.19 677.823 166.991 678.24 Q164.792 678.656 162.153 679.536 L162.153 675.369 Q164.815 674.629 167.13 674.258 Q169.468 673.888 171.528 673.888 Q176.852 673.888 179.954 676.318 Q183.056 678.726 183.056 682.846 Q183.056 685.716 181.413 687.707 Q179.769 689.675 176.737 690.439 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M126.205 445.405 Q122.593 445.405 120.765 448.97 Q118.959 452.512 118.959 459.641 Q118.959 466.748 120.765 470.312 Q122.593 473.854 126.205 473.854 Q129.839 473.854 131.644 470.312 Q133.473 466.748 133.473 459.641 Q133.473 452.512 131.644 448.97 Q129.839 445.405 126.205 445.405 M126.205 441.701 Q132.015 441.701 135.07 446.308 Q138.149 450.891 138.149 459.641 Q138.149 468.368 135.07 472.974 Q132.015 477.558 126.205 477.558 Q120.394 477.558 117.316 472.974 Q114.26 468.368 114.26 459.641 Q114.26 450.891 117.316 446.308 Q120.394 441.701 126.205 441.701 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M146.366 471.007 L151.251 471.007 L151.251 476.886 L146.366 476.886 L146.366 471.007 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M174.283 446.4 L162.477 464.849 L174.283 464.849 L174.283 446.4 M173.056 442.326 L178.936 442.326 L178.936 464.849 L183.866 464.849 L183.866 468.738 L178.936 468.738 L178.936 476.886 L174.283 476.886 L174.283 468.738 L158.681 468.738 L158.681 464.224 L173.056 442.326 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M127.686 213.219 Q124.075 213.219 122.246 216.784 Q120.441 220.325 120.441 227.455 Q120.441 234.561 122.246 238.126 Q124.075 241.668 127.686 241.668 Q131.32 241.668 133.126 238.126 Q134.954 234.561 134.954 227.455 Q134.954 220.325 133.126 216.784 Q131.32 213.219 127.686 213.219 M127.686 209.515 Q133.496 209.515 136.552 214.122 Q139.63 218.705 139.63 227.455 Q139.63 236.182 136.552 240.788 Q133.496 245.371 127.686 245.371 Q121.876 245.371 118.797 240.788 Q115.742 236.182 115.742 227.455 Q115.742 218.705 118.797 214.122 Q121.876 209.515 127.686 209.515 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M147.848 238.82 L152.732 238.82 L152.732 244.7 L147.848 244.7 L147.848 238.82 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M162.964 210.14 L181.32 210.14 L181.32 214.075 L167.246 214.075 L167.246 222.547 Q168.264 222.2 169.283 222.038 Q170.302 221.853 171.32 221.853 Q177.107 221.853 180.487 225.024 Q183.866 228.196 183.866 233.612 Q183.866 239.191 180.394 242.293 Q176.922 245.371 170.602 245.371 Q168.427 245.371 166.158 245.001 Q163.913 244.631 161.505 243.89 L161.505 239.191 Q163.589 240.325 165.811 240.881 Q168.033 241.436 170.51 241.436 Q174.514 241.436 176.852 239.33 Q179.19 237.223 179.19 233.612 Q179.19 230.001 176.852 227.895 Q174.514 225.788 170.51 225.788 Q168.635 225.788 166.76 226.205 Q164.908 226.621 162.964 227.501 L162.964 210.14 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M41.3104 865.75 L58.7206 865.75 L58.7206 855.438 Q58.7206 850.25 56.5881 847.767 Q54.4238 845.253 49.9996 845.253 Q45.5436 845.253 43.4429 847.767 Q41.3104 850.25 41.3104 855.438 L41.3104 865.75 M21.7677 865.75 L36.0905 865.75 L36.0905 856.234 Q36.0905 851.523 34.34 849.231 Q32.5576 846.908 28.9291 846.908 Q25.3325 846.908 23.5501 849.231 Q21.7677 851.523 21.7677 856.234 L21.7677 865.75 M16.4842 872.18 L16.4842 855.756 Q16.4842 848.404 19.5397 844.425 Q22.5952 840.447 28.2289 840.447 Q32.5894 840.447 35.1675 842.484 Q37.7456 844.521 38.3822 848.467 Q39.4007 843.725 42.6472 841.115 Q45.8619 838.473 50.6998 838.473 Q57.0655 838.473 60.5348 842.802 Q64.0042 847.131 64.0042 855.12 L64.0042 872.18 L16.4842 872.18 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M28.3562 827.715 L28.3562 821.859 L64.0042 821.859 L64.0042 827.715 L28.3562 827.715 M14.479 827.715 L14.479 821.859 L21.895 821.859 L21.895 827.715 L14.479 827.715 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M33.7671 786.147 L14.479 786.147 L14.479 780.291 L64.0042 780.291 L64.0042 786.147 L58.657 786.147 Q61.8398 787.993 63.3994 790.826 Q64.9272 793.627 64.9272 797.574 Q64.9272 804.035 59.771 808.109 Q54.6147 812.151 46.212 812.151 Q37.8093 812.151 32.6531 808.109 Q27.4968 804.035 27.4968 797.574 Q27.4968 793.627 29.0564 790.826 Q30.5842 787.993 33.7671 786.147 M46.212 806.104 Q52.6732 806.104 56.3653 803.462 Q60.0256 800.788 60.0256 796.141 Q60.0256 791.494 56.3653 788.821 Q52.6732 786.147 46.212 786.147 Q39.7508 786.147 36.0905 788.821 Q32.3984 791.494 32.3984 796.141 Q32.3984 800.788 36.0905 803.462 Q39.7508 806.104 46.212 806.104 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M29.4065 745.502 L34.9447 745.502 Q33.6716 747.985 33.035 750.658 Q32.3984 753.332 32.3984 756.196 Q32.3984 760.557 33.7352 762.753 Q35.072 764.917 37.7456 764.917 Q39.7826 764.917 40.9603 763.358 Q42.1061 761.798 43.1565 757.088 L43.6021 755.082 Q44.9389 748.844 47.3897 746.234 Q49.8086 743.592 54.1691 743.592 Q59.1344 743.592 62.0308 747.539 Q64.9272 751.454 64.9272 758.329 Q64.9272 761.194 64.3543 764.313 Q63.8132 767.4 62.6992 770.838 L56.6518 770.838 Q58.3387 767.591 59.198 764.44 Q60.0256 761.289 60.0256 758.202 Q60.0256 754.064 58.6251 751.836 Q57.1929 749.608 54.6147 749.608 Q52.2276 749.608 50.9545 751.231 Q49.6813 752.823 48.5037 758.265 L48.0262 760.302 Q46.8804 765.745 44.5251 768.164 Q42.138 770.583 38.0002 770.583 Q32.9713 770.583 30.2341 767.018 Q27.4968 763.453 27.4968 756.897 Q27.4968 753.65 27.9743 750.786 Q28.4517 747.921 29.4065 745.502 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M842.506 33.5675 L842.506 39.7307 Q839.554 36.9819 836.198 35.6219 Q832.87 34.262 829.109 34.262 Q821.701 34.262 817.766 38.8048 Q813.831 43.3186 813.831 51.8834 Q813.831 60.4192 817.766 64.962 Q821.701 69.4759 829.109 69.4759 Q832.87 69.4759 836.198 68.116 Q839.554 66.756 842.506 64.0072 L842.506 70.1125 Q839.438 72.1958 835.995 73.2375 Q832.581 74.2791 828.761 74.2791 Q818.952 74.2791 813.31 68.2896 Q807.668 62.2711 807.668 51.8834 Q807.668 41.4668 813.31 35.4772 Q818.952 29.4588 828.761 29.4588 Q832.639 29.4588 836.053 30.5004 Q839.496 31.5131 842.506 33.5675 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M877.43 31.6578 L877.43 37.358 Q874.103 35.7666 871.151 34.9853 Q868.2 34.2041 865.451 34.2041 Q860.677 34.2041 858.073 36.0559 Q855.497 37.9078 855.497 41.3221 Q855.497 44.1867 857.205 45.6624 Q858.941 47.1091 863.744 48.0061 L867.274 48.7295 Q873.813 49.9737 876.909 53.1276 Q880.034 56.2526 880.034 61.5188 Q880.034 67.7977 875.81 71.0384 Q871.614 74.2791 863.483 74.2791 Q860.416 74.2791 856.944 73.5847 Q853.501 72.8902 849.797 71.5303 L849.797 65.5118 Q853.356 67.5083 856.771 68.521 Q860.185 69.5338 863.483 69.5338 Q868.489 69.5338 871.209 67.5662 Q873.929 65.5986 873.929 61.9528 Q873.929 58.7699 871.961 56.976 Q870.023 55.182 865.567 54.285 L862.008 53.5906 Q855.468 52.2885 852.546 49.5107 Q849.624 46.733 849.624 41.7851 Q849.624 36.0559 853.646 32.7573 Q857.696 29.4588 864.786 29.4588 Q867.824 29.4588 870.978 30.0085 Q874.132 30.5583 877.43 31.6578 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M889.149 30.24 L916.464 30.24 L916.464 35.159 L894.994 35.159 L894.994 47.9482 L915.567 47.9482 L915.567 52.8672 L894.994 52.8672 L894.994 68.521 L916.984 68.521 L916.984 73.44 L889.149 73.44 L889.149 30.24 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M961.602 28.4171 L961.602 32.8442 L956.51 32.8442 Q953.645 32.8442 952.517 34.0016 Q951.417 35.159 951.417 38.1682 L951.417 41.0328 L960.184 41.0328 L960.184 45.1705 L951.417 45.1705 L951.417 73.44 L946.064 73.44 L946.064 45.1705 L940.972 45.1705 L940.972 41.0328 L946.064 41.0328 L946.064 38.7758 Q946.064 33.365 948.581 30.9055 Q951.099 28.4171 956.567 28.4171 L961.602 28.4171 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M978.616 44.7654 Q974.334 44.7654 971.845 48.1218 Q969.357 51.4494 969.357 57.2653 Q969.357 63.0813 971.816 66.4377 Q974.305 69.7653 978.616 69.7653 Q982.869 69.7653 985.358 66.4088 Q987.846 63.0523 987.846 57.2653 Q987.846 51.5072 985.358 48.1508 Q982.869 44.7654 978.616 44.7654 M978.616 40.2515 Q985.56 40.2515 989.524 44.7654 Q993.489 49.2792 993.489 57.2653 Q993.489 65.2225 989.524 69.7653 Q985.56 74.2791 978.616 74.2791 Q971.643 74.2791 967.679 69.7653 Q963.743 65.2225 963.743 57.2653 Q963.743 49.2792 967.679 44.7654 Q971.643 40.2515 978.616 40.2515 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1021.09 46.0096 Q1020.2 45.4888 1019.13 45.2573 Q1018.08 44.9969 1016.81 44.9969 Q1012.3 44.9969 1009.87 47.9482 Q1007.46 50.8707 1007.46 56.3683 L1007.46 73.44 L1002.11 73.44 L1002.11 41.0328 L1007.46 41.0328 L1007.46 46.0675 Q1009.14 43.1161 1011.83 41.6983 Q1014.52 40.2515 1018.37 40.2515 Q1018.92 40.2515 1019.59 40.3383 Q1020.25 40.3962 1021.06 40.5409 L1021.09 46.0096 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1072.45 53.8799 L1072.45 73.44 L1067.13 73.44 L1067.13 54.0535 Q1067.13 49.4529 1065.33 47.167 Q1063.54 44.8811 1059.95 44.8811 Q1055.64 44.8811 1053.15 47.63 Q1050.66 50.3788 1050.66 55.1241 L1050.66 73.44 L1045.31 73.44 L1045.31 41.0328 L1050.66 41.0328 L1050.66 46.0675 Q1052.57 43.145 1055.15 41.6983 Q1057.75 40.2515 1061.14 40.2515 Q1066.72 40.2515 1069.59 43.7237 Q1072.45 47.167 1072.45 53.8799 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1083.77 46.5304 L1120.86 46.5304 L1120.86 51.3915 L1083.77 51.3915 L1083.77 46.5304 M1083.77 58.3359 L1120.86 58.3359 L1120.86 63.2549 L1083.77 63.2549 L1083.77 58.3359 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1134.49 68.521 L1144.04 68.521 L1144.04 35.564 L1133.65 37.6474 L1133.65 32.3233 L1143.98 30.24 L1149.82 30.24 L1149.82 68.521 L1159.37 68.521 L1159.37 73.44 L1134.49 73.44 L1134.49 68.521 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1184.4 49.5107 Q1180.47 49.5107 1178.15 52.2017 Q1175.87 54.8926 1175.87 59.5801 Q1175.87 64.2387 1178.15 66.9586 Q1180.47 69.6495 1184.4 69.6495 Q1188.34 69.6495 1190.62 66.9586 Q1192.94 64.2387 1192.94 59.5801 Q1192.94 54.8926 1190.62 52.2017 Q1188.34 49.5107 1184.4 49.5107 M1196 31.1949 L1196 36.5189 Q1193.81 35.4772 1191.55 34.9275 Q1189.32 34.3777 1187.12 34.3777 Q1181.33 34.3777 1178.27 38.2839 Q1175.23 42.1902 1174.8 50.0894 Q1176.5 47.5721 1179.08 46.2411 Q1181.65 44.8811 1184.75 44.8811 Q1191.26 44.8811 1195.02 48.8452 Q1198.81 52.7804 1198.81 59.5801 Q1198.81 66.2352 1194.88 70.2571 Q1190.94 74.2791 1184.4 74.2791 Q1176.91 74.2791 1172.94 68.55 Q1168.98 62.7919 1168.98 51.8834 Q1168.98 41.6404 1173.84 35.564 Q1178.7 29.4588 1186.89 29.4588 Q1189.09 29.4588 1191.32 29.8928 Q1193.57 30.3268 1196 31.1949 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1209.49 66.0905 L1215.59 66.0905 L1215.59 71.0673 L1210.85 80.3265 L1207.12 80.3265 L1209.49 71.0673 L1209.49 66.0905 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1272.74 53.8799 L1272.74 73.44 L1267.42 73.44 L1267.42 54.0535 Q1267.42 49.4529 1265.62 47.167 Q1263.83 44.8811 1260.24 44.8811 Q1255.93 44.8811 1253.44 47.63 Q1250.95 50.3788 1250.95 55.1241 L1250.95 73.44 L1245.6 73.44 L1245.6 41.0328 L1250.95 41.0328 L1250.95 46.0675 Q1252.86 43.145 1255.44 41.6983 Q1258.04 40.2515 1261.43 40.2515 Q1267.01 40.2515 1269.88 43.7237 Q1272.74 47.167 1272.74 53.8799 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1288.51 68.5789 L1288.51 85.7663 L1283.16 85.7663 L1283.16 41.0328 L1288.51 41.0328 L1288.51 45.9517 Q1290.19 43.0582 1292.73 41.6693 Q1295.31 40.2515 1298.87 40.2515 Q1304.77 40.2515 1308.45 44.939 Q1312.15 49.6265 1312.15 57.2653 Q1312.15 64.9042 1308.45 69.5916 Q1304.77 74.2791 1298.87 74.2791 Q1295.31 74.2791 1292.73 72.8902 Q1290.19 71.4724 1288.51 68.5789 M1306.62 57.2653 Q1306.62 51.3915 1304.19 48.064 Q1301.79 44.7075 1297.57 44.7075 Q1293.34 44.7075 1290.91 48.064 Q1288.51 51.3915 1288.51 57.2653 Q1288.51 63.1391 1290.91 66.4956 Q1293.34 69.8231 1297.57 69.8231 Q1301.79 69.8231 1304.19 66.4956 Q1306.62 63.1391 1306.62 57.2653 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1321.67 46.5304 L1358.76 46.5304 L1358.76 51.3915 L1321.67 51.3915 L1321.67 46.5304 M1321.67 58.3359 L1358.76 58.3359 L1358.76 63.2549 L1321.67 63.2549 L1321.67 58.3359 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1376.41 68.521 L1396.81 68.521 L1396.81 73.44 L1369.38 73.44 L1369.38 68.521 Q1372.71 65.0778 1378.44 59.2908 Q1384.2 53.4748 1385.67 51.7966 Q1388.48 48.6427 1389.58 46.4726 Q1390.71 44.2735 1390.71 42.1612 Q1390.71 38.718 1388.28 36.5478 Q1385.88 34.3777 1382 34.3777 Q1379.25 34.3777 1376.18 35.3326 Q1373.15 36.2874 1369.67 38.2261 L1369.67 32.3233 Q1373.2 30.9055 1376.27 30.1821 Q1379.34 29.4588 1381.88 29.4588 Q1388.6 29.4588 1392.59 32.8152 Q1396.58 36.1717 1396.58 41.7851 Q1396.58 44.4471 1395.57 46.8487 Q1394.59 49.2214 1391.95 52.4621 Q1391.23 53.3012 1387.35 57.3232 Q1383.47 61.3162 1376.41 68.521 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1409.69 66.0905 L1415.8 66.0905 L1415.8 71.0673 L1411.05 80.3265 L1407.32 80.3265 L1409.69 71.0673 L1409.69 66.0905 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1471.23 47.2538 Q1473.23 43.6659 1476.01 41.9587 Q1478.79 40.2515 1482.55 40.2515 Q1487.61 40.2515 1490.36 43.8105 Q1493.11 47.3406 1493.11 53.8799 L1493.11 73.44 L1487.76 73.44 L1487.76 54.0535 Q1487.76 49.395 1486.11 47.1381 Q1484.46 44.8811 1481.07 44.8811 Q1476.94 44.8811 1474.53 47.63 Q1472.13 50.3788 1472.13 55.1241 L1472.13 73.44 L1466.78 73.44 L1466.78 54.0535 Q1466.78 49.3661 1465.13 47.1381 Q1463.48 44.8811 1460.04 44.8811 Q1455.96 44.8811 1453.56 47.6589 Q1451.15 50.4077 1451.15 55.1241 L1451.15 73.44 L1445.8 73.44 L1445.8 41.0328 L1451.15 41.0328 L1451.15 46.0675 Q1452.98 43.0872 1455.52 41.6693 Q1458.07 40.2515 1461.57 40.2515 Q1465.1 40.2515 1467.56 42.0455 Q1470.05 43.8395 1471.23 47.2538 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1527.05 42.277 L1527.05 47.2538 Q1524.79 46.0096 1522.51 45.402 Q1520.25 44.7654 1517.94 44.7654 Q1512.76 44.7654 1509.89 48.064 Q1507.03 51.3336 1507.03 57.2653 Q1507.03 63.197 1509.89 66.4956 Q1512.76 69.7653 1517.94 69.7653 Q1520.25 69.7653 1522.51 69.1576 Q1524.79 68.521 1527.05 67.2768 L1527.05 72.1958 Q1524.82 73.2375 1522.42 73.7583 Q1520.05 74.2791 1517.36 74.2791 Q1510.04 74.2791 1505.73 69.6784 Q1501.41 65.0778 1501.41 57.2653 Q1501.41 49.3371 1505.75 44.7943 Q1510.12 40.2515 1517.7 40.2515 Q1520.16 40.2515 1522.51 40.7724 Q1524.85 41.2642 1527.05 42.277 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1537 46.5304 L1574.1 46.5304 L1574.1 51.3915 L1537 51.3915 L1537 46.5304 M1537 58.3359 L1574.1 58.3359 L1574.1 63.2549 L1537 63.2549 L1537 58.3359 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1587.73 68.521 L1597.28 68.521 L1597.28 35.564 L1586.89 37.6474 L1586.89 32.3233 L1597.22 30.24 L1603.06 30.24 L1603.06 68.521 L1612.61 68.521 L1612.61 73.44 L1587.73 73.44 L1587.73 68.521 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1636.92 34.0884 Q1632.4 34.0884 1630.12 38.5444 Q1627.86 42.9714 1627.86 51.8834 Q1627.86 60.7665 1630.12 65.2225 Q1632.4 69.6495 1636.92 69.6495 Q1641.46 69.6495 1643.72 65.2225 Q1646 60.7665 1646 51.8834 Q1646 42.9714 1643.72 38.5444 Q1641.46 34.0884 1636.92 34.0884 M1636.92 29.4588 Q1644.18 29.4588 1648 35.2168 Q1651.85 40.946 1651.85 51.8834 Q1651.85 62.7919 1648 68.55 Q1644.18 74.2791 1636.92 74.2791 Q1629.65 74.2791 1625.81 68.55 Q1621.99 62.7919 1621.99 51.8834 Q1621.99 40.946 1625.81 35.2168 Q1629.65 29.4588 1636.92 29.4588 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1674.62 34.0884 Q1670.11 34.0884 1667.82 38.5444 Q1665.56 42.9714 1665.56 51.8834 Q1665.56 60.7665 1667.82 65.2225 Q1670.11 69.6495 1674.62 69.6495 Q1679.16 69.6495 1681.42 65.2225 Q1683.7 60.7665 1683.7 51.8834 Q1683.7 42.9714 1681.42 38.5444 Q1679.16 34.0884 1674.62 34.0884 M1674.62 29.4588 Q1681.88 29.4588 1685.7 35.2168 Q1689.55 40.946 1689.55 51.8834 Q1689.55 62.7919 1685.7 68.55 Q1681.88 74.2791 1674.62 74.2791 Q1667.36 74.2791 1663.51 68.55 Q1659.69 62.7919 1659.69 51.8834 Q1659.69 40.946 1663.51 35.2168 Q1667.36 29.4588 1674.62 29.4588 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1712.32 34.0884 Q1707.81 34.0884 1705.52 38.5444 Q1703.26 42.9714 1703.26 51.8834 Q1703.26 60.7665 1705.52 65.2225 Q1707.81 69.6495 1712.32 69.6495 Q1716.86 69.6495 1719.12 65.2225 Q1721.41 60.7665 1721.41 51.8834 Q1721.41 42.9714 1719.12 38.5444 Q1716.86 34.0884 1712.32 34.0884 M1712.32 29.4588 Q1719.58 29.4588 1723.4 35.2168 Q1727.25 40.946 1727.25 51.8834 Q1727.25 62.7919 1723.4 68.55 Q1719.58 74.2791 1712.32 74.2791 Q1705.06 74.2791 1701.21 68.55 Q1697.39 62.7919 1697.39 51.8834 Q1697.39 40.946 1701.21 35.2168 Q1705.06 29.4588 1712.32 29.4588 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1750.02 34.0884 Q1745.51 34.0884 1743.22 38.5444 Q1740.97 42.9714 1740.97 51.8834 Q1740.97 60.7665 1743.22 65.2225 Q1745.51 69.6495 1750.02 69.6495 Q1754.57 69.6495 1756.82 65.2225 Q1759.11 60.7665 1759.11 51.8834 Q1759.11 42.9714 1756.82 38.5444 Q1754.57 34.0884 1750.02 34.0884 M1750.02 29.4588 Q1757.29 29.4588 1761.11 35.2168 Q1764.95 40.946 1764.95 51.8834 Q1764.95 62.7919 1761.11 68.55 Q1757.29 74.2791 1750.02 74.2791 Q1742.76 74.2791 1738.91 68.55 Q1735.09 62.7919 1735.09 51.8834 Q1735.09 40.946 1738.91 35.2168 Q1742.76 29.4588 1750.02 29.4588 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M597.267 93.275 Q593.389 99.93 591.509 106.44 Q589.628 112.951 589.628 119.635 Q589.628 126.319 591.509 132.887 Q593.418 139.426 597.267 146.052 L592.637 146.052 Q588.297 139.253 586.127 132.684 Q583.986 126.116 583.986 119.635 Q583.986 113.182 586.127 106.643 Q588.268 100.104 592.637 93.275 L597.267 93.275 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M609.362 133.321 L618.91 133.321 L618.91 100.364 L608.522 102.447 L608.522 97.1233 L618.852 95.04 L624.697 95.04 L624.697 133.321 L634.246 133.321 L634.246 138.24 L609.362 138.24 L609.362 133.321 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M644.46 93.275 L649.089 93.275 Q653.43 100.104 655.571 106.643 Q657.741 113.182 657.741 119.635 Q657.741 126.116 655.571 132.684 Q653.43 139.253 649.089 146.052 L644.46 146.052 Q648.308 139.426 650.189 132.887 Q652.099 126.319 652.099 119.635 Q652.099 112.951 650.189 106.44 Q648.308 99.93 644.46 93.275 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M693.331 117.609 L693.331 133.437 L702.706 133.437 Q707.422 133.437 709.679 131.498 Q711.965 129.531 711.965 125.509 Q711.965 121.458 709.679 119.548 Q707.422 117.609 702.706 117.609 L693.331 117.609 M693.331 99.8432 L693.331 112.864 L701.983 112.864 Q706.265 112.864 708.348 111.273 Q710.461 109.652 710.461 106.354 Q710.461 103.084 708.348 101.464 Q706.265 99.8432 701.983 99.8432 L693.331 99.8432 M687.486 95.04 L702.417 95.04 Q709.101 95.04 712.718 97.8178 Q716.334 100.596 716.334 105.717 Q716.334 109.681 714.483 112.025 Q712.631 114.369 709.043 114.947 Q713.354 115.873 715.727 118.825 Q718.128 121.747 718.128 126.145 Q718.128 131.932 714.193 135.086 Q710.258 138.24 702.995 138.24 L687.486 138.24 L687.486 95.04 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M755.628 120.705 L755.628 123.31 L731.149 123.31 Q731.496 128.807 734.448 131.701 Q737.428 134.565 742.723 134.565 Q745.79 134.565 748.655 133.813 Q751.548 133.061 754.384 131.556 L754.384 136.591 Q751.519 137.806 748.51 138.443 Q745.501 139.079 742.405 139.079 Q734.65 139.079 730.107 134.565 Q725.594 130.051 725.594 122.355 Q725.594 114.398 729.876 109.739 Q734.187 105.052 741.479 105.052 Q748.018 105.052 751.809 109.276 Q755.628 113.472 755.628 120.705 M750.304 119.143 Q750.246 114.774 747.845 112.17 Q745.472 109.565 741.537 109.565 Q737.081 109.565 734.39 112.083 Q731.728 114.6 731.323 119.172 L750.304 119.143 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M769.633 96.6314 L769.633 105.833 L780.599 105.833 L780.599 109.97 L769.633 109.97 L769.633 127.563 Q769.633 131.527 770.703 132.656 Q771.803 133.784 775.13 133.784 L780.599 133.784 L780.599 138.24 L775.13 138.24 Q768.967 138.24 766.623 135.954 Q764.28 133.639 764.28 127.563 L764.28 109.97 L760.374 109.97 L760.374 105.833 L764.28 105.833 L764.28 96.6314 L769.633 96.6314 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M802.329 121.95 Q795.877 121.95 793.388 123.425 Q790.9 124.901 790.9 128.46 Q790.9 131.296 792.752 132.974 Q794.633 134.623 797.844 134.623 Q802.271 134.623 804.933 131.498 Q807.624 128.344 807.624 123.136 L807.624 121.95 L802.329 121.95 M812.948 119.751 L812.948 138.24 L807.624 138.24 L807.624 133.321 Q805.802 136.272 803.082 137.69 Q800.362 139.079 796.427 139.079 Q791.45 139.079 788.498 136.301 Q785.576 133.495 785.576 128.807 Q785.576 123.338 789.222 120.561 Q792.896 117.783 800.159 117.783 L807.624 117.783 L807.624 117.262 Q807.624 113.587 805.194 111.591 Q802.792 109.565 798.423 109.565 Q795.645 109.565 793.012 110.231 Q790.379 110.896 787.949 112.227 L787.949 107.308 Q790.871 106.18 793.62 105.63 Q796.369 105.052 798.973 105.052 Q806.004 105.052 809.476 108.697 Q812.948 112.343 812.948 119.751 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M836.704 93.275 Q832.827 99.93 830.946 106.44 Q829.065 112.951 829.065 119.635 Q829.065 126.319 830.946 132.887 Q832.856 139.426 836.704 146.052 L832.075 146.052 Q827.734 139.253 825.564 132.684 Q823.423 126.116 823.423 119.635 Q823.423 113.182 825.564 106.643 Q827.705 100.104 832.075 93.275 L836.704 93.275 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M865.929 123.165 L864.655 116.481 Q863.353 109.623 858.203 109.623 Q854.326 109.623 852.561 112.806 Q850.333 116.799 850.333 122.065 Q850.333 128.431 852.503 131.469 Q854.702 134.565 858.203 134.565 Q862.08 134.565 864.163 128.402 L865.929 123.165 M868.909 114.311 L871.773 105.833 L876.519 105.833 L870.587 123.396 L871.744 129.733 Q872.005 131.151 873.018 132.337 Q874.204 133.726 875.13 133.726 L877.676 133.726 L877.676 138.24 L874.493 138.24 Q871.773 138.24 869.343 135.809 Q868.156 134.594 867.665 132.048 Q866.334 135.26 863.614 137.777 Q862.341 138.963 858.203 138.963 Q851.403 138.963 848.105 134.565 Q844.719 130.022 844.719 122.065 Q844.719 113.558 848.394 109.565 Q852.474 105.109 858.203 105.109 Q867.202 105.109 868.909 114.311 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M886.791 111.33 L923.885 111.33 L923.885 116.192 L886.791 116.192 L886.791 111.33 M886.791 123.136 L923.885 123.136 L923.885 128.055 L886.791 128.055 L886.791 123.136 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M954.209 114.947 Q958.405 115.844 960.749 118.68 Q963.121 121.516 963.121 125.682 Q963.121 132.077 958.723 135.578 Q954.325 139.079 946.223 139.079 Q943.503 139.079 940.61 138.529 Q937.745 138.009 934.678 136.938 L934.678 131.296 Q937.109 132.713 940.002 133.437 Q942.896 134.16 946.05 134.16 Q951.547 134.16 954.412 131.99 Q957.305 129.82 957.305 125.682 Q957.305 121.863 954.614 119.722 Q951.952 117.551 947.178 117.551 L942.143 117.551 L942.143 112.748 L947.41 112.748 Q951.721 112.748 954.007 111.041 Q956.293 109.305 956.293 106.064 Q956.293 102.737 953.92 100.972 Q951.576 99.1777 947.178 99.1777 Q944.776 99.1777 942.028 99.6985 Q939.279 100.219 935.98 101.319 L935.98 96.1106 Q939.308 95.1847 942.201 94.7217 Q945.124 94.2588 947.699 94.2588 Q954.354 94.2588 958.231 97.2969 Q962.109 100.306 962.109 105.457 Q962.109 109.045 960.054 111.533 Q958 113.992 954.209 114.947 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M974.203 130.891 L980.309 130.891 L980.309 138.24 L974.203 138.24 L974.203 130.891 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1005.54 98.8884 Q1001.03 98.8884 998.74 103.344 Q996.483 107.771 996.483 116.683 Q996.483 125.566 998.74 130.022 Q1001.03 134.45 1005.54 134.45 Q1010.08 134.45 1012.34 130.022 Q1014.63 125.566 1014.63 116.683 Q1014.63 107.771 1012.34 103.344 Q1010.08 98.8884 1005.54 98.8884 M1005.54 94.2588 Q1012.8 94.2588 1016.62 100.017 Q1020.47 105.746 1020.47 116.683 Q1020.47 127.592 1016.62 133.35 Q1012.8 139.079 1005.54 139.079 Q998.277 139.079 994.429 133.35 Q990.61 127.592 990.61 116.683 Q990.61 105.746 994.429 100.017 Q998.277 94.2588 1005.54 94.2588 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1031.35 130.891 L1037.46 130.891 L1037.46 135.867 L1032.71 145.127 L1028.98 145.127 L1031.35 135.867 L1031.35 130.891 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1072.99 136.243 L1072.99 150.566 L1067.63 150.566 L1067.63 106.035 Q1067.63 92.8409 1079.96 92.8409 Q1092.52 92.8409 1092.52 103.981 Q1092.52 111.909 1087.54 114.803 Q1095.64 117.407 1095.64 125.132 Q1095.64 138.848 1081.7 138.848 Q1075.56 138.848 1072.99 136.243 M1072.99 129.299 Q1076.2 134.305 1081.9 134.305 Q1090.23 134.305 1090.23 125.219 Q1090.23 117.06 1076.81 117.696 L1076.81 112.777 Q1087.31 112.777 1087.31 103.518 Q1087.31 97.1812 1080.54 97.1812 Q1072.99 97.1812 1072.99 106.209 L1072.99 129.299 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1106.18 111.33 L1143.27 111.33 L1143.27 116.192 L1106.18 116.192 L1106.18 111.33 M1106.18 123.136 L1143.27 123.136 L1143.27 128.055 L1106.18 128.055 L1106.18 123.136 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1173.59 114.947 Q1177.79 115.844 1180.13 118.68 Q1182.51 121.516 1182.51 125.682 Q1182.51 132.077 1178.11 135.578 Q1173.71 139.079 1165.61 139.079 Q1162.89 139.079 1160 138.529 Q1157.13 138.009 1154.06 136.938 L1154.06 131.296 Q1156.49 132.713 1159.39 133.437 Q1162.28 134.16 1165.43 134.16 Q1170.93 134.16 1173.8 131.99 Q1176.69 129.82 1176.69 125.682 Q1176.69 121.863 1174 119.722 Q1171.34 117.551 1166.56 117.551 L1161.53 117.551 L1161.53 112.748 L1166.79 112.748 Q1171.11 112.748 1173.39 111.041 Q1175.68 109.305 1175.68 106.064 Q1175.68 102.737 1173.31 100.972 Q1170.96 99.1777 1166.56 99.1777 Q1164.16 99.1777 1161.41 99.6985 Q1158.66 100.219 1155.37 101.319 L1155.37 96.1106 Q1158.69 95.1847 1161.59 94.7217 Q1164.51 94.2588 1167.08 94.2588 Q1173.74 94.2588 1177.62 97.2969 Q1181.49 100.306 1181.49 105.457 Q1181.49 109.045 1179.44 111.533 Q1177.39 113.992 1173.59 114.947 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1193.59 130.891 L1199.69 130.891 L1199.69 138.24 L1193.59 138.24 L1193.59 130.891 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1224.93 98.8884 Q1220.41 98.8884 1218.13 103.344 Q1215.87 107.771 1215.87 116.683 Q1215.87 125.566 1218.13 130.022 Q1220.41 134.45 1224.93 134.45 Q1229.47 134.45 1231.73 130.022 Q1234.01 125.566 1234.01 116.683 Q1234.01 107.771 1231.73 103.344 Q1229.47 98.8884 1224.93 98.8884 M1224.93 94.2588 Q1232.19 94.2588 1236.01 100.017 Q1239.86 105.746 1239.86 116.683 Q1239.86 127.592 1236.01 133.35 Q1232.19 139.079 1224.93 139.079 Q1217.66 139.079 1213.81 133.35 Q1209.99 127.592 1209.99 116.683 Q1209.99 105.746 1213.81 100.017 Q1217.66 94.2588 1224.93 94.2588 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1248.54 93.275 L1253.17 93.275 Q1257.51 100.104 1259.65 106.643 Q1261.82 113.182 1261.82 119.635 Q1261.82 126.116 1259.65 132.684 Q1257.51 139.253 1253.17 146.052 L1248.54 146.052 Q1252.38 139.426 1254.27 132.887 Q1256.18 126.319 1256.18 119.635 Q1256.18 112.951 1254.27 106.44 Q1252.38 99.93 1248.54 93.275 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1273.85 107.598 L1279.96 107.598 L1279.96 114.947 L1273.85 114.947 L1273.85 107.598 M1273.85 130.891 L1279.96 130.891 L1279.96 135.867 L1275.21 145.127 L1271.48 145.127 L1273.85 135.867 L1273.85 130.891 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1324.09 93.275 Q1320.21 99.93 1318.33 106.44 Q1316.45 112.951 1316.45 119.635 Q1316.45 126.319 1318.33 132.887 Q1320.24 139.426 1324.09 146.052 L1319.46 146.052 Q1315.12 139.253 1312.95 132.684 Q1310.8 126.116 1310.8 119.635 Q1310.8 113.182 1312.95 106.643 Q1315.09 100.104 1319.46 93.275 L1324.09 93.275 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1340.2 133.321 L1360.6 133.321 L1360.6 138.24 L1333.17 138.24 L1333.17 133.321 Q1336.5 129.878 1342.23 124.091 Q1347.99 118.275 1349.46 116.597 Q1352.27 113.443 1353.37 111.273 Q1354.5 109.073 1354.5 106.961 Q1354.5 103.518 1352.07 101.348 Q1349.66 99.1777 1345.79 99.1777 Q1343.04 99.1777 1339.97 100.133 Q1336.93 101.087 1333.46 103.026 L1333.46 97.1233 Q1336.99 95.7055 1340.06 94.9821 Q1343.13 94.2588 1345.67 94.2588 Q1352.38 94.2588 1356.38 97.6152 Q1360.37 100.972 1360.37 106.585 Q1360.37 109.247 1359.36 111.649 Q1358.37 114.021 1355.74 117.262 Q1355.02 118.101 1351.14 122.123 Q1347.26 126.116 1340.2 133.321 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1371.28 93.275 L1375.91 93.275 Q1380.25 100.104 1382.39 106.643 Q1384.56 113.182 1384.56 119.635 Q1384.56 126.116 1382.39 132.684 Q1380.25 139.253 1375.91 146.052 L1371.28 146.052 Q1375.13 139.426 1377.01 132.887 Q1378.92 126.319 1378.92 119.635 Q1378.92 112.951 1377.01 106.44 Q1375.13 99.93 1371.28 93.275 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1420.15 117.609 L1420.15 133.437 L1429.53 133.437 Q1434.24 133.437 1436.5 131.498 Q1438.78 129.531 1438.78 125.509 Q1438.78 121.458 1436.5 119.548 Q1434.24 117.609 1429.53 117.609 L1420.15 117.609 M1420.15 99.8432 L1420.15 112.864 L1428.8 112.864 Q1433.08 112.864 1435.17 111.273 Q1437.28 109.652 1437.28 106.354 Q1437.28 103.084 1435.17 101.464 Q1433.08 99.8432 1428.8 99.8432 L1420.15 99.8432 M1414.31 95.04 L1429.24 95.04 Q1435.92 95.04 1439.54 97.8178 Q1443.15 100.596 1443.15 105.717 Q1443.15 109.681 1441.3 112.025 Q1439.45 114.369 1435.86 114.947 Q1440.17 115.873 1442.55 118.825 Q1444.95 121.747 1444.95 126.145 Q1444.95 131.932 1441.01 135.086 Q1437.08 138.24 1429.81 138.24 L1414.31 138.24 L1414.31 95.04 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1482.45 120.705 L1482.45 123.31 L1457.97 123.31 Q1458.32 128.807 1461.27 131.701 Q1464.25 134.565 1469.54 134.565 Q1472.61 134.565 1475.47 133.813 Q1478.37 133.061 1481.2 131.556 L1481.2 136.591 Q1478.34 137.806 1475.33 138.443 Q1472.32 139.079 1469.22 139.079 Q1461.47 139.079 1456.93 134.565 Q1452.41 130.051 1452.41 122.355 Q1452.41 114.398 1456.7 109.739 Q1461.01 105.052 1468.3 105.052 Q1474.84 105.052 1478.63 109.276 Q1482.45 113.472 1482.45 120.705 M1477.12 119.143 Q1477.07 114.774 1474.66 112.17 Q1472.29 109.565 1468.36 109.565 Q1463.9 109.565 1461.21 112.083 Q1458.55 114.6 1458.14 119.172 L1477.12 119.143 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1496.45 96.6314 L1496.45 105.833 L1507.42 105.833 L1507.42 109.97 L1496.45 109.97 L1496.45 127.563 Q1496.45 131.527 1497.52 132.656 Q1498.62 133.784 1501.95 133.784 L1507.42 133.784 L1507.42 138.24 L1501.95 138.24 Q1495.79 138.24 1493.44 135.954 Q1491.1 133.639 1491.1 127.563 L1491.1 109.97 L1487.19 109.97 L1487.19 105.833 L1491.1 105.833 L1491.1 96.6314 L1496.45 96.6314 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1529.15 121.95 Q1522.7 121.95 1520.21 123.425 Q1517.72 124.901 1517.72 128.46 Q1517.72 131.296 1519.57 132.974 Q1521.45 134.623 1524.66 134.623 Q1529.09 134.623 1531.75 131.498 Q1534.44 128.344 1534.44 123.136 L1534.44 121.95 L1529.15 121.95 M1539.77 119.751 L1539.77 138.24 L1534.44 138.24 L1534.44 133.321 Q1532.62 136.272 1529.9 137.69 Q1527.18 139.079 1523.25 139.079 Q1518.27 139.079 1515.32 136.301 Q1512.39 133.495 1512.39 128.807 Q1512.39 123.338 1516.04 120.561 Q1519.72 117.783 1526.98 117.783 L1534.44 117.783 L1534.44 117.262 Q1534.44 113.587 1532.01 111.591 Q1529.61 109.565 1525.24 109.565 Q1522.46 109.565 1519.83 110.231 Q1517.2 110.896 1514.77 112.227 L1514.77 107.308 Q1517.69 106.18 1520.44 105.63 Q1523.19 105.052 1525.79 105.052 Q1532.82 105.052 1536.3 108.697 Q1539.77 112.343 1539.77 119.751 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1563.52 93.275 Q1559.65 99.93 1557.77 106.44 Q1555.88 112.951 1555.88 119.635 Q1555.88 126.319 1557.77 132.887 Q1559.67 139.426 1563.52 146.052 L1558.89 146.052 Q1554.55 139.253 1552.38 132.684 Q1550.24 126.116 1550.24 119.635 Q1550.24 113.182 1552.38 106.643 Q1554.52 100.104 1558.89 93.275 L1563.52 93.275 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1592.75 123.165 L1591.47 116.481 Q1590.17 109.623 1585.02 109.623 Q1581.14 109.623 1579.38 112.806 Q1577.15 116.799 1577.15 122.065 Q1577.15 128.431 1579.32 131.469 Q1581.52 134.565 1585.02 134.565 Q1588.9 134.565 1590.98 128.402 L1592.75 123.165 M1595.73 114.311 L1598.59 105.833 L1603.34 105.833 L1597.41 123.396 L1598.56 129.733 Q1598.82 131.151 1599.84 132.337 Q1601.02 133.726 1601.95 133.726 L1604.5 133.726 L1604.5 138.24 L1601.31 138.24 Q1598.59 138.24 1596.16 135.809 Q1594.98 134.594 1594.48 132.048 Q1593.15 135.26 1590.43 137.777 Q1589.16 138.963 1585.02 138.963 Q1578.22 138.963 1574.92 134.565 Q1571.54 130.022 1571.54 122.065 Q1571.54 113.558 1575.21 109.565 Q1579.29 105.109 1585.02 105.109 Q1594.02 105.109 1595.73 114.311 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1613.61 111.33 L1650.7 111.33 L1650.7 116.192 L1613.61 116.192 L1613.61 111.33 M1613.61 123.136 L1650.7 123.136 L1650.7 128.055 L1613.61 128.055 L1613.61 123.136 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1681.03 114.947 Q1685.22 115.844 1687.57 118.68 Q1689.94 121.516 1689.94 125.682 Q1689.94 132.077 1685.54 135.578 Q1681.14 139.079 1673.04 139.079 Q1670.32 139.079 1667.43 138.529 Q1664.56 138.009 1661.5 136.938 L1661.5 131.296 Q1663.93 132.713 1666.82 133.437 Q1669.71 134.16 1672.87 134.16 Q1678.37 134.16 1681.23 131.99 Q1684.12 129.82 1684.12 125.682 Q1684.12 121.863 1681.43 119.722 Q1678.77 117.551 1674 117.551 L1668.96 117.551 L1668.96 112.748 L1674.23 112.748 Q1678.54 112.748 1680.83 111.041 Q1683.11 109.305 1683.11 106.064 Q1683.11 102.737 1680.74 100.972 Q1678.4 99.1777 1674 99.1777 Q1671.6 99.1777 1668.85 99.6985 Q1666.1 100.219 1662.8 101.319 L1662.8 96.1106 Q1666.13 95.1847 1669.02 94.7217 Q1671.94 94.2588 1674.52 94.2588 Q1681.17 94.2588 1685.05 97.2969 Q1688.93 100.306 1688.93 105.457 Q1688.93 109.045 1686.87 111.533 Q1684.82 113.992 1681.03 114.947 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1701.02 130.891 L1707.13 130.891 L1707.13 138.24 L1701.02 138.24 L1701.02 130.891 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1732.36 98.8884 Q1727.85 98.8884 1725.56 103.344 Q1723.3 107.771 1723.3 116.683 Q1723.3 125.566 1725.56 130.022 Q1727.85 134.45 1732.36 134.45 Q1736.9 134.45 1739.16 130.022 Q1741.44 125.566 1741.44 116.683 Q1741.44 107.771 1739.16 103.344 Q1736.9 98.8884 1732.36 98.8884 M1732.36 94.2588 Q1739.62 94.2588 1743.44 100.017 Q1747.29 105.746 1747.29 116.683 Q1747.29 127.592 1743.44 133.35 Q1739.62 139.079 1732.36 139.079 Q1725.1 139.079 1721.25 133.35 Q1717.43 127.592 1717.43 116.683 Q1717.43 105.746 1721.25 100.017 Q1725.1 94.2588 1732.36 94.2588 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1758.17 130.891 L1764.27 130.891 L1764.27 135.867 L1759.53 145.127 L1755.8 145.127 L1758.17 135.867 L1758.17 130.891 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1799.81 136.243 L1799.81 150.566 L1794.45 150.566 L1794.45 106.035 Q1794.45 92.8409 1806.78 92.8409 Q1819.34 92.8409 1819.34 103.981 Q1819.34 111.909 1814.36 114.803 Q1822.46 117.407 1822.46 125.132 Q1822.46 138.848 1808.52 138.848 Q1802.38 138.848 1799.81 136.243 M1799.81 129.299 Q1803.02 134.305 1808.72 134.305 Q1817.05 134.305 1817.05 125.219 Q1817.05 117.06 1803.63 117.696 L1803.63 112.777 Q1814.13 112.777 1814.13 103.518 Q1814.13 97.1812 1807.36 97.1812 Q1799.81 97.1812 1799.81 106.209 L1799.81 129.299 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1833 111.33 L1870.09 111.33 L1870.09 116.192 L1833 116.192 L1833 111.33 M1833 123.136 L1870.09 123.136 L1870.09 128.055 L1833 128.055 L1833 123.136 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1900.41 114.947 Q1904.61 115.844 1906.95 118.68 Q1909.33 121.516 1909.33 125.682 Q1909.33 132.077 1904.93 135.578 Q1900.53 139.079 1892.43 139.079 Q1889.71 139.079 1886.81 138.529 Q1883.95 138.009 1880.88 136.938 L1880.88 131.296 Q1883.31 132.713 1886.21 133.437 Q1889.1 134.16 1892.25 134.16 Q1897.75 134.16 1900.62 131.99 Q1903.51 129.82 1903.51 125.682 Q1903.51 121.863 1900.82 119.722 Q1898.16 117.551 1893.38 117.551 L1888.35 117.551 L1888.35 112.748 L1893.61 112.748 Q1897.93 112.748 1900.21 111.041 Q1902.5 109.305 1902.5 106.064 Q1902.5 102.737 1900.12 100.972 Q1897.78 99.1777 1893.38 99.1777 Q1890.98 99.1777 1888.23 99.6985 Q1885.48 100.219 1882.18 101.319 L1882.18 96.1106 Q1885.51 95.1847 1888.41 94.7217 Q1891.33 94.2588 1893.9 94.2588 Q1900.56 94.2588 1904.44 97.2969 Q1908.31 100.306 1908.31 105.457 Q1908.31 109.045 1906.26 111.533 Q1904.2 113.992 1900.41 114.947 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1920.41 130.891 L1926.51 130.891 L1926.51 138.24 L1920.41 138.24 L1920.41 130.891 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1951.74 98.8884 Q1947.23 98.8884 1944.94 103.344 Q1942.69 107.771 1942.69 116.683 Q1942.69 125.566 1944.94 130.022 Q1947.23 134.45 1951.74 134.45 Q1956.29 134.45 1958.54 130.022 Q1960.83 125.566 1960.83 116.683 Q1960.83 107.771 1958.54 103.344 Q1956.29 98.8884 1951.74 98.8884 M1951.74 94.2588 Q1959.01 94.2588 1962.83 100.017 Q1966.67 105.746 1966.67 116.683 Q1966.67 127.592 1962.83 133.35 Q1959.01 139.079 1951.74 139.079 Q1944.48 139.079 1940.63 133.35 Q1936.81 127.592 1936.81 116.683 Q1936.81 105.746 1940.63 100.017 Q1944.48 94.2588 1951.74 94.2588 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1975.36 93.275 L1979.99 93.275 Q1984.33 100.104 1986.47 106.643 Q1988.64 113.182 1988.64 119.635 Q1988.64 126.116 1986.47 132.684 Q1984.33 139.253 1979.99 146.052 L1975.36 146.052 Q1979.2 139.426 1981.08 132.887 Q1982.99 126.319 1982.99 119.635 Q1982.99 112.951 1981.08 106.44 Q1979.2 99.93 1975.36 93.275 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M707.842 163.168 L707.842 169.331 Q704.891 166.582 701.534 165.222 Q698.207 163.862 694.445 163.862 Q687.038 163.862 683.103 168.405 Q679.167 172.919 679.167 181.483 Q679.167 190.019 683.103 194.562 Q687.038 199.076 694.445 199.076 Q698.207 199.076 701.534 197.716 Q704.891 196.356 707.842 193.607 L707.842 199.712 Q704.775 201.796 701.332 202.837 Q697.917 203.879 694.098 203.879 Q684.289 203.879 678.647 197.89 Q673.004 191.871 673.004 181.483 Q673.004 171.067 678.647 165.077 Q684.289 159.059 694.098 159.059 Q697.975 159.059 701.389 160.1 Q704.833 161.113 707.842 163.168 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M741.262 212.878 L741.262 217.016 L710.475 217.016 L710.475 212.878 L741.262 212.878 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M748.033 198.121 L757.581 198.121 L757.581 165.164 L747.194 167.247 L747.194 161.923 L757.523 159.84 L763.368 159.84 L763.368 198.121 L772.917 198.121 L772.917 203.04 L748.033 203.04 L748.033 198.121 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M784.664 176.13 L821.759 176.13 L821.759 180.992 L784.664 180.992 L784.664 176.13 M784.664 187.936 L821.759 187.936 L821.759 192.855 L784.664 192.855 L784.664 187.936 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M846.412 158.075 Q842.535 164.73 840.654 171.24 Q838.773 177.751 838.773 184.435 Q838.773 191.119 840.654 197.687 Q842.563 204.226 846.412 210.852 L841.782 210.852 Q837.442 204.053 835.272 197.484 Q833.131 190.916 833.131 184.435 Q833.131 177.982 835.272 171.443 Q837.413 164.904 841.782 158.075 L846.412 158.075 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M862.529 198.121 L882.928 198.121 L882.928 203.04 L855.497 203.04 L855.497 198.121 Q858.825 194.678 864.554 188.891 Q870.312 183.075 871.788 181.397 Q874.595 178.243 875.694 176.073 Q876.823 173.873 876.823 171.761 Q876.823 168.318 874.392 166.148 Q871.99 163.978 868.113 163.978 Q865.364 163.978 862.297 164.933 Q859.259 165.887 855.787 167.826 L855.787 161.923 Q859.317 160.506 862.384 159.782 Q865.451 159.059 867.997 159.059 Q874.71 159.059 878.703 162.415 Q882.696 165.772 882.696 171.385 Q882.696 174.047 881.684 176.449 Q880.7 178.821 878.067 182.062 Q877.343 182.901 873.466 186.923 Q869.589 190.916 862.529 198.121 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M895.196 195.691 L901.302 195.691 L901.302 203.04 L895.196 203.04 L895.196 195.691 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M931.741 179.747 Q935.937 180.644 938.281 183.48 Q940.653 186.316 940.653 190.482 Q940.653 196.877 936.255 200.378 Q931.857 203.879 923.755 203.879 Q921.035 203.879 918.142 203.329 Q915.277 202.809 912.21 201.738 L912.21 196.096 Q914.641 197.513 917.534 198.237 Q920.428 198.96 923.582 198.96 Q929.079 198.96 931.944 196.79 Q934.837 194.62 934.837 190.482 Q934.837 186.663 932.146 184.522 Q929.484 182.351 924.71 182.351 L919.675 182.351 L919.675 177.548 L924.941 177.548 Q929.253 177.548 931.539 175.841 Q933.825 174.105 933.825 170.864 Q933.825 167.537 931.452 165.772 Q929.108 163.978 924.71 163.978 Q922.308 163.978 919.56 164.499 Q916.811 165.019 913.512 166.119 L913.512 160.911 Q916.84 159.985 919.733 159.522 Q922.656 159.059 925.231 159.059 Q931.886 159.059 935.763 162.097 Q939.64 165.106 939.64 170.257 Q939.64 173.845 937.586 176.333 Q935.532 178.792 931.741 179.747 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M952.748 198.121 L962.297 198.121 L962.297 165.164 L951.909 167.247 L951.909 161.923 L962.239 159.84 L968.084 159.84 L968.084 198.121 L977.632 198.121 L977.632 203.04 L952.748 203.04 L952.748 198.121 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1016.41 185.505 L1016.41 188.11 L991.926 188.11 Q992.273 193.607 995.225 196.501 Q998.205 199.365 1003.5 199.365 Q1006.57 199.365 1009.43 198.613 Q1012.33 197.861 1015.16 196.356 L1015.16 201.391 Q1012.3 202.606 1009.29 203.243 Q1006.28 203.879 1003.18 203.879 Q995.427 203.879 990.884 199.365 Q986.371 194.851 986.371 187.155 Q986.371 179.198 990.653 174.539 Q994.964 169.852 1002.26 169.852 Q1008.8 169.852 1012.59 174.076 Q1016.41 178.272 1016.41 185.505 M1011.08 183.943 Q1011.02 179.574 1008.62 176.97 Q1006.25 174.365 1002.31 174.365 Q997.858 174.365 995.167 176.883 Q992.505 179.4 992.1 183.972 L1011.08 183.943 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1022.45 184.435 L1038.05 184.435 L1038.05 189.18 L1022.45 189.18 L1022.45 184.435 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1059.78 163.688 Q1055.26 163.688 1052.98 168.144 Q1050.72 172.571 1050.72 181.483 Q1050.72 190.366 1052.98 194.822 Q1055.26 199.25 1059.78 199.25 Q1064.32 199.25 1066.58 194.822 Q1068.86 190.366 1068.86 181.483 Q1068.86 172.571 1066.58 168.144 Q1064.32 163.688 1059.78 163.688 M1059.78 159.059 Q1067.04 159.059 1070.86 164.817 Q1074.71 170.546 1074.71 181.483 Q1074.71 192.392 1070.86 198.15 Q1067.04 203.879 1059.78 203.879 Q1052.52 203.879 1048.67 198.15 Q1044.85 192.392 1044.85 181.483 Q1044.85 170.546 1048.67 164.817 Q1052.52 159.059 1059.78 159.059 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1085.04 159.84 L1107.98 159.84 L1107.98 164.759 L1090.39 164.759 L1090.39 175.349 Q1091.67 174.915 1092.94 174.713 Q1094.21 174.481 1095.48 174.481 Q1102.72 174.481 1106.94 178.445 Q1111.17 182.409 1111.17 189.18 Q1111.17 196.153 1106.83 200.031 Q1102.49 203.879 1094.59 203.879 Q1091.87 203.879 1089.03 203.416 Q1086.23 202.953 1083.22 202.027 L1083.22 196.153 Q1085.82 197.571 1088.6 198.266 Q1091.38 198.96 1094.47 198.96 Q1099.48 198.96 1102.4 196.327 Q1105.32 193.694 1105.32 189.18 Q1105.32 184.666 1102.4 182.033 Q1099.48 179.4 1094.47 179.4 Q1092.13 179.4 1089.78 179.921 Q1087.47 180.442 1085.04 181.541 L1085.04 159.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1123.29 195.691 L1129.4 195.691 L1129.4 200.667 L1124.65 209.927 L1120.92 209.927 L1123.29 200.667 L1123.29 195.691 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1165.39 198.121 L1185.79 198.121 L1185.79 203.04 L1158.36 203.04 L1158.36 198.121 Q1161.69 194.678 1167.42 188.891 Q1173.18 183.075 1174.65 181.397 Q1177.46 178.243 1178.56 176.073 Q1179.69 173.873 1179.69 171.761 Q1179.69 168.318 1177.25 166.148 Q1174.85 163.978 1170.98 163.978 Q1168.23 163.978 1165.16 164.933 Q1162.12 165.887 1158.65 167.826 L1158.65 161.923 Q1162.18 160.506 1165.25 159.782 Q1168.31 159.059 1170.86 159.059 Q1177.57 159.059 1181.57 162.415 Q1185.56 165.772 1185.56 171.385 Q1185.56 174.047 1184.55 176.449 Q1183.56 178.821 1180.93 182.062 Q1180.21 182.901 1176.33 186.923 Q1172.45 190.916 1165.39 198.121 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1198.06 195.691 L1204.16 195.691 L1204.16 203.04 L1198.06 203.04 L1198.06 195.691 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1234.6 179.747 Q1238.8 180.644 1241.14 183.48 Q1243.52 186.316 1243.52 190.482 Q1243.52 196.877 1239.12 200.378 Q1234.72 203.879 1226.62 203.879 Q1223.9 203.879 1221 203.329 Q1218.14 202.809 1215.07 201.738 L1215.07 196.096 Q1217.5 197.513 1220.4 198.237 Q1223.29 198.96 1226.44 198.96 Q1231.94 198.96 1234.81 196.79 Q1237.7 194.62 1237.7 190.482 Q1237.7 186.663 1235.01 184.522 Q1232.35 182.351 1227.57 182.351 L1222.54 182.351 L1222.54 177.548 L1227.8 177.548 Q1232.12 177.548 1234.4 175.841 Q1236.69 174.105 1236.69 170.864 Q1236.69 167.537 1234.31 165.772 Q1231.97 163.978 1227.57 163.978 Q1225.17 163.978 1222.42 164.499 Q1219.67 165.019 1216.38 166.119 L1216.38 160.911 Q1219.7 159.985 1222.6 159.522 Q1225.52 159.059 1228.09 159.059 Q1234.75 159.059 1238.63 162.097 Q1242.5 165.106 1242.5 170.257 Q1242.5 173.845 1240.45 176.333 Q1238.39 178.792 1234.6 179.747 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1255.61 198.121 L1265.16 198.121 L1265.16 165.164 L1254.77 167.247 L1254.77 161.923 L1265.1 159.84 L1270.95 159.84 L1270.95 198.121 L1280.5 198.121 L1280.5 203.04 L1255.61 203.04 L1255.61 198.121 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1319.27 185.505 L1319.27 188.11 L1294.79 188.11 Q1295.14 193.607 1298.09 196.501 Q1301.07 199.365 1306.36 199.365 Q1309.43 199.365 1312.29 198.613 Q1315.19 197.861 1318.02 196.356 L1318.02 201.391 Q1315.16 202.606 1312.15 203.243 Q1309.14 203.879 1306.04 203.879 Q1298.29 203.879 1293.75 199.365 Q1289.23 194.851 1289.23 187.155 Q1289.23 179.198 1293.52 174.539 Q1297.83 169.852 1305.12 169.852 Q1311.66 169.852 1315.45 174.076 Q1319.27 178.272 1319.27 185.505 M1313.94 183.943 Q1313.89 179.574 1311.48 176.97 Q1309.11 174.365 1305.18 174.365 Q1300.72 174.365 1298.03 176.883 Q1295.37 179.4 1294.96 183.972 L1313.94 183.943 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1325.32 184.435 L1340.91 184.435 L1340.91 189.18 L1325.32 189.18 L1325.32 184.435 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1362.64 163.688 Q1358.13 163.688 1355.84 168.144 Q1353.59 172.571 1353.59 181.483 Q1353.59 190.366 1355.84 194.822 Q1358.13 199.25 1362.64 199.25 Q1367.18 199.25 1369.44 194.822 Q1371.73 190.366 1371.73 181.483 Q1371.73 172.571 1369.44 168.144 Q1367.18 163.688 1362.64 163.688 M1362.64 159.059 Q1369.9 159.059 1373.72 164.817 Q1377.57 170.546 1377.57 181.483 Q1377.57 192.392 1373.72 198.15 Q1369.9 203.879 1362.64 203.879 Q1355.38 203.879 1351.53 198.15 Q1347.71 192.392 1347.71 181.483 Q1347.71 170.546 1351.53 164.817 Q1355.38 159.059 1362.64 159.059 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1387.9 159.84 L1410.85 159.84 L1410.85 164.759 L1393.25 164.759 L1393.25 175.349 Q1394.53 174.915 1395.8 174.713 Q1397.07 174.481 1398.35 174.481 Q1405.58 174.481 1409.81 178.445 Q1414.03 182.409 1414.03 189.18 Q1414.03 196.153 1409.69 200.031 Q1405.35 203.879 1397.45 203.879 Q1394.73 203.879 1391.9 203.416 Q1389.09 202.953 1386.08 202.027 L1386.08 196.153 Q1388.68 197.571 1391.46 198.266 Q1394.24 198.96 1397.33 198.96 Q1402.34 198.96 1405.26 196.327 Q1408.19 193.694 1408.19 189.18 Q1408.19 184.666 1405.26 182.033 Q1402.34 179.4 1397.33 179.4 Q1394.99 179.4 1392.65 179.921 Q1390.33 180.442 1387.9 181.541 L1387.9 159.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1423.96 158.075 L1428.58 158.075 Q1432.92 164.904 1435.07 171.443 Q1437.24 177.982 1437.24 184.435 Q1437.24 190.916 1435.07 197.484 Q1432.92 204.053 1428.58 210.852 L1423.96 210.852 Q1427.8 204.226 1429.68 197.687 Q1431.59 191.119 1431.59 184.435 Q1431.59 177.751 1429.68 171.24 Q1427.8 164.73 1423.96 158.075 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1449.27 172.398 L1455.38 172.398 L1455.38 179.747 L1449.27 179.747 L1449.27 172.398 M1449.27 195.691 L1455.38 195.691 L1455.38 200.667 L1450.63 209.927 L1446.9 209.927 L1449.27 200.667 L1449.27 195.691 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1519.3 163.168 L1519.3 169.331 Q1516.34 166.582 1512.99 165.222 Q1509.66 163.862 1505.9 163.862 Q1498.49 163.862 1494.56 168.405 Q1490.62 172.919 1490.62 181.483 Q1490.62 190.019 1494.56 194.562 Q1498.49 199.076 1505.9 199.076 Q1509.66 199.076 1512.99 197.716 Q1516.34 196.356 1519.3 193.607 L1519.3 199.712 Q1516.23 201.796 1512.79 202.837 Q1509.37 203.879 1505.55 203.879 Q1495.74 203.879 1490.1 197.89 Q1484.46 191.871 1484.46 181.483 Q1484.46 171.067 1490.1 165.077 Q1495.74 159.059 1505.55 159.059 Q1509.43 159.059 1512.84 160.1 Q1516.29 161.113 1519.3 163.168 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1552.72 212.878 L1552.72 217.016 L1521.93 217.016 L1521.93 212.878 L1552.72 212.878 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1563.51 198.121 L1583.91 198.121 L1583.91 203.04 L1556.48 203.04 L1556.48 198.121 Q1559.8 194.678 1565.53 188.891 Q1571.29 183.075 1572.77 181.397 Q1575.57 178.243 1576.67 176.073 Q1577.8 173.873 1577.8 171.761 Q1577.8 168.318 1575.37 166.148 Q1572.97 163.978 1569.09 163.978 Q1566.34 163.978 1563.28 164.933 Q1560.24 165.887 1556.77 167.826 L1556.77 161.923 Q1560.3 160.506 1563.36 159.782 Q1566.43 159.059 1568.98 159.059 Q1575.69 159.059 1579.68 162.415 Q1583.68 165.772 1583.68 171.385 Q1583.68 174.047 1582.66 176.449 Q1581.68 178.821 1579.05 182.062 Q1578.32 182.901 1574.45 186.923 Q1570.57 190.916 1563.51 198.121 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1596.12 176.13 L1633.21 176.13 L1633.21 180.992 L1596.12 180.992 L1596.12 176.13 M1596.12 187.936 L1633.21 187.936 L1633.21 192.855 L1596.12 192.855 L1596.12 187.936 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1646 202.143 L1646 196.819 Q1648.2 197.861 1650.46 198.41 Q1652.72 198.96 1654.89 198.96 Q1660.67 198.96 1663.71 195.083 Q1666.78 191.177 1667.21 183.248 Q1665.53 185.737 1662.96 187.068 Q1660.38 188.399 1657.26 188.399 Q1650.78 188.399 1646.99 184.493 Q1643.22 180.557 1643.22 173.758 Q1643.22 167.103 1647.16 163.081 Q1651.1 159.059 1657.63 159.059 Q1665.13 159.059 1669.06 164.817 Q1673.03 170.546 1673.03 181.483 Q1673.03 191.697 1668.17 197.803 Q1663.33 203.879 1655.15 203.879 Q1652.95 203.879 1650.69 203.445 Q1648.43 203.011 1646 202.143 M1657.63 183.827 Q1661.57 183.827 1663.86 181.136 Q1666.17 178.445 1666.17 173.758 Q1666.17 169.099 1663.86 166.408 Q1661.57 163.688 1657.63 163.688 Q1653.7 163.688 1651.38 166.408 Q1649.1 169.099 1649.1 173.758 Q1649.1 178.445 1651.38 181.136 Q1653.7 183.827 1657.63 183.827 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1683.53 195.691 L1689.64 195.691 L1689.64 203.04 L1683.53 203.04 L1683.53 195.691 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1702.43 159.84 L1725.37 159.84 L1725.37 164.759 L1707.78 164.759 L1707.78 175.349 Q1709.05 174.915 1710.33 174.713 Q1711.6 174.481 1712.87 174.481 Q1720.11 174.481 1724.33 178.445 Q1728.55 182.409 1728.55 189.18 Q1728.55 196.153 1724.21 200.031 Q1719.87 203.879 1711.97 203.879 Q1709.25 203.879 1706.42 203.416 Q1703.61 202.953 1700.6 202.027 L1700.6 196.153 Q1703.21 197.571 1705.98 198.266 Q1708.76 198.96 1711.86 198.96 Q1716.86 198.96 1719.79 196.327 Q1722.71 193.694 1722.71 189.18 Q1722.71 184.666 1719.79 182.033 Q1716.86 179.4 1711.86 179.4 Q1709.51 179.4 1707.17 179.921 Q1704.86 180.442 1702.43 181.541 L1702.43 159.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1753.29 179.111 Q1749.36 179.111 1747.04 181.802 Q1744.76 184.493 1744.76 189.18 Q1744.76 193.839 1747.04 196.559 Q1749.36 199.25 1753.29 199.25 Q1757.23 199.25 1759.51 196.559 Q1761.83 193.839 1761.83 189.18 Q1761.83 184.493 1759.51 181.802 Q1757.23 179.111 1753.29 179.111 M1764.9 160.795 L1764.9 166.119 Q1762.7 165.077 1760.44 164.527 Q1758.21 163.978 1756.01 163.978 Q1750.23 163.978 1747.16 167.884 Q1744.12 171.79 1743.69 179.689 Q1745.39 177.172 1747.97 175.841 Q1750.54 174.481 1753.64 174.481 Q1760.15 174.481 1763.91 178.445 Q1767.7 182.38 1767.7 189.18 Q1767.7 195.835 1763.77 199.857 Q1759.83 203.879 1753.29 203.879 Q1745.8 203.879 1741.84 198.15 Q1737.87 192.392 1737.87 181.483 Q1737.87 171.24 1742.73 165.164 Q1747.59 159.059 1755.78 159.059 Q1757.98 159.059 1760.21 159.493 Q1762.47 159.927 1764.9 160.795 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1804.74 185.505 L1804.74 188.11 L1780.26 188.11 Q1780.61 193.607 1783.56 196.501 Q1786.54 199.365 1791.83 199.365 Q1794.9 199.365 1797.77 198.613 Q1800.66 197.861 1803.5 196.356 L1803.5 201.391 Q1800.63 202.606 1797.62 203.243 Q1794.61 203.879 1791.52 203.879 Q1783.76 203.879 1779.22 199.365 Q1774.71 194.851 1774.71 187.155 Q1774.71 179.198 1778.99 174.539 Q1783.3 169.852 1790.59 169.852 Q1797.13 169.852 1800.92 174.076 Q1804.74 178.272 1804.74 185.505 M1799.42 183.943 Q1799.36 179.574 1796.96 176.97 Q1794.58 174.365 1790.65 174.365 Q1786.19 174.365 1783.5 176.883 Q1780.84 179.4 1780.43 183.972 L1799.42 183.943 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1810.79 184.435 L1826.38 184.435 L1826.38 189.18 L1810.79 189.18 L1810.79 184.435 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1848.11 163.688 Q1843.6 163.688 1841.31 168.144 Q1839.06 172.571 1839.06 181.483 Q1839.06 190.366 1841.31 194.822 Q1843.6 199.25 1848.11 199.25 Q1852.66 199.25 1854.91 194.822 Q1857.2 190.366 1857.2 181.483 Q1857.2 172.571 1854.91 168.144 Q1852.66 163.688 1848.11 163.688 M1848.11 159.059 Q1855.38 159.059 1859.2 164.817 Q1863.04 170.546 1863.04 181.483 Q1863.04 192.392 1859.2 198.15 Q1855.38 203.879 1848.11 203.879 Q1840.85 203.879 1837 198.15 Q1833.18 192.392 1833.18 181.483 Q1833.18 170.546 1837 164.817 Q1840.85 159.059 1848.11 159.059 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1871.84 159.84 L1899.62 159.84 L1899.62 162.328 L1883.94 203.04 L1877.83 203.04 L1892.59 164.759 L1871.84 164.759 L1871.84 159.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip302)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"280.231,1388.35 300.353,1371.06 320.474,1353.77 340.596,1336.48 360.717,1319.19 380.839,1301.9 400.961,1284.61 421.082,1267.52 441.204,1250.5 461.325,1233.48 481.447,1216.45 501.569,1199.43 521.69,1182.41 541.812,1165.53 561.933,1148.81 582.055,1132.09 602.177,1115.37 622.298,1098.65 642.42,1081.92 662.541,1065.29 682.663,1048.93 702.785,1032.57 722.906,1016.21 743.028,999.851 763.149,983.49 783.271,967.129 803.393,951.207 823.514,935.284 843.636,919.361 863.757,903.438 883.879,887.515 904.001,871.592 924.122,856.065 944.244,840.669 964.365,825.274 984.487,809.878 1004.61,794.483 1024.73,779.087 1044.85,764.014 1064.97,749.263 1085.1,734.512 1105.22,719.762 1125.34,705.011 1145.46,690.26 1165.58,675.704 1185.7,661.733 1205.82,647.761 1225.95,633.79 1246.07,619.819 1266.19,605.848 1286.31,591.876 1306.43,578.88 1326.55,565.884 1346.68,552.888 1366.8,539.891 1386.92,526.895 1407.04,513.899 1427.16,501.786 1447.28,489.968 1467.41,478.15 1487.53,466.332 1507.65,454.514 1527.77,442.697 1547.89,431.609 1568.01,421.252 1588.14,410.894 1608.26,400.537 1628.38,390.179 1648.5,379.822 1668.62,369.904 1688.74,361.305 1708.86,352.705 1728.99,344.106 1749.11,335.506 1769.23,326.907 1789.35,318.308 1809.47,311.796 1829.59,305.285 1849.72,298.774 1869.84,292.263 1889.96,285.752 1910.08,279.241 1930.2,274.512 1950.32,270.376 1970.45,266.241 1990.57,262.105 2010.69,257.969 2030.81,253.833 2050.93,250.776 2071.05,248.796 2091.18,246.817 2111.3,244.837 2131.42,242.858 2151.54,240.878 2171.66,239.306 2191.78,238.955 2211.9,238.604 2232.03,238.252 2252.15,237.901 2272.27,237.55 2292.39,237.199 \"/>\n<circle clip-path=\"url(#clip302)\" cx=\"280.231\" cy=\"1388.35\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip302)\" cx=\"405.991\" cy=\"1280.29\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip302)\" cx=\"531.751\" cy=\"1173.9\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip302)\" cx=\"657.511\" cy=\"1069.38\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip302)\" cx=\"783.271\" cy=\"967.129\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip302)\" cx=\"909.031\" cy=\"867.611\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip302)\" cx=\"1034.79\" cy=\"771.39\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip302)\" cx=\"1160.55\" cy=\"679.197\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip302)\" cx=\"1286.31\" cy=\"591.876\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip302)\" cx=\"1412.07\" cy=\"510.65\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip302)\" cx=\"1537.83\" cy=\"436.788\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip302)\" cx=\"1663.59\" cy=\"372.054\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip302)\" cx=\"1789.35\" cy=\"318.308\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip302)\" cx=\"1915.11\" cy=\"277.614\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip302)\" cx=\"2040.87\" cy=\"251.766\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip302)\" cx=\"2166.63\" cy=\"239.394\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip302)\" cx=\"2292.39\" cy=\"237.199\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<polyline clip-path=\"url(#clip302)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"280.231,1388.35 300.353,1371.06 320.474,1353.77 340.596,1336.48 360.717,1319.19 380.839,1301.9 400.961,1284.61 421.082,1267.52 441.204,1250.5 461.325,1233.48 481.447,1216.45 501.569,1199.43 521.69,1182.41 541.812,1165.53 561.933,1148.81 582.055,1132.09 602.177,1115.37 622.298,1098.65 642.42,1081.92 662.541,1065.29 682.663,1048.94 702.785,1032.58 722.906,1016.22 743.028,999.863 763.149,983.505 783.271,967.148 803.393,951.224 823.514,935.301 843.636,919.377 863.757,903.454 883.879,887.53 904.001,871.606 924.122,856.079 944.244,840.683 964.365,825.287 984.487,809.891 1004.61,794.495 1024.73,779.099 1044.85,764.025 1064.97,749.274 1085.1,734.523 1105.22,719.772 1125.34,705.021 1145.46,690.27 1165.58,675.713 1185.7,661.742 1205.82,647.77 1225.95,633.799 1246.07,619.827 1266.19,605.856 1286.31,591.885 1306.43,578.888 1326.55,565.891 1346.68,552.894 1366.8,539.897 1386.92,526.9 1407.04,513.903 1427.16,501.79 1447.28,489.971 1467.41,478.153 1487.53,466.334 1507.65,454.516 1527.77,442.698 1547.89,431.61 1568.01,421.252 1588.14,410.895 1608.26,400.537 1628.38,390.18 1648.5,379.822 1668.62,369.904 1688.74,361.305 1708.86,352.705 1728.99,344.106 1749.11,335.506 1769.23,326.907 1789.35,318.308 1809.47,311.796 1829.59,305.285 1849.72,298.774 1869.84,292.263 1889.96,285.752 1910.08,279.241 1930.2,274.512 1950.32,270.376 1970.45,266.241 1990.57,262.105 2010.69,257.969 2030.81,253.833 2050.93,250.776 2071.05,248.796 2091.18,246.817 2111.3,244.837 2131.42,242.858 2151.54,240.878 2171.66,239.306 2191.78,238.955 2211.9,238.604 2232.03,238.252 2252.15,237.901 2272.27,237.55 2292.39,237.199 \"/>\n<circle clip-path=\"url(#clip302)\" cx=\"280.231\" cy=\"1388.35\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip302)\" cx=\"405.991\" cy=\"1280.29\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip302)\" cx=\"531.751\" cy=\"1173.9\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip302)\" cx=\"657.511\" cy=\"1069.38\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip302)\" cx=\"783.271\" cy=\"967.148\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip302)\" cx=\"909.031\" cy=\"867.626\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip302)\" cx=\"1034.79\" cy=\"771.401\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip302)\" cx=\"1160.55\" cy=\"679.206\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip302)\" cx=\"1286.31\" cy=\"591.885\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip302)\" cx=\"1412.07\" cy=\"510.653\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip302)\" cx=\"1537.83\" cy=\"436.788\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip302)\" cx=\"1663.59\" cy=\"372.054\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip302)\" cx=\"1789.35\" cy=\"318.308\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip302)\" cx=\"1915.11\" cy=\"277.614\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip302)\" cx=\"2040.87\" cy=\"251.766\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip302)\" cx=\"2166.63\" cy=\"239.394\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip302)\" cx=\"2292.39\" cy=\"237.199\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<polyline clip-path=\"url(#clip302)\" style=\"stroke:#ac8d18; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"280.231,1388.35 300.353,1370.96 320.474,1353.59 340.596,1336.27 360.717,1318.98 380.839,1301.74 400.961,1284.53 421.082,1267.36 441.204,1250.23 461.325,1233.15 481.447,1216.11 501.569,1199.12 521.69,1182.17 541.812,1165.27 561.933,1148.42 582.055,1131.61 602.177,1114.86 622.298,1098.17 642.42,1081.53 662.541,1064.94 682.663,1048.41 702.785,1031.94 722.906,1015.53 743.028,999.188 763.149,982.907 783.271,966.693 803.393,950.547 823.514,934.472 843.636,918.469 863.757,902.542 883.879,886.691 904.001,870.92 924.122,855.231 944.244,839.626 964.365,824.108 984.487,808.68 1004.61,793.344 1024.73,778.104 1044.85,762.962 1064.97,747.922 1085.1,732.987 1105.22,718.16 1125.34,703.445 1145.46,688.845 1165.58,674.365 1185.7,660.007 1205.82,645.776 1225.95,631.677 1246.07,617.713 1266.19,603.89 1286.31,590.211 1306.43,576.682 1326.55,563.308 1346.68,550.093 1366.8,537.044 1386.92,524.166 1407.04,511.464 1427.16,498.945 1447.28,486.615 1467.41,474.479 1487.53,462.546 1507.65,450.82 1527.77,439.31 1547.89,428.023 1568.01,416.965 1588.14,406.145 1608.26,395.57 1628.38,385.249 1648.5,375.188 1668.62,365.397 1688.74,355.884 1708.86,346.657 1728.99,337.725 1749.11,329.096 1769.23,320.779 1789.35,312.783 1809.47,305.115 1829.59,297.785 1849.72,290.8 1869.84,284.168 1889.96,277.895 1910.08,271.99 1930.2,266.457 1950.32,261.302 1970.45,256.529 1990.57,252.14 2010.69,248.138 2030.81,244.522 2050.93,241.29 2071.05,238.437 2091.18,235.956 2111.3,233.838 2131.42,232.07 2151.54,230.633 2171.66,229.507 2191.78,228.666 2211.9,228.078 2232.03,227.706 2252.15,227.507 2272.27,227.431 2292.39,227.42 \"/>\n<path clip-path=\"url(#clip300)\" d=\"M290.963 544.652 L711.172 544.652 L711.172 233.612 L290.963 233.612  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip300)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"290.963,544.652 711.172,544.652 711.172,233.612 290.963,233.612 290.963,544.652 \"/>\n<polyline clip-path=\"url(#clip300)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"314.661,285.452 456.854,285.452 \"/>\n<path clip-path=\"url(#clip300)\" d=\"M508.423 270.834 L508.423 275.764 Q506.062 273.565 503.377 272.477 Q500.715 271.389 497.705 271.389 Q491.78 271.389 488.631 275.024 Q485.483 278.635 485.483 285.486 Q485.483 292.315 488.631 295.949 Q491.78 299.56 497.705 299.56 Q500.715 299.56 503.377 298.472 Q506.062 297.385 508.423 295.185 L508.423 300.07 Q505.969 301.736 503.215 302.57 Q500.483 303.403 497.428 303.403 Q489.581 303.403 485.067 298.611 Q480.553 293.797 480.553 285.486 Q480.553 277.153 485.067 272.362 Q489.581 267.547 497.428 267.547 Q500.53 267.547 503.261 268.38 Q506.016 269.19 508.423 270.834 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M536.363 269.306 L536.363 273.866 Q533.701 272.593 531.34 271.968 Q528.978 271.343 526.779 271.343 Q522.96 271.343 520.877 272.824 Q518.816 274.306 518.816 277.037 Q518.816 279.329 520.182 280.51 Q521.571 281.667 525.414 282.385 L528.238 282.963 Q533.469 283.959 535.946 286.482 Q538.446 288.982 538.446 293.195 Q538.446 298.218 535.066 300.81 Q531.71 303.403 525.205 303.403 Q522.752 303.403 519.974 302.847 Q517.219 302.292 514.256 301.204 L514.256 296.389 Q517.104 297.986 519.835 298.797 Q522.566 299.607 525.205 299.607 Q529.21 299.607 531.386 298.033 Q533.562 296.459 533.562 293.542 Q533.562 290.996 531.988 289.56 Q530.437 288.125 526.872 287.408 L524.025 286.852 Q518.793 285.811 516.455 283.588 Q514.117 281.366 514.117 277.408 Q514.117 272.824 517.335 270.186 Q520.576 267.547 526.247 267.547 Q528.678 267.547 531.201 267.987 Q533.724 268.426 536.363 269.306 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M545.738 268.172 L567.589 268.172 L567.589 272.107 L550.414 272.107 L550.414 282.338 L566.872 282.338 L566.872 286.273 L550.414 286.273 L550.414 298.797 L568.006 298.797 L568.006 302.732 L545.738 302.732 L545.738 268.172 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M600.807 266.76 Q597.705 272.084 596.2 277.292 Q594.696 282.5 594.696 287.848 Q594.696 293.195 596.2 298.449 Q597.728 303.681 600.807 308.982 L597.103 308.982 Q593.631 303.542 591.895 298.287 Q590.182 293.033 590.182 287.848 Q590.182 282.686 591.895 277.454 Q593.608 272.223 597.103 266.76 L600.807 266.76 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M610.483 298.797 L618.121 298.797 L618.121 272.431 L609.811 274.098 L609.811 269.838 L618.075 268.172 L622.751 268.172 L622.751 298.797 L630.39 298.797 L630.39 302.732 L610.483 302.732 L610.483 298.797 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M638.561 266.76 L642.265 266.76 Q645.737 272.223 647.45 277.454 Q649.186 282.686 649.186 287.848 Q649.186 293.033 647.45 298.287 Q645.737 303.542 642.265 308.982 L638.561 308.982 Q641.64 303.681 643.144 298.449 Q644.672 293.195 644.672 287.848 Q644.672 282.5 643.144 277.292 Q641.64 272.084 638.561 266.76 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><circle clip-path=\"url(#clip300)\" cx=\"385.758\" cy=\"337.292\" r=\"20.48\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"4.55111\"/>\n<path clip-path=\"url(#clip300)\" d=\"M480.553 320.012 L485.229 320.012 L485.229 334.618 L500.738 320.012 L506.756 320.012 L489.604 336.123 L507.983 354.572 L501.826 354.572 L485.229 337.928 L485.229 354.572 L480.553 354.572 L480.553 320.012 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M533.006 338.924 L533.006 354.572 L528.747 354.572 L528.747 339.063 Q528.747 335.382 527.312 333.553 Q525.877 331.725 523.006 331.725 Q519.557 331.725 517.566 333.924 Q515.576 336.123 515.576 339.919 L515.576 354.572 L511.293 354.572 L511.293 328.646 L515.576 328.646 L515.576 332.674 Q517.104 330.336 519.164 329.178 Q521.247 328.021 523.955 328.021 Q528.423 328.021 530.715 330.799 Q533.006 333.553 533.006 338.924 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M551.548 331.632 Q548.122 331.632 546.131 334.317 Q544.14 336.979 544.14 341.632 Q544.14 346.285 546.108 348.97 Q548.099 351.632 551.548 351.632 Q554.951 351.632 556.941 348.947 Q558.932 346.262 558.932 341.632 Q558.932 337.026 556.941 334.34 Q554.951 331.632 551.548 331.632 M551.548 328.021 Q557.103 328.021 560.275 331.632 Q563.446 335.243 563.446 341.632 Q563.446 347.998 560.275 351.632 Q557.103 355.243 551.548 355.243 Q545.969 355.243 542.798 351.632 Q539.65 347.998 539.65 341.632 Q539.65 335.243 542.798 331.632 Q545.969 328.021 551.548 328.021 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M574.719 321.285 L574.719 328.646 L583.492 328.646 L583.492 331.956 L574.719 331.956 L574.719 346.03 Q574.719 349.201 575.575 350.104 Q576.455 351.007 579.117 351.007 L583.492 351.007 L583.492 354.572 L579.117 354.572 Q574.187 354.572 572.312 352.743 Q570.437 350.891 570.437 346.03 L570.437 331.956 L567.312 331.956 L567.312 328.646 L570.437 328.646 L570.437 321.285 L574.719 321.285 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M605.622 329.41 L605.622 333.438 Q603.816 332.512 601.872 332.049 Q599.927 331.586 597.844 331.586 Q594.673 331.586 593.075 332.558 Q591.501 333.53 591.501 335.475 Q591.501 336.956 592.636 337.813 Q593.77 338.646 597.196 339.41 L598.654 339.734 Q603.191 340.706 605.089 342.488 Q607.01 344.248 607.01 347.419 Q607.01 351.03 604.14 353.137 Q601.293 355.243 596.293 355.243 Q594.21 355.243 591.941 354.826 Q589.696 354.433 587.196 353.623 L587.196 349.225 Q589.557 350.451 591.848 351.076 Q594.14 351.678 596.385 351.678 Q599.395 351.678 601.015 350.66 Q602.635 349.618 602.635 347.743 Q602.635 346.007 601.455 345.081 Q600.298 344.155 596.339 343.299 L594.858 342.951 Q590.899 342.118 589.14 340.405 Q587.381 338.669 587.381 335.66 Q587.381 332.002 589.973 330.012 Q592.566 328.021 597.335 328.021 Q599.696 328.021 601.779 328.368 Q603.862 328.715 605.622 329.41 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M639.094 318.6 Q635.992 323.924 634.487 329.132 Q632.983 334.34 632.983 339.688 Q632.983 345.035 634.487 350.289 Q636.015 355.521 639.094 360.822 L635.39 360.822 Q631.918 355.382 630.182 350.127 Q628.469 344.873 628.469 339.688 Q628.469 334.526 630.182 329.294 Q631.895 324.063 635.39 318.6 L639.094 318.6 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M648.769 350.637 L656.408 350.637 L656.408 324.271 L648.098 325.938 L648.098 321.678 L656.362 320.012 L661.038 320.012 L661.038 350.637 L668.677 350.637 L668.677 354.572 L648.769 354.572 L648.769 350.637 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M676.848 318.6 L680.552 318.6 Q684.024 324.063 685.737 329.294 Q687.473 334.526 687.473 339.688 Q687.473 344.873 685.737 350.127 Q684.024 355.382 680.552 360.822 L676.848 360.822 Q679.927 355.521 681.431 350.289 Q682.959 345.035 682.959 339.688 Q682.959 334.34 681.431 329.132 Q679.927 323.924 676.848 318.6 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip300)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"314.661,389.132 456.854,389.132 \"/>\n<path clip-path=\"url(#clip300)\" d=\"M508.423 374.514 L508.423 379.444 Q506.062 377.245 503.377 376.157 Q500.715 375.069 497.705 375.069 Q491.78 375.069 488.631 378.704 Q485.483 382.315 485.483 389.166 Q485.483 395.995 488.631 399.629 Q491.78 403.24 497.705 403.24 Q500.715 403.24 503.377 402.152 Q506.062 401.065 508.423 398.865 L508.423 403.75 Q505.969 405.416 503.215 406.25 Q500.483 407.083 497.428 407.083 Q489.581 407.083 485.067 402.291 Q480.553 397.477 480.553 389.166 Q480.553 380.833 485.067 376.042 Q489.581 371.227 497.428 371.227 Q500.53 371.227 503.261 372.06 Q506.016 372.87 508.423 374.514 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M536.363 372.986 L536.363 377.546 Q533.701 376.273 531.34 375.648 Q528.978 375.023 526.779 375.023 Q522.96 375.023 520.877 376.504 Q518.816 377.986 518.816 380.717 Q518.816 383.009 520.182 384.19 Q521.571 385.347 525.414 386.065 L528.238 386.643 Q533.469 387.639 535.946 390.162 Q538.446 392.662 538.446 396.875 Q538.446 401.898 535.066 404.49 Q531.71 407.083 525.205 407.083 Q522.752 407.083 519.974 406.527 Q517.219 405.972 514.256 404.884 L514.256 400.069 Q517.104 401.666 519.835 402.477 Q522.566 403.287 525.205 403.287 Q529.21 403.287 531.386 401.713 Q533.562 400.139 533.562 397.222 Q533.562 394.676 531.988 393.24 Q530.437 391.805 526.872 391.088 L524.025 390.532 Q518.793 389.491 516.455 387.268 Q514.117 385.046 514.117 381.088 Q514.117 376.504 517.335 373.866 Q520.576 371.227 526.247 371.227 Q528.678 371.227 531.201 371.667 Q533.724 372.106 536.363 372.986 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M545.738 371.852 L567.589 371.852 L567.589 375.787 L550.414 375.787 L550.414 386.018 L566.872 386.018 L566.872 389.953 L550.414 389.953 L550.414 402.477 L568.006 402.477 L568.006 406.412 L545.738 406.412 L545.738 371.852 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M600.807 370.44 Q597.705 375.764 596.2 380.972 Q594.696 386.18 594.696 391.528 Q594.696 396.875 596.2 402.129 Q597.728 407.361 600.807 412.662 L597.103 412.662 Q593.631 407.222 591.895 401.967 Q590.182 396.713 590.182 391.528 Q590.182 386.366 591.895 381.134 Q593.608 375.903 597.103 370.44 L600.807 370.44 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M613.7 402.477 L630.02 402.477 L630.02 406.412 L608.075 406.412 L608.075 402.477 Q610.737 399.722 615.321 395.092 Q619.927 390.44 621.108 389.097 Q623.353 386.574 624.233 384.838 Q625.135 383.079 625.135 381.389 Q625.135 378.634 623.191 376.898 Q621.27 375.162 618.168 375.162 Q615.969 375.162 613.515 375.926 Q611.084 376.69 608.307 378.241 L608.307 373.518 Q611.131 372.384 613.584 371.805 Q616.038 371.227 618.075 371.227 Q623.446 371.227 626.64 373.912 Q629.834 376.597 629.834 381.088 Q629.834 383.217 629.024 385.139 Q628.237 387.037 626.131 389.629 Q625.552 390.301 622.45 393.518 Q619.348 396.713 613.7 402.477 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M638.561 370.44 L642.265 370.44 Q645.737 375.903 647.45 381.134 Q649.186 386.366 649.186 391.528 Q649.186 396.713 647.45 401.967 Q645.737 407.222 642.265 412.662 L638.561 412.662 Q641.64 407.361 643.144 402.129 Q644.672 396.875 644.672 391.528 Q644.672 386.18 643.144 380.972 Q641.64 375.764 638.561 370.44 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><circle clip-path=\"url(#clip300)\" cx=\"385.758\" cy=\"440.972\" r=\"20.48\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"4.55111\"/>\n<path clip-path=\"url(#clip300)\" d=\"M480.553 423.692 L485.229 423.692 L485.229 438.298 L500.738 423.692 L506.756 423.692 L489.604 439.803 L507.983 458.252 L501.826 458.252 L485.229 441.608 L485.229 458.252 L480.553 458.252 L480.553 423.692 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M533.006 442.604 L533.006 458.252 L528.747 458.252 L528.747 442.743 Q528.747 439.062 527.312 437.233 Q525.877 435.405 523.006 435.405 Q519.557 435.405 517.566 437.604 Q515.576 439.803 515.576 443.599 L515.576 458.252 L511.293 458.252 L511.293 432.326 L515.576 432.326 L515.576 436.354 Q517.104 434.016 519.164 432.858 Q521.247 431.701 523.955 431.701 Q528.423 431.701 530.715 434.479 Q533.006 437.233 533.006 442.604 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M551.548 435.312 Q548.122 435.312 546.131 437.997 Q544.14 440.659 544.14 445.312 Q544.14 449.965 546.108 452.65 Q548.099 455.312 551.548 455.312 Q554.951 455.312 556.941 452.627 Q558.932 449.942 558.932 445.312 Q558.932 440.706 556.941 438.02 Q554.951 435.312 551.548 435.312 M551.548 431.701 Q557.103 431.701 560.275 435.312 Q563.446 438.923 563.446 445.312 Q563.446 451.678 560.275 455.312 Q557.103 458.923 551.548 458.923 Q545.969 458.923 542.798 455.312 Q539.65 451.678 539.65 445.312 Q539.65 438.923 542.798 435.312 Q545.969 431.701 551.548 431.701 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M574.719 424.965 L574.719 432.326 L583.492 432.326 L583.492 435.636 L574.719 435.636 L574.719 449.71 Q574.719 452.881 575.575 453.784 Q576.455 454.687 579.117 454.687 L583.492 454.687 L583.492 458.252 L579.117 458.252 Q574.187 458.252 572.312 456.423 Q570.437 454.571 570.437 449.71 L570.437 435.636 L567.312 435.636 L567.312 432.326 L570.437 432.326 L570.437 424.965 L574.719 424.965 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M605.622 433.09 L605.622 437.118 Q603.816 436.192 601.872 435.729 Q599.927 435.266 597.844 435.266 Q594.673 435.266 593.075 436.238 Q591.501 437.21 591.501 439.155 Q591.501 440.636 592.636 441.493 Q593.77 442.326 597.196 443.09 L598.654 443.414 Q603.191 444.386 605.089 446.168 Q607.01 447.928 607.01 451.099 Q607.01 454.71 604.14 456.817 Q601.293 458.923 596.293 458.923 Q594.21 458.923 591.941 458.506 Q589.696 458.113 587.196 457.303 L587.196 452.905 Q589.557 454.131 591.848 454.756 Q594.14 455.358 596.385 455.358 Q599.395 455.358 601.015 454.34 Q602.635 453.298 602.635 451.423 Q602.635 449.687 601.455 448.761 Q600.298 447.835 596.339 446.979 L594.858 446.631 Q590.899 445.798 589.14 444.085 Q587.381 442.349 587.381 439.34 Q587.381 435.682 589.973 433.692 Q592.566 431.701 597.335 431.701 Q599.696 431.701 601.779 432.048 Q603.862 432.395 605.622 433.09 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M639.094 422.28 Q635.992 427.604 634.487 432.812 Q632.983 438.02 632.983 443.368 Q632.983 448.715 634.487 453.969 Q636.015 459.201 639.094 464.502 L635.39 464.502 Q631.918 459.062 630.182 453.807 Q628.469 448.553 628.469 443.368 Q628.469 438.206 630.182 432.974 Q631.895 427.743 635.39 422.28 L639.094 422.28 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M651.987 454.317 L668.306 454.317 L668.306 458.252 L646.362 458.252 L646.362 454.317 Q649.024 451.562 653.607 446.932 Q658.214 442.28 659.394 440.937 Q661.64 438.414 662.519 436.678 Q663.422 434.919 663.422 433.229 Q663.422 430.474 661.478 428.738 Q659.556 427.002 656.455 427.002 Q654.256 427.002 651.802 427.766 Q649.371 428.53 646.594 430.081 L646.594 425.358 Q649.418 424.224 651.871 423.645 Q654.325 423.067 656.362 423.067 Q661.732 423.067 664.927 425.752 Q668.121 428.437 668.121 432.928 Q668.121 435.057 667.311 436.979 Q666.524 438.877 664.418 441.469 Q663.839 442.141 660.737 445.358 Q657.635 448.553 651.987 454.317 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M676.848 422.28 L680.552 422.28 Q684.024 427.743 685.737 432.974 Q687.473 438.206 687.473 443.368 Q687.473 448.553 685.737 453.807 Q684.024 459.062 680.552 464.502 L676.848 464.502 Q679.927 459.201 681.431 453.969 Q682.959 448.715 682.959 443.368 Q682.959 438.02 681.431 432.812 Q679.927 427.604 676.848 422.28 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip300)\" style=\"stroke:#ac8d18; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"314.661,492.812 456.854,492.812 \"/>\n<path clip-path=\"url(#clip300)\" d=\"M485.229 493.587 L485.229 506.249 L492.729 506.249 Q496.502 506.249 498.307 504.698 Q500.136 503.124 500.136 499.907 Q500.136 496.666 498.307 495.138 Q496.502 493.587 492.729 493.587 L485.229 493.587 M485.229 479.374 L485.229 489.791 L492.15 489.791 Q495.576 489.791 497.243 488.518 Q498.932 487.221 498.932 484.583 Q498.932 481.967 497.243 480.671 Q495.576 479.374 492.15 479.374 L485.229 479.374 M480.553 475.532 L492.497 475.532 Q497.844 475.532 500.738 477.754 Q503.631 479.976 503.631 484.073 Q503.631 487.245 502.15 489.12 Q500.668 490.995 497.798 491.458 Q501.247 492.198 503.145 494.559 Q505.067 496.897 505.067 500.416 Q505.067 505.045 501.918 507.569 Q498.77 510.092 492.96 510.092 L480.553 510.092 L480.553 475.532 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M513.076 475.532 L519.372 475.532 L534.696 504.444 L534.696 475.532 L539.233 475.532 L539.233 510.092 L532.937 510.092 L517.613 481.18 L517.613 510.092 L513.076 510.092 L513.076 475.532 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M548.539 475.532 L570.39 475.532 L570.39 479.467 L553.214 479.467 L553.214 489.698 L569.673 489.698 L569.673 493.633 L553.214 493.633 L553.214 506.157 L570.807 506.157 L570.807 510.092 L548.539 510.092 L548.539 475.532 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /></svg>\n","category":"page"},{"location":"generated/afr-progs-asym-sym-np2-hyper/","page":"Hyperparameter optimisation for initial conditions","title":"Hyperparameter optimisation for initial conditions","text":"","category":"page"},{"location":"generated/afr-progs-asym-sym-np2-hyper/","page":"Hyperparameter optimisation for initial conditions","title":"Hyperparameter optimisation for initial conditions","text":"This page was generated using Literate.jl.","category":"page"},{"location":"generated/afr-progs-sym/#Symmetric-CSE-example-piecewise-linear-form","page":"Symmetric CSE - piecewise linear","title":"Symmetric CSE example - piecewise linear form","text":"","category":"section"},{"location":"generated/afr-progs-sym/","page":"Symmetric CSE - piecewise linear","title":"Symmetric CSE - piecewise linear","text":"This is a simple example of how to run the symmetric CSE case from the supporting material to the paper by Armantier et al. [1].","category":"page"},{"location":"generated/afr-progs-sym/#Install-dependencies","page":"Symmetric CSE - piecewise linear","title":"Install dependencies","text":"","category":"section"},{"location":"generated/afr-progs-sym/","page":"Symmetric CSE - piecewise linear","title":"Symmetric CSE - piecewise linear","text":"Make sure the required packages are installed by running the following from the root directory of this repo:","category":"page"},{"location":"generated/afr-progs-sym/","page":"Symmetric CSE - piecewise linear","title":"Symmetric CSE - piecewise linear","text":"using Pkg\nPkg.instantiate()","category":"page"},{"location":"generated/afr-progs-sym/#Load-required-modules","page":"Symmetric CSE - piecewise linear","title":"Load required modules","text":"","category":"section"},{"location":"generated/afr-progs-sym/","page":"Symmetric CSE - piecewise linear","title":"Symmetric CSE - piecewise linear","text":"using ConstrainedStrategicEquilibrium\nusing Plots\nusing Distributions","category":"page"},{"location":"generated/afr-progs-sym/#Create-the-symmetric-CSE-problem","page":"Symmetric CSE - piecewise linear","title":"Create the symmetric CSE problem","text":"","category":"section"},{"location":"generated/afr-progs-sym/","page":"Symmetric CSE - piecewise linear","title":"Symmetric CSE - piecewise linear","text":"Create the default symmetric CSE problem with the following:","category":"page"},{"location":"generated/afr-progs-sym/","page":"Symmetric CSE - piecewise linear","title":"Symmetric CSE - piecewise linear","text":"cse_prob = SymmetricAfrprogsCSEProblem()","category":"page"},{"location":"generated/afr-progs-sym/","page":"Symmetric CSE - piecewise linear","title":"Symmetric CSE - piecewise linear","text":"SymmetricAfrprogsCSEProblem(np=2, mc=10000, n=2..16, Beta(α=3.0, β=3.0))","category":"page"},{"location":"generated/afr-progs-sym/#Compute-the-CSE","page":"Symmetric CSE - piecewise linear","title":"Compute the CSE","text":"","category":"section"},{"location":"generated/afr-progs-sym/","page":"Symmetric CSE - piecewise linear","title":"Symmetric CSE - piecewise linear","text":"Now compute the CSE for the problem we created","category":"page"},{"location":"generated/afr-progs-sym/","page":"Symmetric CSE - piecewise linear","title":"Symmetric CSE - piecewise linear","text":"solutions = compute_cse(cse_prob)","category":"page"},{"location":"generated/afr-progs-sym/","page":"Symmetric CSE - piecewise linear","title":"Symmetric CSE - piecewise linear","text":"8-element Vector{ConstrainedStrategicEquilibrium.SymmetricCSESolution}:\n SymmetricCSESolution(n=02, MSE=3.93e-04, C_1=NaN, C_2=4.06e-17)\n SymmetricCSESolution(n=04, MSE=5.55e-05, C_1=1.45e-03, C_2=3.34e-17)\n SymmetricCSESolution(n=06, MSE=2.96e-05, C_1=3.69e-04, C_2=2.07e-16)\n SymmetricCSESolution(n=08, MSE=3.11e-05, C_1=1.04e-04, C_2=3.88e-17)\n SymmetricCSESolution(n=10, MSE=1.26e-05, C_1=2.30e-04, C_2=2.00e-13)\n SymmetricCSESolution(n=12, MSE=1.36e-05, C_1=4.99e-05, C_2=6.13e-15)\n SymmetricCSESolution(n=14, MSE=3.87e-06, C_1=2.16e-04, C_2=3.67e-15)\n SymmetricCSESolution(n=16, MSE=4.37e-06, C_1=3.81e-05, C_2=1.32e-15)","category":"page"},{"location":"generated/afr-progs-sym/#Postprocessing","page":"Symmetric CSE - piecewise linear","title":"Postprocessing","text":"","category":"section"},{"location":"generated/afr-progs-sym/","page":"Symmetric CSE - piecewise linear","title":"Symmetric CSE - piecewise linear","text":"Plot the final successful solution, comparing the computed CSE to the \"analytical\" Bayes-Nash Equilibrium and save the figure to a file.","category":"page"},{"location":"generated/afr-progs-sym/","page":"Symmetric CSE - piecewise linear","title":"Symmetric CSE - piecewise linear","text":"for sol in Iterators.reverse(solutions)\n    if sol.success\n        cseplot(sol; dpi=300)\n        savefig(\"afr-progs-sym.png\")\n        break\n    end\nend","category":"page"},{"location":"generated/afr-progs-sym/","page":"Symmetric CSE - piecewise linear","title":"Symmetric CSE - piecewise linear","text":"View the plot showing the CSE and BNE: (Image: afr-progs-sym.png)","category":"page"},{"location":"generated/afr-progs-sym/#Create-a-different-problem-and-solve-it","page":"Symmetric CSE - piecewise linear","title":"Create a different problem and solve it","text":"","category":"section"},{"location":"generated/afr-progs-sym/","page":"Symmetric CSE - piecewise linear","title":"Symmetric CSE - piecewise linear","text":"Now create a non-default problem, e.g. by lowering the maximum value of n and changing the distribution parameters:","category":"page"},{"location":"generated/afr-progs-sym/","page":"Symmetric CSE - piecewise linear","title":"Symmetric CSE - piecewise linear","text":"cse_prob = SymmetricAfrprogsCSEProblem(maxn=12, distribution=Beta(2.5, 3.5))","category":"page"},{"location":"generated/afr-progs-sym/","page":"Symmetric CSE - piecewise linear","title":"Symmetric CSE - piecewise linear","text":"SymmetricAfrprogsCSEProblem(np=2, mc=10000, n=2..12, Beta(α=2.5, β=3.5))","category":"page"},{"location":"generated/afr-progs-sym/","page":"Symmetric CSE - piecewise linear","title":"Symmetric CSE - piecewise linear","text":"Compute the CSE:","category":"page"},{"location":"generated/afr-progs-sym/","page":"Symmetric CSE - piecewise linear","title":"Symmetric CSE - piecewise linear","text":"solutions = compute_cse(cse_prob)","category":"page"},{"location":"generated/afr-progs-sym/","page":"Symmetric CSE - piecewise linear","title":"Symmetric CSE - piecewise linear","text":"6-element Vector{ConstrainedStrategicEquilibrium.SymmetricCSESolution}:\n SymmetricCSESolution(n=02, MSE=5.01e-04, C_1=NaN, C_2=3.07e-17)\n SymmetricCSESolution(n=04, MSE=5.77e-05, C_1=1.70e-03, C_2=2.30e-17)\n SymmetricCSESolution(n=06, MSE=4.96e-05, C_1=2.64e-04, C_2=2.28e-17)\n SymmetricCSESolution(n=08, MSE=1.44e-05, C_1=4.26e-04, C_2=1.84e-17)\n SymmetricCSESolution(n=10, MSE=1.28e-05, C_1=1.35e-04, C_2=2.04e-17)\n SymmetricCSESolution(n=12, MSE=1.16e-05, C_1=7.27e-05, C_2=8.15e-14)","category":"page"},{"location":"generated/afr-progs-sym/","page":"Symmetric CSE - piecewise linear","title":"Symmetric CSE - piecewise linear","text":"Finally, plot the last successful solution:","category":"page"},{"location":"generated/afr-progs-sym/","page":"Symmetric CSE - piecewise linear","title":"Symmetric CSE - piecewise linear","text":"for sol in Iterators.reverse(solutions)\n    if sol.success\n        cseplot(sol; dpi=400)\n        savefig(\"afr-progs-sym-beta2535.png\")\n        break\n    end\nend","category":"page"},{"location":"generated/afr-progs-sym/","page":"Symmetric CSE - piecewise linear","title":"Symmetric CSE - piecewise linear","text":"View the plot showing the CSE and BNE: (Image: afr-progs-sym-beta2535.png)","category":"page"},{"location":"generated/afr-progs-sym/#References","page":"Symmetric CSE - piecewise linear","title":"References","text":"","category":"section"},{"location":"generated/afr-progs-sym/","page":"Symmetric CSE - piecewise linear","title":"Symmetric CSE - piecewise linear","text":"[1] Armantier et al. Journal of Applied Econometrics, 23 (2008)","category":"page"},{"location":"generated/afr-progs-sym/","page":"Symmetric CSE - piecewise linear","title":"Symmetric CSE - piecewise linear","text":"","category":"page"},{"location":"generated/afr-progs-sym/","page":"Symmetric CSE - piecewise linear","title":"Symmetric CSE - piecewise linear","text":"This page was generated using Literate.jl.","category":"page"},{"location":"generated/afr-progs-asym-original/#Asymmetric-CSE-example-from-afrprogs","page":"Asymmetric CSE - piecewise linear","title":"Asymmetric CSE example from afrprogs","text":"","category":"section"},{"location":"generated/afr-progs-asym-original/","page":"Asymmetric CSE - piecewise linear","title":"Asymmetric CSE - piecewise linear","text":"This example is roughly equivalent to the asym.f example code from the supporting material to the paper by Armantier et al. [1]. Instead of just running a single n value (n = 16), it runs for n = 17 too.","category":"page"},{"location":"generated/afr-progs-asym-original/#Install-dependencies","page":"Asymmetric CSE - piecewise linear","title":"Install dependencies","text":"","category":"section"},{"location":"generated/afr-progs-asym-original/","page":"Asymmetric CSE - piecewise linear","title":"Asymmetric CSE - piecewise linear","text":"Make sure the required packages are installed by running the following from the root directory of this repo:","category":"page"},{"location":"generated/afr-progs-asym-original/","page":"Asymmetric CSE - piecewise linear","title":"Asymmetric CSE - piecewise linear","text":"using Pkg\nPkg.instantiate()","category":"page"},{"location":"generated/afr-progs-asym-original/#Load-required-modules","page":"Asymmetric CSE - piecewise linear","title":"Load required modules","text":"","category":"section"},{"location":"generated/afr-progs-asym-original/","page":"Asymmetric CSE - piecewise linear","title":"Asymmetric CSE - piecewise linear","text":"using ConstrainedStrategicEquilibrium\nusing Plots\nusing Distributions\nusing NonlinearSolve","category":"page"},{"location":"generated/afr-progs-asym-original/#Create-the-CSE-problem","page":"Asymmetric CSE - piecewise linear","title":"Create the CSE problem","text":"","category":"section"},{"location":"generated/afr-progs-asym-original/","page":"Asymmetric CSE - piecewise linear","title":"Asymmetric CSE - piecewise linear","text":"The original fortran asym code used n = 16 and the following initial guess:","category":"page"},{"location":"generated/afr-progs-asym-original/","page":"Asymmetric CSE - piecewise linear","title":"Asymmetric CSE - piecewise linear","text":"nval = 16\nxguess = Vector{Float64}(undef, 2 * nval - 1)\nxguess[1] = -2.84827109173688\nxguess[2] = -2.85209052797506\nxguess[3] = -2.85688597597939\nxguess[4] = -2.86243170560486\nxguess[5] = -2.87005433886236\nxguess[6] = -2.87972857171734\nxguess[7] = -2.89195095174828\nxguess[8] = -2.90986034638539\nxguess[9] = -2.93411212816428\nxguess[10] = -2.96990679761558\nxguess[11] = -3.03212449908756\nxguess[12] = -3.14051739544213\nxguess[13] = -3.33100693581025\nxguess[14] = -3.69184084490141\nxguess[15] = -5.61683383184477\nxguess[16] = -7.41860036191254\nxguess[17] = 4.37486841314759\nxguess[18] = 3.55315379806175\nxguess[19] = 3.09860286531008\nxguess[20] = 2.74440338704673\nxguess[21] = 2.45415125926837\nxguess[22] = 2.19413505997764\nxguess[23] = 1.94448901027584\nxguess[24] = 1.71125414593309\nxguess[25] = 1.47745377147087\nxguess[26] = 1.23478257742541\nxguess[27] = 1.01951187118377\nxguess[28] = 0.846654741348483\nxguess[29] = 0.726435662568677\nxguess[30] = 0.619443991395723\nxguess[31] = 1.12697386952317","category":"page"},{"location":"generated/afr-progs-asym-original/","page":"Asymmetric CSE - piecewise linear","title":"Asymmetric CSE - piecewise linear","text":"1.12697386952317","category":"page"},{"location":"generated/afr-progs-asym-original/","page":"Asymmetric CSE - piecewise linear","title":"Asymmetric CSE - piecewise linear","text":"Create an asymmetric CSE problem with the following (note we make a small change from the Fortran asym.f code by running from n = 16 to n = 17, instead of just n = 16):","category":"page"},{"location":"generated/afr-progs-asym-original/","page":"Asymmetric CSE - piecewise linear","title":"Asymmetric CSE - piecewise linear","text":"cse_prob = AsymmetricAfrprogsCSEProblem(\n    inin=nval,\n    maxn=nval + 1,\n    np=4,\n    mc=10000,\n    solver_kwargs=(; show_trace=Val(true)),\n    solver_initial_guess=xguess,\n)","category":"page"},{"location":"generated/afr-progs-asym-original/","page":"Asymmetric CSE - piecewise linear","title":"Asymmetric CSE - piecewise linear","text":"AsymmetricAfrprogsCSEProblem(np=4, mc=10000, n=16..17)","category":"page"},{"location":"generated/afr-progs-asym-original/#Compute-the-CSE","page":"Asymmetric CSE - piecewise linear","title":"Compute the CSE","text":"","category":"section"},{"location":"generated/afr-progs-asym-original/","page":"Asymmetric CSE - piecewise linear","title":"Asymmetric CSE - piecewise linear","text":"Now compute the CSE for the problem we created","category":"page"},{"location":"generated/afr-progs-asym-original/","page":"Asymmetric CSE - piecewise linear","title":"Asymmetric CSE - piecewise linear","text":"solutions = compute_cse(cse_prob)","category":"page"},{"location":"generated/afr-progs-asym-original/","page":"Asymmetric CSE - piecewise linear","title":"Asymmetric CSE - piecewise linear","text":"2-element Vector{ConstrainedStrategicEquilibrium.AsymmetricCSESolution}:\n AsymmetricCSESolution(n=16, C_1=(NaN, NaN), C_2=5.01e-17)\n AsymmetricCSESolution(n=17, C_1=(1.05e-11, 9.86e-12), C_2=3.27e-17)","category":"page"},{"location":"generated/afr-progs-asym-original/#Postprocessing","page":"Asymmetric CSE - piecewise linear","title":"Postprocessing","text":"","category":"section"},{"location":"generated/afr-progs-asym-original/","page":"Asymmetric CSE - piecewise linear","title":"Asymmetric CSE - piecewise linear","text":"Loop over the solutions and plot them all","category":"page"},{"location":"generated/afr-progs-asym-original/","page":"Asymmetric CSE - piecewise linear","title":"Asymmetric CSE - piecewise linear","text":"for sol in solutions\n    plot(sol, dpi=300)\n\n    # Save the figure to a file\n    savefig(\"afr-progs-asym-n$(sol.n).png\")\nend","category":"page"},{"location":"generated/afr-progs-asym-original/","page":"Asymmetric CSE - piecewise linear","title":"Asymmetric CSE - piecewise linear","text":"View the result for n=16:","category":"page"},{"location":"generated/afr-progs-asym-original/","page":"Asymmetric CSE - piecewise linear","title":"Asymmetric CSE - piecewise linear","text":"(Image: afr-progs-asym-n16.png)","category":"page"},{"location":"generated/afr-progs-asym-original/","page":"Asymmetric CSE - piecewise linear","title":"Asymmetric CSE - piecewise linear","text":"and n=17:","category":"page"},{"location":"generated/afr-progs-asym-original/","page":"Asymmetric CSE - piecewise linear","title":"Asymmetric CSE - piecewise linear","text":"(Image: afr-progs-asym-n17.png)","category":"page"},{"location":"generated/afr-progs-asym-original/#References","page":"Asymmetric CSE - piecewise linear","title":"References","text":"","category":"section"},{"location":"generated/afr-progs-asym-original/","page":"Asymmetric CSE - piecewise linear","title":"Asymmetric CSE - piecewise linear","text":"[1] Armantier et al. Journal of Applied Econometrics, 23 (2008)","category":"page"},{"location":"generated/afr-progs-asym-original/","page":"Asymmetric CSE - piecewise linear","title":"Asymmetric CSE - piecewise linear","text":"","category":"page"},{"location":"generated/afr-progs-asym-original/","page":"Asymmetric CSE - piecewise linear","title":"Asymmetric CSE - piecewise linear","text":"This page was generated using Literate.jl.","category":"page"},{"location":"api/#API","page":"API reference","title":"API","text":"","category":"section"},{"location":"api/","page":"API reference","title":"API reference","text":"","category":"page"},{"location":"api/#ConstrainedStrategicEquilibrium.AsymmetricAfrprogsCSEProblem","page":"API reference","title":"ConstrainedStrategicEquilibrium.AsymmetricAfrprogsCSEProblem","text":"struct AsymmetricAfrprogsCSEProblem <: ConstrainedStrategicEquilibrium.AsymmetricCSEProblem\n\nThe asymmetric CSE problem adapted from the Fortran code released by Armantier et al. alongside their paper, \"Approximation of Nash equilibria in Bayesian games\" [1].\n\nThis problem can have either 2 or 4 players. In the case of 4 players, players 1 and 2 must have the same distribution and players 3 and 4 must have the same distribution.\n\nNote regarding the solver: cdf does not seem to support dual numbers so you may need to specify a different option for autodiff, e.g. autodiff=AutoFiniteDiff(), instead of the default ForwardDiff().\n\nParameters can be passed in as keyword arguments or can be omitted to accept the default values.\n\nrng::Random.AbstractRNG: Random number generator to use during data generation (default rng is seeded with 642867)\nmc::Int64: Number of Monte Carlo steps (default is 10000)\nnp::Int64: Number of players, which must be 2 or 4 currently (default is 4)\ndistributions::Vector{Distributions.UnivariateDistribution}: Distributions to use, which should be a Vector of length 2 or 4. With 4 players, the first 2 players and second 2 players must have the same distributions respectively.\ninin::Int64: Initial value for n (default is 16)\nmaxn::Int64: Maximum value for n (default is 17)\nknot_refinement_strategy::Symbol: Knot refinement strategy. Can be :steepest_slope, :highest_curvature, :even_spacing, or :double_knot. (default is :steepest_slope)\nlegacy_output::Bool: Write txt and csv files with solution info (default is False, most of this info is included in the solution objects that get return from compute_cse)\nsolver::Union{Nothing, SciMLBase.AbstractNonlinearAlgorithm}: The solver to use (default is to use Broyden(; init_jacobian=Val(:true_jacobian), autodiff=AutoFiniteDiff()))\nsolver_kwargs::NamedTuple: Keyword arguments to pass to the solve command, such as abstol, reltol, maxiters, etc. Add show_trace=Val(true) to output extra info from the solver.\nsolver_initial_guess::Union{Nothing, Vector{Float64}}: Initial guess to pass to the solver, if not provided use a default initial guess (must be length 2 * inin - 1)\ninitial_knots::Union{Nothing, Vector{Float64}}: Initial knot positions to use, if not provided use a default initial guess (must be length inin + 1)\n\nReferences\n\n[1] Armantier et al. Journal of Applied Econometrics, 23 (2008)\n\n\n\n\n\n","category":"type"},{"location":"api/#ConstrainedStrategicEquilibrium.AsymmetricCSEProblem","page":"API reference","title":"ConstrainedStrategicEquilibrium.AsymmetricCSEProblem","text":"abstract type AsymmetricCSEProblem <: ConstrainedStrategicEquilibrium.CSEProblem\n\nBase type for all asymmetric CSE problems.\n\n\n\n\n\n","category":"type"},{"location":"api/#ConstrainedStrategicEquilibrium.AsymmetricCSESolution","page":"API reference","title":"ConstrainedStrategicEquilibrium.AsymmetricCSESolution","text":"mutable struct AsymmetricCSESolution <: ConstrainedStrategicEquilibrium.CSESolution\n\nContains the solution to the asymmetric CSE problem.\n\ncse::DataFrames.DataFrame: A DataFrame containing the CSE and BNE evaluated at the given points\nresid::Float64: Norm of the derivatives\nknot::Dict{Symbol, DataFrames.DataFrame}: The knots for both bidders\nalph_bet::Dict{Symbol, DataFrames.DataFrame}: Alpha and beta values for the piecewise linear functions for both bidders\nx_f::Dict{Symbol, DataFrames.DataFrame}: x values and derivatives at the final point\nnorm_derivatives::Dict{Symbol, Float64}: Norm of the derivatives for each player\nsuccess::Bool: Whether the calculation was successful or not\nnfeval::Int64: Number of function evaluations\nnjacs::Int64: Number of Jacobians created during the solve\nnfactors::Int64: Number of factorisations of the Jacobian required for the solve\nnsolve::Int64: Number of linear solves required for the solve\nnsteps::Int64: Total number of iterations for the nonlinear solver\nc_1::Dict{Symbol, Float64}: Stop criteria C_1 (comparison of CSE with previous n value) for each player\nc_2::Float64: Stop criteria C_2 (norm of the residual)\nproblem::ConstrainedStrategicEquilibrium.AsymmetricCSEProblem: The problem that this solution was generated for\nn::Int64: The value of n used in this solution\nu::Array{Float64}: The data used in generating the solution\nsolver_solution::Union{Nothing, SciMLBase.NonlinearSolution}: The solution object returned by the solver\n\n\n\n\n\n","category":"type"},{"location":"api/#ConstrainedStrategicEquilibrium.AsymmetricFunctionParams","page":"API reference","title":"ConstrainedStrategicEquilibrium.AsymmetricFunctionParams","text":"mutable struct AsymmetricFunctionParams <: ConstrainedStrategicEquilibrium.CSESolverParams\n\nStructure for passing data to the objective function via the solver interface.\n\n\n\n\n\n","category":"type"},{"location":"api/#ConstrainedStrategicEquilibrium.CSEProblem","page":"API reference","title":"ConstrainedStrategicEquilibrium.CSEProblem","text":"abstract type CSEProblem\n\nBase type for all CSE problems.\n\n\n\n\n\n","category":"type"},{"location":"api/#ConstrainedStrategicEquilibrium.CSESolution","page":"API reference","title":"ConstrainedStrategicEquilibrium.CSESolution","text":"abstract type CSESolution\n\nBase type for all CSE solutions.\n\n\n\n\n\n","category":"type"},{"location":"api/#ConstrainedStrategicEquilibrium.CSESolverParams","page":"API reference","title":"ConstrainedStrategicEquilibrium.CSESolverParams","text":"abstract type CSESolverParams\n\nBase type for all solver parameter objects passed to objective functions.\n\n\n\n\n\n","category":"type"},{"location":"api/#ConstrainedStrategicEquilibrium.SymmetricAfrprogsCSEProblem","page":"API reference","title":"ConstrainedStrategicEquilibrium.SymmetricAfrprogsCSEProblem","text":"struct SymmetricAfrprogsCSEProblem <: ConstrainedStrategicEquilibrium.SymmetricCSEProblem\n\nThe symmetric CSE problem adapted from the Fortran code released by Armantier et al. alongside their paper, \"Approximation of Nash equilibria in Bayesian games\" [1].\n\nParameters can be passed in as keyword arguments or can be omitted to accept the default values.\n\nrng::Random.AbstractRNG: Random number generator to use during data generation (default rng is seeded with 642867)\nmc::Int64: Number of Monte Carlo steps (default is 10000)\nnp::Int64: Number of players (default is 2)\ndistribution::Distributions.UnivariateDistribution: Distribution to use (default is Beta(3, 3))\ninin::Int64: Initial value for n (default is 2)\nmaxn::Int64: Maximum value for n (default is 16)\nknot_refinement_strategy::Symbol: Knot refinement strategy. Can be :highest_curvature or :even_spacing. (default is :highest_curvature)\nlegacy_output::Bool: Write txt and csv files with solution info\nsolver::Union{Nothing, SciMLBase.AbstractNonlinearAlgorithm}: The solver to use (default is to use the default solver from NonlinearSolve.jl)\nsolver_kwargs::NamedTuple: Keyword arguments to pass to the solve command, such as abstol, reltol, maxiters, etc.\nsolver_initial_guess::Union{Nothing, Vector{Float64}}: Initial guess to pass to the solver, if not provided use a default initial guess (must be length inin)\ninitial_knots::Union{Nothing, Vector{Float64}}: Initial knot positions to use (must be length inin + 1, start with 0.0, and end with 1.0)\n\nExamples\n\njulia> prob = SymmetricAfrprogsCSEProblem()\nSymmetricAfrprogsCSEProblem(np=4, mc=10000, n=2..16, Distributions.Beta{Float64}(α=3.0, β=3.0))\n\njulia> prob = SymmetricAfrprogsCSEProblem(mc = 1000, maxn = 12, distribution = Beta(3, 4))\nSymmetricAfrprogsCSEProblem(np=4, mc=1000, n=2..12, Distributions.Beta{Float64}(α=3.0, β=4.0))\n\nReferences\n\n[1] Armantier et al. Journal of Applied Econometrics, 23 (2008)\n\n\n\n\n\n","category":"type"},{"location":"api/#ConstrainedStrategicEquilibrium.SymmetricAfrprogsParams","page":"API reference","title":"ConstrainedStrategicEquilibrium.SymmetricAfrprogsParams","text":"mutable struct SymmetricAfrprogsParams <: ConstrainedStrategicEquilibrium.CSESolverParams\n\nStructure for passing data to the objective function via the solver interface.\n\n\n\n\n\n","category":"type"},{"location":"api/#ConstrainedStrategicEquilibrium.SymmetricCSEProblem","page":"API reference","title":"ConstrainedStrategicEquilibrium.SymmetricCSEProblem","text":"abstract type SymmetricCSEProblem <: ConstrainedStrategicEquilibrium.CSEProblem\n\nBase type for all symmetric CSE problems.\n\n\n\n\n\n","category":"type"},{"location":"api/#ConstrainedStrategicEquilibrium.SymmetricCSESolution","page":"API reference","title":"ConstrainedStrategicEquilibrium.SymmetricCSESolution","text":"mutable struct SymmetricCSESolution <: ConstrainedStrategicEquilibrium.CSESolution\n\nContains the solution to the CSE problem.\n\ncse::DataFrames.DataFrame: A DataFrame containing the CSE and BNE evaluated at the given points. Columns names are x, CSE(x) and BNE(x).\nmse::Float64: Mean squared error of the CSE compared to the BNE\nresid::Float64: Norm of the derivatives\nknot::DataFrames.DataFrame\nalph_bet::DataFrames.DataFrame\nx_f::DataFrames.DataFrame\nsuccess::Bool: Whether the calculation was successful or not\nc_1::Float64: Stop criteria C_1 (comparison of the CSE at the current value of n with the CSE at the previous value of n)\nc_2::Float64: Stop criteria C_2 (norm of the residual)\nproblem::ConstrainedStrategicEquilibrium.SymmetricCSEProblem: The problem that this solution was generated for\nn::Int64: The value of n used in this solution\nu::Array{Float64}: The data used in generating the solution\nsolver_solution::Union{Nothing, SciMLBase.NonlinearSolution}: The solution object returned by the solver\n\n\n\n\n\n","category":"type"},{"location":"api/#ConstrainedStrategicEquilibrium.SymmetricJaePoly1CSEProblem","page":"API reference","title":"ConstrainedStrategicEquilibrium.SymmetricJaePoly1CSEProblem","text":"struct SymmetricJaePoly1CSEProblem <: ConstrainedStrategicEquilibrium.SymmetricCSEProblem\n\nThe jae_poly_1 symmetric CSE problem from Computer_Code_CSE based on the paper by Armantier et al., \"Approximation of Nash equilibria in Bayesian games\" [1].\n\nParameters can be passed in as keyword arguments or can be omitted to accept the default values.\n\nrng::Random.AbstractRNG: Random number generator to use during data generation (default rng is seeded with 642867)\nmc::Int64: Number of Monte Carlo steps (default is 10000)\nnp::Int64: Number of players (default is 4)\ndistribution::Distributions.UnivariateDistribution: Distribution to use (default is Kumaraswamy(2.5, 3.5))\ninin::Int64: Initial value for n (default is 1)\nmaxn::Int64: Maximum value for n (default is 12)\nlegacy_output::Bool: Write txt and csv files with solution info (default is false)\nsolver::Union{Nothing, SciMLBase.AbstractNonlinearAlgorithm}: The solver to use (default is to use the default set by NonlinearSolve.jl)\nsolver_kwargs::NamedTuple: Keyword arguments to pass to the solve command, such as abstol, reltol, maxiters, etc.\nsolver_initial_guess::Union{Nothing, Vector{Float64}}: Initial guess to pass to the solver, if not provided use a default initial guess (must be length inin)\n\nExamples\n\njulia> prob = SymmetricJaePoly1CSEProblem()\nSymmetricJaePoly1CSEProblem(np=4, mc=10000, n=1..12, Distributions.Kumaraswamy{Float64}(a=2.5, b=3.5))\n\njulia> prob = SymmetricJaePoly1CSEProblem(np=2, mc=1000, maxn=8, distribution=Beta(3, 4))\nSymmetricJaePoly1CSEProblem(np=2, mc=1000, n=1..8, Distributions.Beta{Float64}(α=3.0, β=4.0))\n\nReferences\n\n[1] Armantier et al. Journal of Applied Econometrics, 23 (2008)\n\n\n\n\n\n","category":"type"},{"location":"api/#ConstrainedStrategicEquilibrium.compute_bne-Tuple{Float64, Distributions.UnivariateDistribution, Int64}","page":"API reference","title":"ConstrainedStrategicEquilibrium.compute_bne","text":"compute_bne(\n    v::Float64,\n    dist::Distributions.UnivariateDistribution,\n    N::Int64\n) -> Any\n\n\nFunction to calculate the \"analytical\" Bayes-Nash Equilibrium.\n\n\n\n\n\n","category":"method"},{"location":"api/#ConstrainedStrategicEquilibrium.compute_cse-Tuple{AsymmetricAfrprogsCSEProblem, Array{Float64}}","page":"API reference","title":"ConstrainedStrategicEquilibrium.compute_cse","text":"compute_cse(\n    cse_problem::AsymmetricAfrprogsCSEProblem,\n    u::Array{Float64}\n) -> Vector{ConstrainedStrategicEquilibrium.AsymmetricCSESolution}\n\n\nSpecific implementation of compute_cse for the afr-progs asymmetric case.\n\nCall this function if you have already manually validated the problem and generated the data. The data must have shape (cse_problem.mc, cse_problem.np).\n\n\n\n\n\n","category":"method"},{"location":"api/#ConstrainedStrategicEquilibrium.compute_cse-Tuple{ConstrainedStrategicEquilibrium.CSEProblem}","page":"API reference","title":"ConstrainedStrategicEquilibrium.compute_cse","text":"compute_cse(\n    cse_problem::ConstrainedStrategicEquilibrium.CSEProblem\n) -> Union{Vector{ConstrainedStrategicEquilibrium.AsymmetricCSESolution}, Vector{ConstrainedStrategicEquilibrium.SymmetricCSESolution}}\n\n\nSolve the given CSE problem.\n\nThis is a wrapper function that will first validate the problem and generate the data before solving the CSE problem and returning the vector of solutions.\n\nExamples\n\njulia> prob = SymmetricJaePoly1CSEProblem()\nSymmetricJaePoly1CSEProblem(np=4, mc=10000, n=1..12, Distributions.Kumaraswamy{Float64}(a=2.5, b=3.5))\n\njulia> solutions = compute_cse(prob)\n[ Info: mean and std player 1: 0.4957361972625512, 0.18748491448182267\n[ Info: mean and std player 2: 0.5000858627485552, 0.18774978658869976\n[ Info: mean and std player 3: 0.496651263173003, 0.18645006296589822\n[ Info: mean and std player 4: 0.5021607262564288, 0.18574470364076182\n[ Info: Computing: SymmetricJaePoly1CSEProblem(np=4, mc=10000, n=1..12, Kumaraswamy(a=2.5, b=3.5))\n[ Info: SymmetricCSESolution(n=01, MSE=1.63e-03, C_1=NaN, C_2=9.48e-16)\n[ Info: SymmetricCSESolution(n=02, MSE=6.62e-04, C_1=5.80e-03, C_2=1.91e-16)\n[ Info: SymmetricCSESolution(n=03, MSE=9.80e-05, C_1=3.45e-03, C_2=1.15e-13)\n[ Info: SymmetricCSESolution(n=04, MSE=1.75e-05, C_1=5.70e-04, C_2=4.09e-14)\n[ Info: SymmetricCSESolution(n=05, MSE=7.30e-05, C_1=1.24e-03, C_2=1.00e-16)\n[ Info: SymmetricCSESolution(n=06, MSE=6.51e-05, C_1=1.64e-03, C_2=1.70e-14)\n[ Info: SymmetricCSESolution(n=07, MSE=1.95e-05, C_1=1.23e-03, C_2=4.07e-16)\n[ Info: SymmetricCSESolution(n=08, MSE=1.94e-06, C_1=5.75e-04, C_2=2.06e-14)\n[ Info: SymmetricCSESolution(n=09, MSE=2.59e-07, C_1=8.99e-05, C_2=2.10e-13)\n[ Info: SymmetricCSESolution(n=10, MSE=1.17e-06, C_1=1.53e-04, C_2=6.20e-14)\n[ Info: SymmetricCSESolution(n=11, MSE=1.53e-06, C_1=1.58e-05, C_2=3.61e-13)\n[ Info: SymmetricCSESolution(n=12, MSE=5.77e-07, C_1=4.83e-05, C_2=8.63e-14)\n12-element Vector{ConstrainedStrategicEquilibrium.SymmetricCSESolution}:\n SymmetricCSESolution(n=01, MSE=1.63e-03, C_1=NaN, C_2=9.48e-16)\n SymmetricCSESolution(n=02, MSE=6.62e-04, C_1=5.80e-03, C_2=1.91e-16)\n SymmetricCSESolution(n=03, MSE=9.80e-05, C_1=3.45e-03, C_2=1.15e-13)\n SymmetricCSESolution(n=04, MSE=1.75e-05, C_1=5.70e-04, C_2=4.09e-14)\n SymmetricCSESolution(n=05, MSE=7.30e-05, C_1=1.24e-03, C_2=1.00e-16)\n SymmetricCSESolution(n=06, MSE=6.51e-05, C_1=1.64e-03, C_2=1.70e-14)\n SymmetricCSESolution(n=07, MSE=1.95e-05, C_1=1.23e-03, C_2=4.07e-16)\n SymmetricCSESolution(n=08, MSE=1.94e-06, C_1=5.75e-04, C_2=2.06e-14)\n SymmetricCSESolution(n=09, MSE=2.59e-07, C_1=8.99e-05, C_2=2.10e-13)\n SymmetricCSESolution(n=10, MSE=1.17e-06, C_1=1.53e-04, C_2=6.20e-14)\n SymmetricCSESolution(n=11, MSE=1.53e-06, C_1=1.58e-05, C_2=3.61e-13)\n SymmetricCSESolution(n=12, MSE=5.77e-07, C_1=4.83e-05, C_2=8.63e-14)\n\n\n\n\n\n","category":"method"},{"location":"api/#ConstrainedStrategicEquilibrium.compute_cse-Tuple{SymmetricAfrprogsCSEProblem, Array{Float64}}","page":"API reference","title":"ConstrainedStrategicEquilibrium.compute_cse","text":"compute_cse(\n    cse_problem::SymmetricAfrprogsCSEProblem,\n    u::Array{Float64}\n) -> Vector{ConstrainedStrategicEquilibrium.SymmetricCSESolution}\n\n\nSpecific implementation of compute_cse for the afr-progs symmetric case.\n\nCall this function if you have already manually validated the problem and generated the data. The data must have shape (cse_problem.mc, cse_problem.np).\n\n\n\n\n\n","category":"method"},{"location":"api/#ConstrainedStrategicEquilibrium.compute_cse-Tuple{SymmetricJaePoly1CSEProblem, Array{Float64}}","page":"API reference","title":"ConstrainedStrategicEquilibrium.compute_cse","text":"compute_cse(\n    cse_problem::SymmetricJaePoly1CSEProblem,\n    u::Array{Float64}\n) -> Vector{ConstrainedStrategicEquilibrium.SymmetricCSESolution}\n\n\nSpecific implementation of compute_cse for the \"jae_poly_1\" symmetric case.\n\nCall this function if you have already manually validated the problem and generated the data. The data must have shape (cse_problem.mc, cse_problem.np).\n\n\n\n\n\n","category":"method"},{"location":"api/#ConstrainedStrategicEquilibrium.cseplot","page":"API reference","title":"ConstrainedStrategicEquilibrium.cseplot","text":"cseplot(sol::CSESolution; kwargs...)\n\nPlot the given CSESolution. Some additional keyword arguments are available (in addition to the standard plotting options, such as dpi, title, etc.).\n\nWhen sol is a SymmetricCSESolution these are (default values shown):\n\ncse_label::String = \"CSE\" - the label for the CSE line\ncse_colour::Symbol = :1 - the colour for the CSE line\nadd_knots::Bool = true - whether or not to show the knot points on the graph\nknots_label::String = \"Knots\" - the label for the knot points\nadd_bne::Bool = true - whether or not to show the BNE on the graph\nbne_label::String = \"BNE\" - the label for the BNE line\nbne_colour::Symbol = :2 - the colour for the BNE line\n\nWhen sol is an AsymmetricCSESolution the extra options are (default values shown):\n\ncse_label::Dict{Symbol, String} = Dict(:bidder1 => \"CSE (1), :bidder2 => \"CSE (2)\") - the labels\ncse_colour::Dict{Symbol, Symbol} = Dict(:bidder1 => :1, :bidder2 => :2 - the colours for the CSE lines for each bidder (the keys in the dictionary must be as shown)\nadd_knots::Bool = true - whether or not to show the knot points on the graph\nknots_label::Dict{Symbol, String} = Dict(:bidder1 => \"Knots (1)\", :bidder2 => \"Knots (2)\") - the labels for the knot points for each bidder (the keys in the dictionary must be as shown)\n\nIn addition to the above options, cseplot will set a default title and xlabel and ylabel, however these can be overriden with keyword arguments.\n\n\n\n\n\n","category":"function"},{"location":"api/#ConstrainedStrategicEquilibrium.generate_cse_data-Tuple{ConstrainedStrategicEquilibrium.AsymmetricCSEProblem}","page":"API reference","title":"ConstrainedStrategicEquilibrium.generate_cse_data","text":"generate_cse_data(\n    cse_problem::ConstrainedStrategicEquilibrium.AsymmetricCSEProblem\n) -> Matrix{Float64}\n\n\nGenerate data to use for computing the asymmetric CSE case.\n\n\n\n\n\n","category":"method"},{"location":"api/#ConstrainedStrategicEquilibrium.generate_cse_data-Tuple{ConstrainedStrategicEquilibrium.SymmetricCSEProblem}","page":"API reference","title":"ConstrainedStrategicEquilibrium.generate_cse_data","text":"generate_cse_data(\n    cse_problem::ConstrainedStrategicEquilibrium.SymmetricCSEProblem\n) -> Matrix{Float64}\n\n\nGenerate data to use for computing the symmetric CSE case.\n\n\n\n\n\n","category":"method"},{"location":"api/#ConstrainedStrategicEquilibrium.objective_function_symmetric_afrprogs-Tuple{Any, Any, ConstrainedStrategicEquilibrium.SymmetricAfrprogsParams}","page":"API reference","title":"ConstrainedStrategicEquilibrium.objective_function_symmetric_afrprogs","text":"objective_function_symmetric_afrprogs(\n    fvec,\n    x,\n    p::ConstrainedStrategicEquilibrium.SymmetricAfrprogsParams\n)\n\n\nObjective function for the symmetric afrprogs case.\n\n\n\n\n\n","category":"method"},{"location":"api/#ConstrainedStrategicEquilibrium.objective_function_symmetric_jaepoly1-Tuple{Any, Any, ConstrainedStrategicEquilibrium.PolyParams}","page":"API reference","title":"ConstrainedStrategicEquilibrium.objective_function_symmetric_jaepoly1","text":"objective_function_symmetric_jaepoly1(\n    fvec,\n    x,\n    p::ConstrainedStrategicEquilibrium.PolyParams\n)\n\n\nObjective function for the symmetric jaepoly1 case.\n\n\n\n\n\n","category":"method"},{"location":"api/#ConstrainedStrategicEquilibrium.run_solver-Tuple{ConstrainedStrategicEquilibrium.CSEProblem, ConstrainedStrategicEquilibrium.CSESolution, Function, ConstrainedStrategicEquilibrium.CSESolverParams, AbstractVector{Float64}, AbstractVector{Float64}, Union{Missing, ConstrainedStrategicEquilibrium.CSESolution}}","page":"API reference","title":"ConstrainedStrategicEquilibrium.run_solver","text":"run_solver(\n    cse_problem::ConstrainedStrategicEquilibrium.CSEProblem,\n    cse_solution::ConstrainedStrategicEquilibrium.CSESolution,\n    objective_function::Function,\n    objective_function_params::ConstrainedStrategicEquilibrium.CSESolverParams,\n    x::AbstractVector{Float64},\n    fvec::AbstractVector{Float64},\n    previous_solution::Union{Missing, ConstrainedStrategicEquilibrium.CSESolution}\n) -> Any\n\n\nHelper function to call the solver and attach output/stats to the solution\n\n\n\n\n\n","category":"method"},{"location":"api/#ConstrainedStrategicEquilibrium.validate_cse_problem-Tuple{AsymmetricAfrprogsCSEProblem}","page":"API reference","title":"ConstrainedStrategicEquilibrium.validate_cse_problem","text":"validate_cse_problem(\n    cse_problem::AsymmetricAfrprogsCSEProblem\n)\n\n\nCheck that cse_problem is a valid definition for an asymmetric CSE problem.\n\nThis function will throw an error if the problem is not valid, otherwise will return silently.\n\nExamples\n\njulia> prob = AsymmetricAfrprogsCSEProblem();\njulia> validate_cse_problem(prob)\n\njulia> prob = AsymmetricAfrprogsCSEProblem(np = 6);\njulia> validate_cse_problem(prob)\nERROR: \"Only 2 or 4 players are supported currently\"\n[...]\n\njulia> prob = AsymmetricAfrprogsCSEProblem(maxn = 1);\njulia> validate_cse_problem(prob)\nERROR: \"Initial value of n cannot be bigger than maximum value of n\"\n[...]\n\nReferences\n\n[1] Armantier et al. Journal of Applied Econometrics, 23 (2008)\n\n\n\n\n\n","category":"method"},{"location":"api/#ConstrainedStrategicEquilibrium.validate_cse_problem-Tuple{SymmetricAfrprogsCSEProblem}","page":"API reference","title":"ConstrainedStrategicEquilibrium.validate_cse_problem","text":"validate_cse_problem(\n    cse_problem::SymmetricAfrprogsCSEProblem\n)\n\n\nCheck that cse_problem is a valid definition for a CSE problem.\n\nThis function will throw an error if the problem is not valid, otherwise will return silently.\n\nExamples\n\njulia> prob = SymmetricAfrprogsCSEProblem();\njulia> validate_cse_problem(prob)\n\njulia> prob = SymmetricAfrprogsCSEProblem(maxn = 1);\njulia> validate_cse_problem(prob)\nERROR: \"Initial value of n cannot be bigger than maximum value of n\"\n[...]\n\n\n\n\n\n","category":"method"},{"location":"api/#ConstrainedStrategicEquilibrium.validate_cse_problem-Tuple{SymmetricJaePoly1CSEProblem}","page":"API reference","title":"ConstrainedStrategicEquilibrium.validate_cse_problem","text":"validate_cse_problem(\n    cse_problem::SymmetricJaePoly1CSEProblem\n)\n\n\nCheck that cse_problem is a valid definition for a CSE problem.\n\nThis function will throw an error if the problem is not valid, otherwise will return silently.\n\nExamples\n\njulia> prob = SymmetricJaePoly1CSEProblem();\njulia> validate_cse_problem(prob)\n\njulia> prob = SymmetricJaePoly1CSEProblem(maxn = 0);\njulia> validate_cse_problem(prob)\nERROR: \"Initial value of n cannot be bigger than maximum value of n\"\n[...]\n\n\n\n\n\n","category":"method"},{"location":"basics/cse_solution/#CSE-solutions","page":"CSE solutions","title":"CSE solutions","text":"","category":"section"},{"location":"basics/cse_solution/#ConstrainedStrategicEquilibrium.CSESolution-basics-cse_solution","page":"CSE solutions","title":"ConstrainedStrategicEquilibrium.CSESolution","text":"abstract type CSESolution\n\nBase type for all CSE solutions.\n\n\n\n\n\n","category":"type"},{"location":"basics/cse_solution/#ConstrainedStrategicEquilibrium.SymmetricCSESolution-basics-cse_solution","page":"CSE solutions","title":"ConstrainedStrategicEquilibrium.SymmetricCSESolution","text":"mutable struct SymmetricCSESolution <: ConstrainedStrategicEquilibrium.CSESolution\n\nContains the solution to the CSE problem.\n\ncse::DataFrames.DataFrame: A DataFrame containing the CSE and BNE evaluated at the given points. Columns names are x, CSE(x) and BNE(x).\nmse::Float64: Mean squared error of the CSE compared to the BNE\nresid::Float64: Norm of the derivatives\nknot::DataFrames.DataFrame\nalph_bet::DataFrames.DataFrame\nx_f::DataFrames.DataFrame\nsuccess::Bool: Whether the calculation was successful or not\nc_1::Float64: Stop criteria C_1 (comparison of the CSE at the current value of n with the CSE at the previous value of n)\nc_2::Float64: Stop criteria C_2 (norm of the residual)\nproblem::ConstrainedStrategicEquilibrium.SymmetricCSEProblem: The problem that this solution was generated for\nn::Int64: The value of n used in this solution\nu::Array{Float64}: The data used in generating the solution\nsolver_solution::Union{Nothing, SciMLBase.NonlinearSolution}: The solution object returned by the solver\n\n\n\n\n\n","category":"type"},{"location":"basics/cse_solution/#ConstrainedStrategicEquilibrium.AsymmetricCSESolution-basics-cse_solution","page":"CSE solutions","title":"ConstrainedStrategicEquilibrium.AsymmetricCSESolution","text":"mutable struct AsymmetricCSESolution <: ConstrainedStrategicEquilibrium.CSESolution\n\nContains the solution to the asymmetric CSE problem.\n\ncse::DataFrames.DataFrame: A DataFrame containing the CSE and BNE evaluated at the given points\nresid::Float64: Norm of the derivatives\nknot::Dict{Symbol, DataFrames.DataFrame}: The knots for both bidders\nalph_bet::Dict{Symbol, DataFrames.DataFrame}: Alpha and beta values for the piecewise linear functions for both bidders\nx_f::Dict{Symbol, DataFrames.DataFrame}: x values and derivatives at the final point\nnorm_derivatives::Dict{Symbol, Float64}: Norm of the derivatives for each player\nsuccess::Bool: Whether the calculation was successful or not\nnfeval::Int64: Number of function evaluations\nnjacs::Int64: Number of Jacobians created during the solve\nnfactors::Int64: Number of factorisations of the Jacobian required for the solve\nnsolve::Int64: Number of linear solves required for the solve\nnsteps::Int64: Total number of iterations for the nonlinear solver\nc_1::Dict{Symbol, Float64}: Stop criteria C_1 (comparison of CSE with previous n value) for each player\nc_2::Float64: Stop criteria C_2 (norm of the residual)\nproblem::ConstrainedStrategicEquilibrium.AsymmetricCSEProblem: The problem that this solution was generated for\nn::Int64: The value of n used in this solution\nu::Array{Float64}: The data used in generating the solution\nsolver_solution::Union{Nothing, SciMLBase.NonlinearSolution}: The solution object returned by the solver\n\n\n\n\n\n","category":"type"},{"location":"basics/plotting/#Plotting-a-solution","page":"Plotting a CSE","title":"Plotting a solution","text":"","category":"section"},{"location":"basics/plotting/#ConstrainedStrategicEquilibrium.cseplot-basics-plotting","page":"Plotting a CSE","title":"ConstrainedStrategicEquilibrium.cseplot","text":"cseplot(sol::CSESolution; kwargs...)\n\nPlot the given CSESolution. Some additional keyword arguments are available (in addition to the standard plotting options, such as dpi, title, etc.).\n\nWhen sol is a SymmetricCSESolution these are (default values shown):\n\ncse_label::String = \"CSE\" - the label for the CSE line\ncse_colour::Symbol = :1 - the colour for the CSE line\nadd_knots::Bool = true - whether or not to show the knot points on the graph\nknots_label::String = \"Knots\" - the label for the knot points\nadd_bne::Bool = true - whether or not to show the BNE on the graph\nbne_label::String = \"BNE\" - the label for the BNE line\nbne_colour::Symbol = :2 - the colour for the BNE line\n\nWhen sol is an AsymmetricCSESolution the extra options are (default values shown):\n\ncse_label::Dict{Symbol, String} = Dict(:bidder1 => \"CSE (1), :bidder2 => \"CSE (2)\") - the labels\ncse_colour::Dict{Symbol, Symbol} = Dict(:bidder1 => :1, :bidder2 => :2 - the colours for the CSE lines for each bidder (the keys in the dictionary must be as shown)\nadd_knots::Bool = true - whether or not to show the knot points on the graph\nknots_label::Dict{Symbol, String} = Dict(:bidder1 => \"Knots (1)\", :bidder2 => \"Knots (2)\") - the labels for the knot points for each bidder (the keys in the dictionary must be as shown)\n\nIn addition to the above options, cseplot will set a default title and xlabel and ylabel, however these can be overriden with keyword arguments.\n\n\n\n\n\n","category":"function"},{"location":"basics/solve/#Solving-a-CSE-problem","page":"Solving a CSE","title":"Solving a CSE problem","text":"","category":"section"},{"location":"basics/solve/","page":"Solving a CSE","title":"Solving a CSE","text":"Steps to solve...","category":"page"},{"location":"basics/solve/#ConstrainedStrategicEquilibrium.compute_cse-basics-solve","page":"Solving a CSE","title":"ConstrainedStrategicEquilibrium.compute_cse","text":"compute_cse(\n    cse_problem::ConstrainedStrategicEquilibrium.CSEProblem\n) -> Union{Vector{ConstrainedStrategicEquilibrium.AsymmetricCSESolution}, Vector{ConstrainedStrategicEquilibrium.SymmetricCSESolution}}\n\n\nSolve the given CSE problem.\n\nThis is a wrapper function that will first validate the problem and generate the data before solving the CSE problem and returning the vector of solutions.\n\nExamples\n\njulia> prob = SymmetricJaePoly1CSEProblem()\nSymmetricJaePoly1CSEProblem(np=4, mc=10000, n=1..12, Distributions.Kumaraswamy{Float64}(a=2.5, b=3.5))\n\njulia> solutions = compute_cse(prob)\n[ Info: mean and std player 1: 0.4957361972625512, 0.18748491448182267\n[ Info: mean and std player 2: 0.5000858627485552, 0.18774978658869976\n[ Info: mean and std player 3: 0.496651263173003, 0.18645006296589822\n[ Info: mean and std player 4: 0.5021607262564288, 0.18574470364076182\n[ Info: Computing: SymmetricJaePoly1CSEProblem(np=4, mc=10000, n=1..12, Kumaraswamy(a=2.5, b=3.5))\n[ Info: SymmetricCSESolution(n=01, MSE=1.63e-03, C_1=NaN, C_2=9.48e-16)\n[ Info: SymmetricCSESolution(n=02, MSE=6.62e-04, C_1=5.80e-03, C_2=1.91e-16)\n[ Info: SymmetricCSESolution(n=03, MSE=9.80e-05, C_1=3.45e-03, C_2=1.15e-13)\n[ Info: SymmetricCSESolution(n=04, MSE=1.75e-05, C_1=5.70e-04, C_2=4.09e-14)\n[ Info: SymmetricCSESolution(n=05, MSE=7.30e-05, C_1=1.24e-03, C_2=1.00e-16)\n[ Info: SymmetricCSESolution(n=06, MSE=6.51e-05, C_1=1.64e-03, C_2=1.70e-14)\n[ Info: SymmetricCSESolution(n=07, MSE=1.95e-05, C_1=1.23e-03, C_2=4.07e-16)\n[ Info: SymmetricCSESolution(n=08, MSE=1.94e-06, C_1=5.75e-04, C_2=2.06e-14)\n[ Info: SymmetricCSESolution(n=09, MSE=2.59e-07, C_1=8.99e-05, C_2=2.10e-13)\n[ Info: SymmetricCSESolution(n=10, MSE=1.17e-06, C_1=1.53e-04, C_2=6.20e-14)\n[ Info: SymmetricCSESolution(n=11, MSE=1.53e-06, C_1=1.58e-05, C_2=3.61e-13)\n[ Info: SymmetricCSESolution(n=12, MSE=5.77e-07, C_1=4.83e-05, C_2=8.63e-14)\n12-element Vector{ConstrainedStrategicEquilibrium.SymmetricCSESolution}:\n SymmetricCSESolution(n=01, MSE=1.63e-03, C_1=NaN, C_2=9.48e-16)\n SymmetricCSESolution(n=02, MSE=6.62e-04, C_1=5.80e-03, C_2=1.91e-16)\n SymmetricCSESolution(n=03, MSE=9.80e-05, C_1=3.45e-03, C_2=1.15e-13)\n SymmetricCSESolution(n=04, MSE=1.75e-05, C_1=5.70e-04, C_2=4.09e-14)\n SymmetricCSESolution(n=05, MSE=7.30e-05, C_1=1.24e-03, C_2=1.00e-16)\n SymmetricCSESolution(n=06, MSE=6.51e-05, C_1=1.64e-03, C_2=1.70e-14)\n SymmetricCSESolution(n=07, MSE=1.95e-05, C_1=1.23e-03, C_2=4.07e-16)\n SymmetricCSESolution(n=08, MSE=1.94e-06, C_1=5.75e-04, C_2=2.06e-14)\n SymmetricCSESolution(n=09, MSE=2.59e-07, C_1=8.99e-05, C_2=2.10e-13)\n SymmetricCSESolution(n=10, MSE=1.17e-06, C_1=1.53e-04, C_2=6.20e-14)\n SymmetricCSESolution(n=11, MSE=1.53e-06, C_1=1.58e-05, C_2=3.61e-13)\n SymmetricCSESolution(n=12, MSE=5.77e-07, C_1=4.83e-05, C_2=8.63e-14)\n\n\n\n\n\ncompute_cse(\n    cse_problem::SymmetricAfrprogsCSEProblem,\n    u::Array{Float64}\n) -> Vector{ConstrainedStrategicEquilibrium.SymmetricCSESolution}\n\n\nSpecific implementation of compute_cse for the afr-progs symmetric case.\n\nCall this function if you have already manually validated the problem and generated the data. The data must have shape (cse_problem.mc, cse_problem.np).\n\n\n\n\n\ncompute_cse(\n    cse_problem::SymmetricJaePoly1CSEProblem,\n    u::Array{Float64}\n) -> Vector{ConstrainedStrategicEquilibrium.SymmetricCSESolution}\n\n\nSpecific implementation of compute_cse for the \"jae_poly_1\" symmetric case.\n\nCall this function if you have already manually validated the problem and generated the data. The data must have shape (cse_problem.mc, cse_problem.np).\n\n\n\n\n\ncompute_cse(\n    cse_problem::AsymmetricAfrprogsCSEProblem,\n    u::Array{Float64}\n) -> Vector{ConstrainedStrategicEquilibrium.AsymmetricCSESolution}\n\n\nSpecific implementation of compute_cse for the afr-progs asymmetric case.\n\nCall this function if you have already manually validated the problem and generated the data. The data must have shape (cse_problem.mc, cse_problem.np).\n\n\n\n\n\n","category":"function"},{"location":"basics/cse_problem/#CSE-problems","page":"CSE problems","title":"CSE problems","text":"","category":"section"},{"location":"basics/cse_problem/","page":"CSE problems","title":"CSE problems","text":"We have implemented the following forms for the CSE.","category":"page"},{"location":"basics/cse_problem/#ConstrainedStrategicEquilibrium.CSEProblem-basics-cse_problem","page":"CSE problems","title":"ConstrainedStrategicEquilibrium.CSEProblem","text":"abstract type CSEProblem\n\nBase type for all CSE problems.\n\n\n\n\n\n","category":"type"},{"location":"basics/cse_problem/#Symmetric-problems","page":"CSE problems","title":"Symmetric problems","text":"","category":"section"},{"location":"basics/cse_problem/#ConstrainedStrategicEquilibrium.SymmetricCSEProblem-basics-cse_problem","page":"CSE problems","title":"ConstrainedStrategicEquilibrium.SymmetricCSEProblem","text":"abstract type SymmetricCSEProblem <: ConstrainedStrategicEquilibrium.CSEProblem\n\nBase type for all symmetric CSE problems.\n\n\n\n\n\n","category":"type"},{"location":"basics/cse_problem/#ConstrainedStrategicEquilibrium.SymmetricJaePoly1CSEProblem-basics-cse_problem","page":"CSE problems","title":"ConstrainedStrategicEquilibrium.SymmetricJaePoly1CSEProblem","text":"struct SymmetricJaePoly1CSEProblem <: ConstrainedStrategicEquilibrium.SymmetricCSEProblem\n\nThe jae_poly_1 symmetric CSE problem from Computer_Code_CSE based on the paper by Armantier et al., \"Approximation of Nash equilibria in Bayesian games\" [1].\n\nParameters can be passed in as keyword arguments or can be omitted to accept the default values.\n\nrng::Random.AbstractRNG: Random number generator to use during data generation (default rng is seeded with 642867)\nmc::Int64: Number of Monte Carlo steps (default is 10000)\nnp::Int64: Number of players (default is 4)\ndistribution::Distributions.UnivariateDistribution: Distribution to use (default is Kumaraswamy(2.5, 3.5))\ninin::Int64: Initial value for n (default is 1)\nmaxn::Int64: Maximum value for n (default is 12)\nlegacy_output::Bool: Write txt and csv files with solution info (default is false)\nsolver::Union{Nothing, SciMLBase.AbstractNonlinearAlgorithm}: The solver to use (default is to use the default set by NonlinearSolve.jl)\nsolver_kwargs::NamedTuple: Keyword arguments to pass to the solve command, such as abstol, reltol, maxiters, etc.\nsolver_initial_guess::Union{Nothing, Vector{Float64}}: Initial guess to pass to the solver, if not provided use a default initial guess (must be length inin)\n\nExamples\n\njulia> prob = SymmetricJaePoly1CSEProblem()\nSymmetricJaePoly1CSEProblem(np=4, mc=10000, n=1..12, Distributions.Kumaraswamy{Float64}(a=2.5, b=3.5))\n\njulia> prob = SymmetricJaePoly1CSEProblem(np=2, mc=1000, maxn=8, distribution=Beta(3, 4))\nSymmetricJaePoly1CSEProblem(np=2, mc=1000, n=1..8, Distributions.Beta{Float64}(α=3.0, β=4.0))\n\nReferences\n\n[1] Armantier et al. Journal of Applied Econometrics, 23 (2008)\n\n\n\n\n\n","category":"type"},{"location":"basics/cse_problem/#ConstrainedStrategicEquilibrium.SymmetricAfrprogsCSEProblem-basics-cse_problem","page":"CSE problems","title":"ConstrainedStrategicEquilibrium.SymmetricAfrprogsCSEProblem","text":"struct SymmetricAfrprogsCSEProblem <: ConstrainedStrategicEquilibrium.SymmetricCSEProblem\n\nThe symmetric CSE problem adapted from the Fortran code released by Armantier et al. alongside their paper, \"Approximation of Nash equilibria in Bayesian games\" [1].\n\nParameters can be passed in as keyword arguments or can be omitted to accept the default values.\n\nrng::Random.AbstractRNG: Random number generator to use during data generation (default rng is seeded with 642867)\nmc::Int64: Number of Monte Carlo steps (default is 10000)\nnp::Int64: Number of players (default is 2)\ndistribution::Distributions.UnivariateDistribution: Distribution to use (default is Beta(3, 3))\ninin::Int64: Initial value for n (default is 2)\nmaxn::Int64: Maximum value for n (default is 16)\nknot_refinement_strategy::Symbol: Knot refinement strategy. Can be :highest_curvature or :even_spacing. (default is :highest_curvature)\nlegacy_output::Bool: Write txt and csv files with solution info\nsolver::Union{Nothing, SciMLBase.AbstractNonlinearAlgorithm}: The solver to use (default is to use the default solver from NonlinearSolve.jl)\nsolver_kwargs::NamedTuple: Keyword arguments to pass to the solve command, such as abstol, reltol, maxiters, etc.\nsolver_initial_guess::Union{Nothing, Vector{Float64}}: Initial guess to pass to the solver, if not provided use a default initial guess (must be length inin)\ninitial_knots::Union{Nothing, Vector{Float64}}: Initial knot positions to use (must be length inin + 1, start with 0.0, and end with 1.0)\n\nExamples\n\njulia> prob = SymmetricAfrprogsCSEProblem()\nSymmetricAfrprogsCSEProblem(np=4, mc=10000, n=2..16, Distributions.Beta{Float64}(α=3.0, β=3.0))\n\njulia> prob = SymmetricAfrprogsCSEProblem(mc = 1000, maxn = 12, distribution = Beta(3, 4))\nSymmetricAfrprogsCSEProblem(np=4, mc=1000, n=2..12, Distributions.Beta{Float64}(α=3.0, β=4.0))\n\nReferences\n\n[1] Armantier et al. Journal of Applied Econometrics, 23 (2008)\n\n\n\n\n\n","category":"type"},{"location":"basics/cse_problem/#Asymmetric-problems","page":"CSE problems","title":"Asymmetric problems","text":"","category":"section"},{"location":"basics/cse_problem/#ConstrainedStrategicEquilibrium.AsymmetricCSEProblem-basics-cse_problem","page":"CSE problems","title":"ConstrainedStrategicEquilibrium.AsymmetricCSEProblem","text":"abstract type AsymmetricCSEProblem <: ConstrainedStrategicEquilibrium.CSEProblem\n\nBase type for all asymmetric CSE problems.\n\n\n\n\n\n","category":"type"},{"location":"basics/cse_problem/#ConstrainedStrategicEquilibrium.AsymmetricAfrprogsCSEProblem-basics-cse_problem","page":"CSE problems","title":"ConstrainedStrategicEquilibrium.AsymmetricAfrprogsCSEProblem","text":"struct AsymmetricAfrprogsCSEProblem <: ConstrainedStrategicEquilibrium.AsymmetricCSEProblem\n\nThe asymmetric CSE problem adapted from the Fortran code released by Armantier et al. alongside their paper, \"Approximation of Nash equilibria in Bayesian games\" [1].\n\nThis problem can have either 2 or 4 players. In the case of 4 players, players 1 and 2 must have the same distribution and players 3 and 4 must have the same distribution.\n\nNote regarding the solver: cdf does not seem to support dual numbers so you may need to specify a different option for autodiff, e.g. autodiff=AutoFiniteDiff(), instead of the default ForwardDiff().\n\nParameters can be passed in as keyword arguments or can be omitted to accept the default values.\n\nrng::Random.AbstractRNG: Random number generator to use during data generation (default rng is seeded with 642867)\nmc::Int64: Number of Monte Carlo steps (default is 10000)\nnp::Int64: Number of players, which must be 2 or 4 currently (default is 4)\ndistributions::Vector{Distributions.UnivariateDistribution}: Distributions to use, which should be a Vector of length 2 or 4. With 4 players, the first 2 players and second 2 players must have the same distributions respectively.\ninin::Int64: Initial value for n (default is 16)\nmaxn::Int64: Maximum value for n (default is 17)\nknot_refinement_strategy::Symbol: Knot refinement strategy. Can be :steepest_slope, :highest_curvature, :even_spacing, or :double_knot. (default is :steepest_slope)\nlegacy_output::Bool: Write txt and csv files with solution info (default is False, most of this info is included in the solution objects that get return from compute_cse)\nsolver::Union{Nothing, SciMLBase.AbstractNonlinearAlgorithm}: The solver to use (default is to use Broyden(; init_jacobian=Val(:true_jacobian), autodiff=AutoFiniteDiff()))\nsolver_kwargs::NamedTuple: Keyword arguments to pass to the solve command, such as abstol, reltol, maxiters, etc. Add show_trace=Val(true) to output extra info from the solver.\nsolver_initial_guess::Union{Nothing, Vector{Float64}}: Initial guess to pass to the solver, if not provided use a default initial guess (must be length 2 * inin - 1)\ninitial_knots::Union{Nothing, Vector{Float64}}: Initial knot positions to use, if not provided use a default initial guess (must be length inin + 1)\n\nReferences\n\n[1] Armantier et al. Journal of Applied Econometrics, 23 (2008)\n\n\n\n\n\n","category":"type"},{"location":"generated/jae-poly-1/#Symmetric-CSE-example-polynomial-form","page":"Symmetric CSE - polynomial","title":"Symmetric CSE example - polynomial form","text":"","category":"section"},{"location":"generated/jae-poly-1/","page":"Symmetric CSE - polynomial","title":"Symmetric CSE - polynomial","text":"This is a simple example of how to run the jae_poly_1 symmetric CSE case from Computer_Code_CSE coming from the work by Armantier et al. [1].","category":"page"},{"location":"generated/jae-poly-1/#Install-dependencies","page":"Symmetric CSE - polynomial","title":"Install dependencies","text":"","category":"section"},{"location":"generated/jae-poly-1/","page":"Symmetric CSE - polynomial","title":"Symmetric CSE - polynomial","text":"Make sure the required packages are installed by running the following from the root directory of this repo:","category":"page"},{"location":"generated/jae-poly-1/","page":"Symmetric CSE - polynomial","title":"Symmetric CSE - polynomial","text":"using Pkg\nPkg.instantiate()","category":"page"},{"location":"generated/jae-poly-1/#Load-required-modules","page":"Symmetric CSE - polynomial","title":"Load required modules","text":"","category":"section"},{"location":"generated/jae-poly-1/","page":"Symmetric CSE - polynomial","title":"Symmetric CSE - polynomial","text":"using ConstrainedStrategicEquilibrium\nusing Plots\nusing NonlinearSolve\nusing Distributions","category":"page"},{"location":"generated/jae-poly-1/#Create-the-symmetric-CSE-problem","page":"Symmetric CSE - polynomial","title":"Create the symmetric CSE problem","text":"","category":"section"},{"location":"generated/jae-poly-1/","page":"Symmetric CSE - polynomial","title":"Symmetric CSE - polynomial","text":"Create the CSE problem with two players and a maximum n value of 12:","category":"page"},{"location":"generated/jae-poly-1/","page":"Symmetric CSE - polynomial","title":"Symmetric CSE - polynomial","text":"cse_prob = SymmetricJaePoly1CSEProblem(np=2, maxn=12)","category":"page"},{"location":"generated/jae-poly-1/","page":"Symmetric CSE - polynomial","title":"Symmetric CSE - polynomial","text":"SymmetricJaePoly1CSEProblem(np=2, mc=10000, n=1..12, Kumaraswamy(a=2.5, b=3.5))","category":"page"},{"location":"generated/jae-poly-1/#Compute-the-CSE","page":"Symmetric CSE - polynomial","title":"Compute the CSE","text":"","category":"section"},{"location":"generated/jae-poly-1/","page":"Symmetric CSE - polynomial","title":"Symmetric CSE - polynomial","text":"Now compute the CSE for the problem we created","category":"page"},{"location":"generated/jae-poly-1/","page":"Symmetric CSE - polynomial","title":"Symmetric CSE - polynomial","text":"solutions = compute_cse(cse_prob)","category":"page"},{"location":"generated/jae-poly-1/","page":"Symmetric CSE - polynomial","title":"Symmetric CSE - polynomial","text":"12-element Vector{ConstrainedStrategicEquilibrium.SymmetricCSESolution}:\n SymmetricCSESolution(n=01, MSE=1.65e-03, C_1=NaN, C_2=3.27e-15)\n SymmetricCSESolution(n=02, MSE=4.73e-04, C_1=5.70e-03, C_2=9.08e-17)\n SymmetricCSESolution(n=03, MSE=4.39e-06, C_1=2.31e-03, C_2=1.97e-17)\n SymmetricCSESolution(n=04, MSE=1.37e-05, C_1=1.69e-04, C_2=3.64e-16)\n SymmetricCSESolution(n=05, MSE=8.48e-06, C_1=6.47e-04, C_2=2.86e-13)\n SymmetricCSESolution(n=06, MSE=2.28e-06, C_1=4.36e-04, C_2=1.59e-15)\n SymmetricCSESolution(n=07, MSE=2.51e-07, C_1=1.98e-04, C_2=8.47e-15)\n SymmetricCSESolution(n=08, MSE=1.07e-08, C_1=5.44e-05, C_2=2.49e-15)\n SymmetricCSESolution(n=09, MSE=1.32e-08, C_1=1.94e-06, C_2=2.16e-13)\n SymmetricCSESolution(n=10, MSE=1.29e-08, C_1=1.46e-05, C_2=8.96e-15)\n SymmetricCSESolution(n=11, MSE=1.06e-08, C_1=1.30e-05, C_2=4.36e-13)\n SymmetricCSESolution(n=12, MSE=1.03e-08, C_1=2.34e-07, C_2=3.09e-13)","category":"page"},{"location":"generated/jae-poly-1/#Postprocessing","page":"Symmetric CSE - polynomial","title":"Postprocessing","text":"","category":"section"},{"location":"generated/jae-poly-1/","page":"Symmetric CSE - polynomial","title":"Symmetric CSE - polynomial","text":"Plot the final successful solution comparing the computed CSE to the \"analytical\" Bayes-Nash Equilibrium.","category":"page"},{"location":"generated/jae-poly-1/","page":"Symmetric CSE - polynomial","title":"Symmetric CSE - polynomial","text":"for sol in Iterators.reverse(solutions)\n    if sol.success\n        cseplot(sol, dpi=400)\n        savefig(\"jae-poly-1.png\")\n        break\n    end\nend","category":"page"},{"location":"generated/jae-poly-1/","page":"Symmetric CSE - polynomial","title":"Symmetric CSE - polynomial","text":"View the plot showing the CSE and BNE: (Image: jae-poly-1.png)","category":"page"},{"location":"generated/jae-poly-1/#References","page":"Symmetric CSE - polynomial","title":"References","text":"","category":"section"},{"location":"generated/jae-poly-1/","page":"Symmetric CSE - polynomial","title":"Symmetric CSE - polynomial","text":"[1] Armantier et al. Journal of Applied Econometrics, 23 (2008)","category":"page"},{"location":"generated/jae-poly-1/","page":"Symmetric CSE - polynomial","title":"Symmetric CSE - polynomial","text":"","category":"page"},{"location":"generated/jae-poly-1/","page":"Symmetric CSE - polynomial","title":"Symmetric CSE - polynomial","text":"This page was generated using Literate.jl.","category":"page"},{"location":"#ConstrainedStrategicEquilibrium.jl","page":"Home","title":"ConstrainedStrategicEquilibrium.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"ConstrainedStrategicEquilibrium.jl is a Julia package for solving Constrained Strategic Equilibrium (CSE) problems in game theory and economics.","category":"page"},{"location":"","page":"Home","title":"Home","text":"It has been implemented based on the work by Armantier et al [1] and the Fortran code released alongside that publication.","category":"page"},{"location":"#Features","page":"Home","title":"Features","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Multiple Problem Types: Symmetric and asymmetric CSE problems\nFlexible Algorithms: Support for NonlinearSolve.jl solvers\nBuilt-in Visualization: Plotting recipes with RecipesBase\nData Export: Results as DataFrames for easy analysis","category":"page"},{"location":"#Problem-Types-Supported","page":"Home","title":"Problem Types Supported","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"SymmetricAfrprogsCSEProblem - Symmetric piecewise linear CSE form\nSymmetricJaePoly1CSEProblem - Symmetric polynomial CSE form\nAsymmetricAfrprogsCSEProblem - Asymmetric piecewise linear CSE form","category":"page"},{"location":"#Quick-start","page":"Home","title":"Quick start","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"From the source code directory run:","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia --project -e 'using Pkg; Pkg.instantiate()'","category":"page"},{"location":"","page":"Home","title":"Home","text":"Then in the julia repl (enter by running julia --project):","category":"page"},{"location":"","page":"Home","title":"Home","text":"using ConstrainedStrategicEquilbrium\n\n# create a CSE problem with default options\nprob = SymmetricJaePoly1CSEProblem()\n\n# solve the CSE problem\nsolutions = compute_cse(prob)\n\n# print the vector of solutions\nprintln(solutions)\n\n# plot the last solution\nusing Plots\ncseplot(solutions[end]; dpi=300)\nsavefig(\"jae-poly-1-result.png\")\n\n# store the computed CSE/BNE to csv file\nusing CSV\nCSV.write(\"cse_result.csv\", solutions[end].cse)","category":"page"}]
}
